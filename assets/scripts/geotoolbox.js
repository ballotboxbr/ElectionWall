!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).geotoolbox={})}(this,(function(t){"use strict";function e(t){return"FeatureCollection"!=(t=JSON.parse(JSON.stringify(t))).type||Array.isArray(t)?Array.isArray(t)&&null!=t[0].type&&null!=t[0].properties&&null!=t[0].geometry?{type:"FeatureCollection",features:t}:Array.isArray(t)&&null!=t[0].type&&null!=t[0].coordinates?{type:"FeatureCollection",features:t.map((t=>({type:"Feature",properties:{},geometry:t})))}:"object"==typeof t&&["Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon"].includes(t.type)?{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:t}]}:"object"==typeof t&&"Feature"==t.type?{type:"FeatureCollection",features:[t]}:t:t}function n(t,e){if(0!==t.length){i(t[0],e);for(let n=1;n<t.length;n++)i(t[n],!e)}}function i(t,e){let n=0,i=0;for(let e=0,s=t.length,r=s-1;e<s;r=e++){const s=(t[e][0]-t[r][0])*(t[r][1]+t[e][1]),o=n+s;i+=Math.abs(n)>=Math.abs(s)?n-o+s:s-o+n,n=o}n+i>=0!=!!e&&t.reverse()}function s(t){let e=Array.from(new Set(t.features.map((t=>t.geometry.type)))),n=[];return-1===e.indexOf("Polygon")&&-1===e.indexOf("MultiPolygon")||n.push(3),-1===e.indexOf("LineString")&&-1===e.indexOf("MultiLineString")||n.push(2),-1===e.indexOf("Point")&&-1===e.indexOf("MultiPoint")||n.push(1),{dimension:1==n.length?n[0]:-1,types:e}}var r=Object.prototype.hasOwnProperty;function o(t,e,n,i,s,r){3===arguments.length&&(i=r=Array,s=null);for(var o=new i(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),a=new r(t),l=t-1,c=0;c<t;++c)o[c]=s;return{set:function(i,r){for(var c=e(i)&l,h=o[c],u=0;h!=s;){if(n(h,i))return a[c]=r;if(++u>=t)throw new Error("full hashmap");h=o[c=c+1&l]}return o[c]=i,a[c]=r,r},maybeSet:function(i,r){for(var c=e(i)&l,h=o[c],u=0;h!=s;){if(n(h,i))return a[c];if(++u>=t)throw new Error("full hashmap");h=o[c=c+1&l]}return o[c]=i,a[c]=r,r},get:function(i,r){for(var c=e(i)&l,h=o[c],u=0;h!=s;){if(n(h,i))return a[c];if(++u>=t)break;h=o[c=c+1&l]}return r},keys:function(){for(var t=[],e=0,n=o.length;e<n;++e){var i=o[e];i!=s&&t.push(i)}return t}}}function a(t,e){return t[0]===e[0]&&t[1]===e[1]}var l=new ArrayBuffer(16),c=new Float64Array(l),h=new Uint32Array(l);function u(t){c[0]=t[0],c[1]=t[1];var e=h[0]^h[1];return 2147483647&(e=e<<5^e>>7^h[2]^h[3])}function g(t){var e,n,i,s,r=t.coordinates,l=t.lines,c=t.rings,h=function(){for(var t=o(1.4*r.length,w,C,Int32Array,-1,Int32Array),e=new Int32Array(r.length),n=0,i=r.length;n<i;++n)e[n]=t.maybeSet(n,n);return e}(),g=new Int32Array(r.length),d=new Int32Array(r.length),f=new Int32Array(r.length),p=new Int8Array(r.length),_=0;for(e=0,n=r.length;e<n;++e)g[e]=d[e]=f[e]=-1;for(e=0,n=l.length;e<n;++e){var m=l[e],y=m[0],E=m[1];for(i=h[y],s=h[++y],++_,p[i]=1;++y<=E;)S(e,i,i=s,s=h[y]);++_,p[s]=1}for(e=0,n=r.length;e<n;++e)g[e]=-1;for(e=0,n=c.length;e<n;++e){var x=c[e],I=x[0]+1,N=x[1];for(S(e,h[N-1],i=h[I-1],s=h[I]);++I<=N;)S(e,i,i=s,s=h[I])}function S(t,e,n,i){if(g[n]!==t){g[n]=t;var s=d[n];if(s>=0){var r=f[n];s===e&&r===i||s===i&&r===e||(++_,p[n]=1)}else d[n]=e,f[n]=i}}function w(t){return u(r[t])}function C(t,e){return a(r[t],r[e])}g=d=f=null;var L,T=function(t,e,n,i,s){3===arguments.length&&(i=Array,s=null);for(var r=new i(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),o=t-1,a=0;a<t;++a)r[a]=s;return{add:function(i){for(var a=e(i)&o,l=r[a],c=0;l!=s;){if(n(l,i))return!0;if(++c>=t)throw new Error("full hashset");l=r[a=a+1&o]}return r[a]=i,!0},has:function(i){for(var a=e(i)&o,l=r[a],c=0;l!=s;){if(n(l,i))return!0;if(++c>=t)break;l=r[a=a+1&o]}return!1},values:function(){for(var t=[],e=0,n=r.length;e<n;++e){var i=r[e];i!=s&&t.push(i)}return t}}}(1.4*_,u,a);for(e=0,n=r.length;e<n;++e)p[L=h[e]]&&T.add(r[L]);return T}function d(t,e,n,i){f(t,e,n),f(t,e,e+i),f(t,e+i,n)}function f(t,e,n){for(var i,s=e+(n---e>>1);e<s;++e,--n)i=t[e],t[e]=t[n],t[n]=i}function p(t){var e,n,i={};for(e in t)i[e]=null==(n=t[e])?{type:null}:("FeatureCollection"===n.type?_:"Feature"===n.type?m:y)(n);return i}function _(t){var e={type:"GeometryCollection",geometries:t.features.map(m)};return null!=t.bbox&&(e.bbox=t.bbox),e}function m(t){var e,n=y(t.geometry);for(e in null!=t.id&&(n.id=t.id),null!=t.bbox&&(n.bbox=t.bbox),t.properties){n.properties=t.properties;break}return n}function y(t){if(null==t)return{type:null};var e="GeometryCollection"===t.type?{type:"GeometryCollection",geometries:t.geometries.map(y)}:"Point"===t.type||"MultiPoint"===t.type?{type:t.type,coordinates:t.coordinates}:{type:t.type,arcs:t.coordinates};return null!=t.bbox&&(e.bbox=t.bbox),e}function E(t,e){var n=function(t){var e=1/0,n=1/0,i=-1/0,s=-1/0;function o(t){null!=t&&r.call(a,t.type)&&a[t.type](t)}var a={GeometryCollection:function(t){t.geometries.forEach(o)},Point:function(t){l(t.coordinates)},MultiPoint:function(t){t.coordinates.forEach(l)},LineString:function(t){c(t.arcs)},MultiLineString:function(t){t.arcs.forEach(c)},Polygon:function(t){t.arcs.forEach(c)},MultiPolygon:function(t){t.arcs.forEach(h)}};function l(t){var r=t[0],o=t[1];r<e&&(e=r),r>i&&(i=r),o<n&&(n=o),o>s&&(s=o)}function c(t){t.forEach(l)}function h(t){t.forEach(c)}for(var u in t)o(t[u]);return i>=e&&s>=n?[e,n,i,s]:void 0}(t=p(t)),i=e>0&&n&&function(t,e,n){var i=e[0],s=e[1],o=e[2],a=e[3],l=o-i?(n-1)/(o-i):1,c=a-s?(n-1)/(a-s):1;function h(t){return[Math.round((t[0]-i)*l),Math.round((t[1]-s)*c)]}function u(t,e){for(var n,r,o,a,h,u=-1,g=0,d=t.length,f=new Array(d);++u<d;)n=t[u],a=Math.round((n[0]-i)*l),h=Math.round((n[1]-s)*c),a===r&&h===o||(f[g++]=[r=a,o=h]);for(f.length=g;g<e;)g=f.push([f[0][0],f[0][1]]);return f}function g(t){return u(t,2)}function d(t){return u(t,4)}function f(t){return t.map(d)}function p(t){null!=t&&r.call(_,t.type)&&_[t.type](t)}var _={GeometryCollection:function(t){t.geometries.forEach(p)},Point:function(t){t.coordinates=h(t.coordinates)},MultiPoint:function(t){t.coordinates=t.coordinates.map(h)},LineString:function(t){t.arcs=g(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(g)},Polygon:function(t){t.arcs=f(t.arcs)},MultiPolygon:function(t){t.arcs=t.arcs.map(f)}};for(var m in t)p(t[m]);return{scale:[1/l,1/c],translate:[i,s]}}(t,n,e),s=function(t){var e,n,i,s,r=t.coordinates,l=t.lines,c=t.rings,h=l.length+c.length;for(delete t.lines,delete t.rings,i=0,s=l.length;i<s;++i)for(e=l[i];e=e.next;)++h;for(i=0,s=c.length;i<s;++i)for(n=c[i];n=n.next;)++h;var g=o(2*h*1.4,u,a),d=t.arcs=[];for(i=0,s=l.length;i<s;++i){e=l[i];do{f(e)}while(e=e.next)}for(i=0,s=c.length;i<s;++i)if((n=c[i]).next)do{f(n)}while(n=n.next);else p(n);function f(t){var e,n,i,s,o,a,l,c;if(i=g.get(e=r[t[0]]))for(l=0,c=i.length;l<c;++l)if(_(s=i[l],t))return t[0]=s[0],void(t[1]=s[1]);if(o=g.get(n=r[t[1]]))for(l=0,c=o.length;l<c;++l)if(m(a=o[l],t))return t[1]=a[0],void(t[0]=a[1]);i?i.push(t):g.set(e,[t]),o?o.push(t):g.set(n,[t]),d.push(t)}function p(t){var e,n,i,s,o;if(n=g.get(r[t[0]]))for(s=0,o=n.length;s<o;++s){if(y(i=n[s],t))return t[0]=i[0],void(t[1]=i[1]);if(E(i,t))return t[0]=i[1],void(t[1]=i[0])}if(n=g.get(e=r[t[0]+x(t)]))for(s=0,o=n.length;s<o;++s){if(y(i=n[s],t))return t[0]=i[0],void(t[1]=i[1]);if(E(i,t))return t[0]=i[1],void(t[1]=i[0])}n?n.push(t):g.set(e,[t]),d.push(t)}function _(t,e){var n=t[0],i=e[0],s=t[1];if(n-s!=i-e[1])return!1;for(;n<=s;++n,++i)if(!a(r[n],r[i]))return!1;return!0}function m(t,e){var n=t[0],i=e[0],s=t[1],o=e[1];if(n-s!=i-o)return!1;for(;n<=s;++n,--o)if(!a(r[n],r[o]))return!1;return!0}function y(t,e){var n=t[0],i=e[0],s=t[1]-n;if(s!==e[1]-i)return!1;for(var o=x(t),l=x(e),c=0;c<s;++c)if(!a(r[n+(c+o)%s],r[i+(c+l)%s]))return!1;return!0}function E(t,e){var n=t[0],i=e[0],s=t[1],o=e[1],l=s-n;if(l!==o-i)return!1;for(var c=x(t),h=l-x(e),u=0;u<l;++u)if(!a(r[n+(u+c)%l],r[o-(u+h)%l]))return!1;return!0}function x(t){for(var e=t[0],n=t[1],i=e,s=i,o=r[i];++i<n;){var a=r[i];(a[0]<o[0]||a[0]===o[0]&&a[1]<o[1])&&(s=i,o=a)}return s-e}return t}(function(t){var e,n,i,s=g(t),r=t.coordinates,o=t.lines,a=t.rings;for(n=0,i=o.length;n<i;++n)for(var l=o[n],c=l[0],h=l[1];++c<h;)s.has(r[c])&&(e={0:c,1:l[1]},l[1]=c,l=l.next=e);for(n=0,i=a.length;n<i;++n)for(var u=a[n],f=u[0],p=f,_=u[1],m=s.has(r[f]);++p<_;)s.has(r[p])&&(m?(e={0:p,1:u[1]},u[1]=p,u=u.next=e):(d(r,f,_,_-p),r[_]=r[f],m=!0,p=f));return t}(function(t){var e=-1,n=[],i=[],s=[];function o(t){t&&r.call(a,t.type)&&a[t.type](t)}var a={GeometryCollection:function(t){t.geometries.forEach(o)},LineString:function(t){t.arcs=l(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(l)},Polygon:function(t){t.arcs=t.arcs.map(c)},MultiPolygon:function(t){t.arcs=t.arcs.map(h)}};function l(t){for(var i=0,r=t.length;i<r;++i)s[++e]=t[i];var o={0:e-r+1,1:e};return n.push(o),o}function c(t){for(var n=0,r=t.length;n<r;++n)s[++e]=t[n];var o={0:e-r+1,1:e};return i.push(o),o}function h(t){return t.map(c)}for(var u in t)o(t[u]);return{type:"Topology",coordinates:s,lines:n,rings:i,objects:t}}(t))),l=s.coordinates,c=o(1.4*s.arcs.length,x,I);function h(t){t&&r.call(f,t.type)&&f[t.type](t)}t=s.objects,s.bbox=n,s.arcs=s.arcs.map((function(t,e){return c.set(t,e),l.slice(t[0],t[1]+1)})),delete s.coordinates,l=null;var f={GeometryCollection:function(t){t.geometries.forEach(h)},LineString:function(t){t.arcs=_(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(_)},Polygon:function(t){t.arcs=t.arcs.map(_)},MultiPolygon:function(t){t.arcs=t.arcs.map(m)}};function _(t){var e=[];do{var n=c.get(t);e.push(t[0]<t[1]?n:~n)}while(t=t.next);return e}function m(t){return t.map(_)}for(var y in t)h(t[y]);return i&&(s.transform=i,s.arcs=function(t){for(var e=-1,n=t.length;++e<n;){for(var i,s,r=t[e],o=0,a=1,l=r.length,c=r[0],h=c[0],u=c[1];++o<l;)i=(c=r[o])[0],s=c[1],i===h&&s===u||(r[a++]=[i-h,s-u],h=i,u=s);1===a&&(r[a++]=[0,0]),r.length=a}return t}(s.arcs)),s}function x(t){var e,n=t[0],i=t[1];return i<n&&(e=n,n=i,i=e),n+31*i}function I(t,e){var n,i=t[0],s=t[1],r=e[0],o=e[1];return s<i&&(n=i,i=s,s=n),o<r&&(n=r,r=o,o=n),i===r&&s===o}function N(t){return new Function(`return (${t})`)()}function S({x:t,field:e}){let n=[...t.features.map((t=>({...t.properties})))];n.forEach((t=>{Array.isArray(e)?e.forEach((e=>delete t[e])):delete t[e]}));let i=JSON.parse(JSON.stringify(t));return i.features.map(((t,e)=>t.properties={...n[e]})),i}function w(t,e){return null==t||null==e?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function C(t,e){return null==t||null==e?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function L(t){let e,n,i;function s(t,i,s=0,r=t.length){if(s<r){if(0!==e(i,i))return r;do{const e=s+r>>>1;n(t[e],i)<0?s=e+1:r=e}while(s<r)}return s}return 2!==t.length?(e=w,n=(e,n)=>w(t(e),n),i=(e,n)=>t(e)-n):(e=t===w||t===C?t:T,n=t,i=t),{left:s,center:function(t,e,n=0,r=t.length){const o=s(t,e,n,r-1);return o>n&&i(t[o-1],e)>-i(t[o],e)?o-1:o},right:function(t,i,s=0,r=t.length){if(s<r){if(0!==e(i,i))return r;do{const e=s+r>>>1;n(t[e],i)<=0?s=e+1:r=e}while(s<r)}return s}}}function T(){return 0}function R(t){return null===t?NaN:+t}const O=L(w),b=O.right,M=O.left,v=L(R).center;var P=b;const A=F(B),D=F((function(t){const e=B(t);return(t,n,i,s,r)=>{e(t,n,(i<<=2)+0,(s<<=2)+0,r<<=2),e(t,n,i+1,s+1,r),e(t,n,i+2,s+2,r),e(t,n,i+3,s+3,r)}}));function F(t){return function(e,n,i=n){if(!((n=+n)>=0))throw new RangeError("invalid rx");if(!((i=+i)>=0))throw new RangeError("invalid ry");let{data:s,width:r,height:o}=e;if(!((r=Math.floor(r))>=0))throw new RangeError("invalid width");if(!((o=Math.floor(void 0!==o?o:s.length/r))>=0))throw new RangeError("invalid height");if(!r||!o||!n&&!i)return e;const a=n&&t(n),l=i&&t(i),c=s.slice();return a&&l?(G(a,c,s,r,o),G(a,s,c,r,o),G(a,c,s,r,o),q(l,s,c,r,o),q(l,c,s,r,o),q(l,s,c,r,o)):a?(G(a,s,c,r,o),G(a,c,s,r,o),G(a,s,c,r,o)):l&&(q(l,s,c,r,o),q(l,c,s,r,o),q(l,s,c,r,o)),e}}function G(t,e,n,i,s){for(let r=0,o=i*s;r<o;)t(e,n,r,r+=i,1)}function q(t,e,n,i,s){for(let r=0,o=i*s;r<i;++r)t(e,n,r,r+o,i)}function B(t){const e=Math.floor(t);if(e===t)return function(t){const e=2*t+1;return(n,i,s,r,o)=>{if(!((r-=o)>=s))return;let a=t*i[s];const l=o*t;for(let t=s,e=s+l;t<e;t+=o)a+=i[Math.min(r,t)];for(let t=s,c=r;t<=c;t+=o)a+=i[Math.min(r,t+l)],n[t]=a/e,a-=i[Math.max(s,t-l)]}}(t);const n=t-e,i=2*t+1;return(t,s,r,o,a)=>{if(!((o-=a)>=r))return;let l=e*s[r];const c=a*e,h=c+a;for(let t=r,e=r+c;t<e;t+=a)l+=s[Math.min(o,t)];for(let e=r,u=o;e<=u;e+=a)l+=s[Math.min(o,e+c)],t[e]=(l+n*(s[Math.max(r,e-h)]+s[Math.min(o,e+h)]))/i,l-=s[Math.max(r,e-c)]}}function Y(t,e){let n=0;if(void 0===e)for(let e of t)null!=e&&(e=+e)>=e&&++n;else{let i=-1;for(let s of t)null!=(s=e(s,++i,t))&&(s=+s)>=s&&++n}return n}function U(t){return 0|t.length}function z(t){return!(t>0)}function k(t){return"object"!=typeof t||"length"in t?t:Array.from(t)}function X(t,e){let n,i=0,s=0,r=0;if(void 0===e)for(let e of t)null!=e&&(e=+e)>=e&&(n=e-s,s+=n/++i,r+=n*(e-s));else{let o=-1;for(let a of t)null!=(a=e(a,++o,t))&&(a=+a)>=a&&(n=a-s,s+=n/++i,r+=n*(a-s))}if(i>1)return r/(i-1)}function V(t,e){const n=X(t,e);return n?Math.sqrt(n):n}function j(t,e){let n,i;if(void 0===e)for(const e of t)null!=e&&(void 0===n?e>=e&&(n=i=e):(n>e&&(n=e),i<e&&(i=e)));else{let s=-1;for(let r of t)null!=(r=e(r,++s,t))&&(void 0===n?r>=r&&(n=i=r):(n>r&&(n=r),i<r&&(i=r)))}return[n,i]}class H{constructor(){this._partials=new Float64Array(32),this._n=0}add(t){const e=this._partials;let n=0;for(let i=0;i<this._n&&i<32;i++){const s=e[i],r=t+s,o=Math.abs(t)<Math.abs(s)?t-(r-s):s-(r-t);o&&(e[n++]=o),t=r}return e[n]=t,this._n=n+1,this}valueOf(){const t=this._partials;let e,n,i,s=this._n,r=0;if(s>0){for(r=t[--s];s>0&&(e=r,n=t[--s],r=e+n,i=n-(r-e),!i););s>0&&(i<0&&t[s-1]<0||i>0&&t[s-1]>0)&&(n=2*i,e=r+n,n==e-r&&(r=e))}return r}}class W extends Map{constructor(t,e=$){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:e}}),null!=t)for(const[e,n]of t)this.set(e,n)}get(t){return super.get(J(this,t))}has(t){return super.has(J(this,t))}set(t,e){return super.set(K(this,t),e)}delete(t){return super.delete(Q(this,t))}}class Z extends Set{constructor(t,e=$){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:e}}),null!=t)for(const e of t)this.add(e)}has(t){return super.has(J(this,t))}add(t){return super.add(K(this,t))}delete(t){return super.delete(Q(this,t))}}function J({_intern:t,_key:e},n){const i=e(n);return t.has(i)?t.get(i):n}function K({_intern:t,_key:e},n){const i=e(n);return t.has(i)?t.get(i):(t.set(i,n),n)}function Q({_intern:t,_key:e},n){const i=e(n);return t.has(i)&&(n=t.get(i),t.delete(i)),n}function $(t){return null!==t&&"object"==typeof t?t.valueOf():t}function tt(t){return t}function et(t,...e){return at(t,tt,tt,e)}function nt(t,...e){return at(t,Array.from,tt,e)}function it(t,e){for(let n=1,i=e.length;n<i;++n)t=t.flatMap((t=>t.pop().map((([e,n])=>[...t,e,n]))));return t}function st(t,e,...n){return at(t,tt,e,n)}function rt(t,e,...n){return at(t,Array.from,e,n)}function ot(t){if(1!==t.length)throw new Error("duplicate key");return t[0]}function at(t,e,n,i){return function t(s,r){if(r>=i.length)return n(s);const o=new W,a=i[r++];let l=-1;for(const t of s){const e=a(t,++l,s),n=o.get(e);n?n.push(t):o.set(e,[t])}for(const[e,n]of o)o.set(e,t(n,r));return e(o)}(t,0)}function lt(t,e){return Array.from(e,(e=>t[e]))}function ct(t,...e){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");t=Array.from(t);let[n]=e;if(n&&2!==n.length||e.length>1){const i=Uint32Array.from(t,((t,e)=>e));return e.length>1?(e=e.map((e=>t.map(e))),i.sort(((t,n)=>{for(const i of e){const e=ut(i[t],i[n]);if(e)return e}}))):(n=t.map(n),i.sort(((t,e)=>ut(n[t],n[e])))),lt(t,i)}return t.sort(ht(n))}function ht(t=w){if(t===w)return ut;if("function"!=typeof t)throw new TypeError("compare is not a function");return(e,n)=>{const i=t(e,n);return i||0===i?i:(0===t(n,n))-(0===t(e,e))}}function ut(t,e){return(null==t||!(t>=t))-(null==e||!(e>=e))||(t<e?-1:t>e?1:0)}var gt=Array.prototype.slice;function dt(t){return()=>t}const ft=Math.sqrt(50),pt=Math.sqrt(10),_t=Math.sqrt(2);function mt(t,e,n){const i=(e-t)/Math.max(0,n),s=Math.floor(Math.log10(i)),r=i/Math.pow(10,s),o=r>=ft?10:r>=pt?5:r>=_t?2:1;let a,l,c;return s<0?(c=Math.pow(10,-s)/o,a=Math.round(t*c),l=Math.round(e*c),a/c<t&&++a,l/c>e&&--l,c=-c):(c=Math.pow(10,s)*o,a=Math.round(t/c),l=Math.round(e/c),a*c<t&&++a,l*c>e&&--l),l<a&&.5<=n&&n<2?mt(t,e,2*n):[a,l,c]}function yt(t,e,n){if(!((n=+n)>0))return[];if((t=+t)===(e=+e))return[t];const i=e<t,[s,r,o]=i?mt(e,t,n):mt(t,e,n);if(!(r>=s))return[];const a=r-s+1,l=new Array(a);if(i)if(o<0)for(let t=0;t<a;++t)l[t]=(r-t)/-o;else for(let t=0;t<a;++t)l[t]=(r-t)*o;else if(o<0)for(let t=0;t<a;++t)l[t]=(s+t)/-o;else for(let t=0;t<a;++t)l[t]=(s+t)*o;return l}function Et(t,e,n){return mt(t=+t,e=+e,n=+n)[2]}function xt(t,e,n){let i;for(;;){const s=Et(t,e,n);if(s===i||0===s||!isFinite(s))return[t,e];s>0?(t=Math.floor(t/s)*s,e=Math.ceil(e/s)*s):s<0&&(t=Math.ceil(t*s)/s,e=Math.floor(e*s)/s),i=s}}function It(t){return Math.max(1,Math.ceil(Math.log(Y(t))/Math.LN2)+1)}function Nt(){var t=tt,e=j,n=It;function i(i){Array.isArray(i)||(i=Array.from(i));var s,r,o,a=i.length,l=new Array(a);for(s=0;s<a;++s)l[s]=t(i[s],s,i);var c=e(l),h=c[0],u=c[1],g=n(l,h,u);if(!Array.isArray(g)){const t=u,n=+g;if(e===j&&([h,u]=xt(h,u,n)),(g=yt(h,u,n))[0]<=h&&(o=Et(h,u,n)),g[g.length-1]>=u)if(t>=u&&e===j){const t=Et(h,u,n);isFinite(t)&&(t>0?u=(Math.floor(u/t)+1)*t:t<0&&(u=(Math.ceil(u*-t)+1)/-t))}else g.pop()}for(var d=g.length,f=0,p=d;g[f]<=h;)++f;for(;g[p-1]>u;)--p;(f||p<d)&&(g=g.slice(f,p),d=p-f);var _,m=new Array(d+1);for(s=0;s<=d;++s)(_=m[s]=[]).x0=s>0?g[s-1]:h,_.x1=s<d?g[s]:u;if(isFinite(o)){if(o>0)for(s=0;s<a;++s)null!=(r=l[s])&&h<=r&&r<=u&&m[Math.min(d,Math.floor((r-h)/o))].push(i[s]);else if(o<0)for(s=0;s<a;++s)if(null!=(r=l[s])&&h<=r&&r<=u){const t=Math.floor((h-r)*o);m[Math.min(d,t+(g[t]<=r))].push(i[s])}}else for(s=0;s<a;++s)null!=(r=l[s])&&h<=r&&r<=u&&m[P(g,r,0,d)].push(i[s]);return m}return i.value=function(e){return arguments.length?(t="function"==typeof e?e:dt(e),i):t},i.domain=function(t){return arguments.length?(e="function"==typeof t?t:dt([t[0],t[1]]),i):e},i.thresholds=function(t){return arguments.length?(n="function"==typeof t?t:dt(Array.isArray(t)?gt.call(t):t),i):n},i}function St(t,e){let n;if(void 0===e)for(const e of t)null!=e&&(n<e||void 0===n&&e>=e)&&(n=e);else{let i=-1;for(let s of t)null!=(s=e(s,++i,t))&&(n<s||void 0===n&&s>=s)&&(n=s)}return n}function wt(t,e){let n,i=-1,s=-1;if(void 0===e)for(const e of t)++s,null!=e&&(n<e||void 0===n&&e>=e)&&(n=e,i=s);else for(let r of t)null!=(r=e(r,++s,t))&&(n<r||void 0===n&&r>=r)&&(n=r,i=s);return i}function Ct(t,e){let n;if(void 0===e)for(const e of t)null!=e&&(n>e||void 0===n&&e>=e)&&(n=e);else{let i=-1;for(let s of t)null!=(s=e(s,++i,t))&&(n>s||void 0===n&&s>=s)&&(n=s)}return n}function Lt(t,e){let n,i=-1,s=-1;if(void 0===e)for(const e of t)++s,null!=e&&(n>e||void 0===n&&e>=e)&&(n=e,i=s);else for(let r of t)null!=(r=e(r,++s,t))&&(n>r||void 0===n&&r>=r)&&(n=r,i=s);return i}function Tt(t,e,n=0,i=1/0,s){if(e=Math.floor(e),n=Math.floor(Math.max(0,n)),i=Math.floor(Math.min(t.length-1,i)),!(n<=e&&e<=i))return t;for(s=void 0===s?ut:ht(s);i>n;){if(i-n>600){const r=i-n+1,o=e-n+1,a=Math.log(r),l=.5*Math.exp(2*a/3),c=.5*Math.sqrt(a*l*(r-l)/r)*(o-r/2<0?-1:1);Tt(t,e,Math.max(n,Math.floor(e-o*l/r+c)),Math.min(i,Math.floor(e+(r-o)*l/r+c)),s)}const r=t[e];let o=n,a=i;for(Rt(t,n,e),s(t[i],r)>0&&Rt(t,n,i);o<a;){for(Rt(t,o,a),++o,--a;s(t[o],r)<0;)++o;for(;s(t[a],r)>0;)--a}0===s(t[n],r)?Rt(t,n,a):(++a,Rt(t,a,i)),a<=e&&(n=a+1),e<=a&&(i=a-1)}return t}function Rt(t,e,n){const i=t[e];t[e]=t[n],t[n]=i}function Ot(t,e=w){let n,i=!1;if(1===e.length){let s;for(const r of t){const t=e(r);(i?w(t,s)>0:0===w(t,t))&&(n=r,s=t,i=!0)}}else for(const s of t)(i?e(s,n)>0:0===e(s,s))&&(n=s,i=!0);return n}function bt(t,e,n){if(t=Float64Array.from(function*(t,e){if(void 0===e)for(let e of t)null!=e&&(e=+e)>=e&&(yield e);else{let n=-1;for(let i of t)null!=(i=e(i,++n,t))&&(i=+i)>=i&&(yield i)}}(t,n)),(i=t.length)&&!isNaN(e=+e)){if(e<=0||i<2)return Ct(t);if(e>=1)return St(t);var i,s=(i-1)*e,r=Math.floor(s),o=St(Tt(t,r).subarray(0,r+1));return o+(Ct(t.subarray(r+1))-o)*(s-r)}}function Mt(t,e,n=R){if(!isNaN(e=+e)){if(i=Float64Array.from(t,((e,i)=>R(n(t[i],i,t)))),e<=0)return Lt(i);if(e>=1)return wt(i);var i,s=Uint32Array.from(t,((t,e)=>e)),r=i.length-1,o=Math.floor(r*e);return Tt(s,o,0,r,((t,e)=>ut(i[t],i[e]))),(o=Ot(s.subarray(0,o+1),(t=>i[t])))>=0?o:-1}}function vt(t){return Array.from(function*(t){for(const e of t)yield*e}(t))}function Pt(t,e){return[t,e]}function At(t,e=w){if(1===e.length)return Lt(t,e);let n,i=-1,s=-1;for(const r of t)++s,(i<0?0===e(r,r):e(r,n)<0)&&(n=r,i=s);return i}var Dt=Ft(Math.random);function Ft(t){return function(e,n=0,i=e.length){let s=i-(n=+n);for(;s;){const i=t()*s--|0,r=e[s+n];e[s+n]=e[i+n],e[i+n]=r}return e}}function Gt(t){if(!(s=t.length))return[];for(var e=-1,n=Ct(t,qt),i=new Array(n);++e<n;)for(var s,r=-1,o=i[e]=new Array(s);++r<s;)o[r]=t[r][e];return i}function qt(t){return t.length}function Bt(t){return t instanceof Z?t:new Z(t)}function Yt(t,e){const n=t[Symbol.iterator](),i=new Set;for(const t of e){const e=Ut(t);if(i.has(e))continue;let s,r;for(;({value:s,done:r}=n.next());){if(r)return!1;const t=Ut(s);if(i.add(t),Object.is(e,t))break}}return!0}function Ut(t){return null!==t&&"object"==typeof t?t.valueOf():t}var zt=Object.freeze({__proto__:null,bisect:P,bisectRight:b,bisectLeft:M,bisectCenter:v,ascending:w,bisector:L,blur:function(t,e){if(!((e=+e)>=0))throw new RangeError("invalid r");let n=t.length;if(!((n=Math.floor(n))>=0))throw new RangeError("invalid length");if(!n||!e)return t;const i=B(e),s=t.slice();return i(t,s,0,n,1),i(s,t,0,n,1),i(t,s,0,n,1),t},blur2:A,blurImage:D,count:Y,cross:function(...t){const e="function"==typeof t[t.length-1]&&function(t){return e=>t(...e)}(t.pop()),n=(t=t.map(k)).map(U),i=t.length-1,s=new Array(i+1).fill(0),r=[];if(i<0||n.some(z))return r;for(;;){r.push(s.map(((e,n)=>t[n][e])));let o=i;for(;++s[o]===n[o];){if(0===o)return e?r.map(e):r;s[o--]=0}}},cumsum:function(t,e){var n=0,i=0;return Float64Array.from(t,void 0===e?t=>n+=+t||0:s=>n+=+e(s,i++,t)||0)},descending:C,deviation:V,extent:j,Adder:H,fsum:function(t,e){const n=new H;if(void 0===e)for(let e of t)(e=+e)&&n.add(e);else{let i=-1;for(let s of t)(s=+e(s,++i,t))&&n.add(s)}return+n},fcumsum:function(t,e){const n=new H;let i=-1;return Float64Array.from(t,void 0===e?t=>n.add(+t||0):s=>n.add(+e(s,++i,t)||0))},group:et,flatGroup:function(t,...e){return it(nt(t,...e),e)},flatRollup:function(t,e,...n){return it(rt(t,e,...n),n)},groups:nt,index:function(t,...e){return at(t,tt,ot,e)},indexes:function(t,...e){return at(t,Array.from,ot,e)},rollup:st,rollups:rt,groupSort:function(t,e,n){return(2!==e.length?ct(st(t,e,n),(([t,e],[n,i])=>w(e,i)||w(t,n))):ct(et(t,n),(([t,n],[i,s])=>e(n,s)||w(t,i)))).map((([t])=>t))},bin:Nt,histogram:Nt,thresholdFreedmanDiaconis:function(t,e,n){const i=Y(t),s=bt(t,.75)-bt(t,.25);return i&&s?Math.ceil((n-e)/(2*s*Math.pow(i,-1/3))):1},thresholdScott:function(t,e,n){const i=Y(t),s=V(t);return i&&s?Math.ceil((n-e)*Math.cbrt(i)/(3.49*s)):1},thresholdSturges:It,max:St,maxIndex:wt,mean:function(t,e){let n=0,i=0;if(void 0===e)for(let e of t)null!=e&&(e=+e)>=e&&(++n,i+=e);else{let s=-1;for(let r of t)null!=(r=e(r,++s,t))&&(r=+r)>=r&&(++n,i+=r)}if(n)return i/n},median:function(t,e){return bt(t,.5,e)},medianIndex:function(t,e){return Mt(t,.5,e)},merge:vt,min:Ct,minIndex:Lt,mode:function(t,e){const n=new W;if(void 0===e)for(let e of t)null!=e&&e>=e&&n.set(e,(n.get(e)||0)+1);else{let i=-1;for(let s of t)null!=(s=e(s,++i,t))&&s>=s&&n.set(s,(n.get(s)||0)+1)}let i,s=0;for(const[t,e]of n)e>s&&(s=e,i=t);return i},nice:xt,pairs:function(t,e=Pt){const n=[];let i,s=!1;for(const r of t)s&&n.push(e(i,r)),i=r,s=!0;return n},permute:lt,quantile:bt,quantileIndex:Mt,quantileSorted:function(t,e,n=R){if((i=t.length)&&!isNaN(e=+e)){if(e<=0||i<2)return+n(t[0],0,t);if(e>=1)return+n(t[i-1],i-1,t);var i,s=(i-1)*e,r=Math.floor(s),o=+n(t[r],r,t);return o+(+n(t[r+1],r+1,t)-o)*(s-r)}},quickselect:Tt,range:function(t,e,n){t=+t,e=+e,n=(s=arguments.length)<2?(e=t,t=0,1):s<3?1:+n;for(var i=-1,s=0|Math.max(0,Math.ceil((e-t)/n)),r=new Array(s);++i<s;)r[i]=t+i*n;return r},rank:function(t,e=w){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");let n=Array.from(t);const i=new Float64Array(n.length);2!==e.length&&(n=n.map(e),e=w);const s=(t,i)=>e(n[t],n[i]);let r,o;return(t=Uint32Array.from(n,((t,e)=>e))).sort(e===w?(t,e)=>ut(n[t],n[e]):ht(s)),t.forEach(((t,e)=>{const n=s(t,void 0===r?t:r);n>=0?((void 0===r||n>0)&&(r=t,o=e),i[t]=o):i[t]=NaN})),i},least:function(t,e=w){let n,i=!1;if(1===e.length){let s;for(const r of t){const t=e(r);(i?w(t,s)<0:0===w(t,t))&&(n=r,s=t,i=!0)}}else for(const s of t)(i?e(s,n)<0:0===e(s,s))&&(n=s,i=!0);return n},leastIndex:At,greatest:Ot,greatestIndex:function(t,e=w){if(1===e.length)return wt(t,e);let n,i=-1,s=-1;for(const r of t)++s,(i<0?0===e(r,r):e(r,n)>0)&&(n=r,i=s);return i},scan:function(t,e){const n=At(t,e);return n<0?void 0:n},shuffle:Dt,shuffler:Ft,sum:function(t,e){let n=0;if(void 0===e)for(let e of t)(e=+e)&&(n+=e);else{let i=-1;for(let s of t)(s=+e(s,++i,t))&&(n+=s)}return n},ticks:yt,tickIncrement:Et,tickStep:function(t,e,n){n=+n;const i=(e=+e)<(t=+t),s=i?Et(e,t,n):Et(t,e,n);return(i?-1:1)*(s<0?1/-s:s)},transpose:Gt,variance:X,zip:function(){return Gt(arguments)},every:function(t,e){if("function"!=typeof e)throw new TypeError("test is not a function");let n=-1;for(const i of t)if(!e(i,++n,t))return!1;return!0},some:function(t,e){if("function"!=typeof e)throw new TypeError("test is not a function");let n=-1;for(const i of t)if(e(i,++n,t))return!0;return!1},filter:function(t,e){if("function"!=typeof e)throw new TypeError("test is not a function");const n=[];let i=-1;for(const s of t)e(s,++i,t)&&n.push(s);return n},map:function(t,e){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");if("function"!=typeof e)throw new TypeError("mapper is not a function");return Array.from(t,((n,i)=>e(n,i,t)))},reduce:function(t,e,n){if("function"!=typeof e)throw new TypeError("reducer is not a function");const i=t[Symbol.iterator]();let s,r,o=-1;if(arguments.length<3){if(({done:s,value:n}=i.next()),s)return;++o}for(;({done:s,value:r}=i.next()),!s;)n=e(n,r,++o,t);return n},reverse:function(t){if("function"!=typeof t[Symbol.iterator])throw new TypeError("values is not iterable");return Array.from(t).reverse()},sort:ct,difference:function(t,...e){t=new Z(t);for(const n of e)for(const e of n)t.delete(e);return t},disjoint:function(t,e){const n=e[Symbol.iterator](),i=new Z;for(const e of t){if(i.has(e))return!1;let t,s;for(;({value:t,done:s}=n.next())&&!s;){if(Object.is(e,t))return!1;i.add(t)}}return!0},intersection:function(t,...e){t=new Z(t),e=e.map(Bt);t:for(const n of t)for(const i of e)if(!i.has(n)){t.delete(n);continue t}return t},subset:function(t,e){return Yt(e,t)},superset:Yt,union:function(...t){const e=new Z;for(const n of t)for(const t of n)e.add(t);return e},InternMap:W,InternSet:Z}),kt=1e-6,Xt=Math.PI,Vt=Xt/2,jt=Xt/4,Ht=2*Xt,Wt=180/Xt,Zt=Xt/180,Jt=Math.abs,Kt=Math.atan2,Qt=Math.cos,$t=Math.hypot,te=Math.sin,ee=Math.sqrt;function ne(t){return t>1?Vt:t<-1?-Vt:Math.asin(t)}function ie(){}function se(t,e){t&&oe.hasOwnProperty(t.type)&&oe[t.type](t,e)}var re={Feature:function(t,e){se(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,i=-1,s=n.length;++i<s;)se(n[i].geometry,e)}},oe={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,i=-1,s=n.length;++i<s;)t=n[i],e.point(t[0],t[1],t[2])},LineString:function(t,e){ae(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,i=-1,s=n.length;++i<s;)ae(n[i],e,0)},Polygon:function(t,e){le(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,i=-1,s=n.length;++i<s;)le(n[i],e)},GeometryCollection:function(t,e){for(var n=t.geometries,i=-1,s=n.length;++i<s;)se(n[i],e)}};function ae(t,e,n){var i,s=-1,r=t.length-n;for(e.lineStart();++s<r;)i=t[s],e.point(i[0],i[1],i[2]);e.lineEnd()}function le(t,e){var n=-1,i=t.length;for(e.polygonStart();++n<i;)ae(t[n],e,1);e.polygonEnd()}function ce(t,e){t&&re.hasOwnProperty(t.type)?re[t.type](t,e):se(t,e)}var he,ue,ge,de,fe,pe,_e,me,ye,Ee,xe,Ie,Ne,Se,we,Ce,Le=new H,Te=new H,Re={point:ie,lineStart:ie,lineEnd:ie,polygonStart:function(){Le=new H,Re.lineStart=Oe,Re.lineEnd=be},polygonEnd:function(){var t=+Le;Te.add(t<0?Ht+t:t),this.lineStart=this.lineEnd=this.point=ie},sphere:function(){Te.add(Ht)}};function Oe(){Re.point=Me}function be(){ve(he,ue)}function Me(t,e){Re.point=ve,he=t,ue=e,ge=t*=Zt,de=Qt(e=(e*=Zt)/2+jt),fe=te(e)}function ve(t,e){var n=(t*=Zt)-ge,i=n>=0?1:-1,s=i*n,r=Qt(e=(e*=Zt)/2+jt),o=te(e),a=fe*o,l=de*r+a*Qt(s),c=a*i*te(s);Le.add(Kt(c,l)),ge=t,de=r,fe=o}function Pe(t){return Te=new H,ce(t,Re),2*Te}function Ae(t){return[Kt(t[1],t[0]),ne(t[2])]}function De(t){var e=t[0],n=t[1],i=Qt(n);return[i*Qt(e),i*te(e),te(n)]}function Fe(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function Ge(t){var e=ee(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}var qe,Be,Ye,Ue,ze,ke,Xe,Ve,je,He,We,Ze,Je,Ke,Qe,$e,tn={point:en,lineStart:sn,lineEnd:rn,polygonStart:function(){tn.point=on,tn.lineStart=an,tn.lineEnd=ln,Se=new H,Re.polygonStart()},polygonEnd:function(){Re.polygonEnd(),tn.point=en,tn.lineStart=sn,tn.lineEnd=rn,Le<0?(pe=-(me=180),_e=-(ye=90)):Se>kt?ye=90:Se<-kt&&(_e=-90),Ce[0]=pe,Ce[1]=me},sphere:function(){pe=-(me=180),_e=-(ye=90)}};function en(t,e){we.push(Ce=[pe=t,me=t]),e<_e&&(_e=e),e>ye&&(ye=e)}function nn(t,e){var n=De([t*Zt,e*Zt]);if(Ne){var i=Fe(Ne,n),s=Fe([i[1],-i[0],0],i);Ge(s),s=Ae(s);var r,o=t-Ee,a=o>0?1:-1,l=s[0]*Wt*a,c=Jt(o)>180;c^(a*Ee<l&&l<a*t)?(r=s[1]*Wt)>ye&&(ye=r):c^(a*Ee<(l=(l+360)%360-180)&&l<a*t)?(r=-s[1]*Wt)<_e&&(_e=r):(e<_e&&(_e=e),e>ye&&(ye=e)),c?t<Ee?cn(pe,t)>cn(pe,me)&&(me=t):cn(t,me)>cn(pe,me)&&(pe=t):me>=pe?(t<pe&&(pe=t),t>me&&(me=t)):t>Ee?cn(pe,t)>cn(pe,me)&&(me=t):cn(t,me)>cn(pe,me)&&(pe=t)}else we.push(Ce=[pe=t,me=t]);e<_e&&(_e=e),e>ye&&(ye=e),Ne=n,Ee=t}function sn(){tn.point=nn}function rn(){Ce[0]=pe,Ce[1]=me,tn.point=en,Ne=null}function on(t,e){if(Ne){var n=t-Ee;Se.add(Jt(n)>180?n+(n>0?360:-360):n)}else xe=t,Ie=e;Re.point(t,e),nn(t,e)}function an(){Re.lineStart()}function ln(){on(xe,Ie),Re.lineEnd(),Jt(Se)>kt&&(pe=-(me=180)),Ce[0]=pe,Ce[1]=me,Ne=null}function cn(t,e){return(e-=t)<0?e+360:e}function hn(t,e){return t[0]-e[0]}function un(t,e){return t[0]<=t[1]?t[0]<=e&&e<=t[1]:e<t[0]||t[1]<e}var gn={sphere:ie,point:dn,lineStart:pn,lineEnd:yn,polygonStart:function(){gn.lineStart=En,gn.lineEnd=xn},polygonEnd:function(){gn.lineStart=pn,gn.lineEnd=yn}};function dn(t,e){t*=Zt;var n=Qt(e*=Zt);fn(n*Qt(t),n*te(t),te(e))}function fn(t,e,n){++qe,Ye+=(t-Ye)/qe,Ue+=(e-Ue)/qe,ze+=(n-ze)/qe}function pn(){gn.point=_n}function _n(t,e){t*=Zt;var n=Qt(e*=Zt);Ke=n*Qt(t),Qe=n*te(t),$e=te(e),gn.point=mn,fn(Ke,Qe,$e)}function mn(t,e){t*=Zt;var n=Qt(e*=Zt),i=n*Qt(t),s=n*te(t),r=te(e),o=Kt(ee((o=Qe*r-$e*s)*o+(o=$e*i-Ke*r)*o+(o=Ke*s-Qe*i)*o),Ke*i+Qe*s+$e*r);Be+=o,ke+=o*(Ke+(Ke=i)),Xe+=o*(Qe+(Qe=s)),Ve+=o*($e+($e=r)),fn(Ke,Qe,$e)}function yn(){gn.point=dn}function En(){gn.point=In}function xn(){Nn(Ze,Je),gn.point=dn}function In(t,e){Ze=t,Je=e,t*=Zt,e*=Zt,gn.point=Nn;var n=Qt(e);Ke=n*Qt(t),Qe=n*te(t),$e=te(e),fn(Ke,Qe,$e)}function Nn(t,e){t*=Zt;var n=Qt(e*=Zt),i=n*Qt(t),s=n*te(t),r=te(e),o=Qe*r-$e*s,a=$e*i-Ke*r,l=Ke*s-Qe*i,c=$t(o,a,l),h=ne(c),u=c&&-h/c;je.add(u*o),He.add(u*a),We.add(u*l),Be+=h,ke+=h*(Ke+(Ke=i)),Xe+=h*(Qe+(Qe=s)),Ve+=h*($e+($e=r)),fn(Ke,Qe,$e)}function Sn(t){return function(){return t}}function wn(t,e){return Jt(t)>Xt&&(t-=Math.round(t/Ht)*Ht),[t,e]}function Cn(t){return function(e,n){return Jt(e+=t)>Xt&&(e-=Math.round(e/Ht)*Ht),[e,n]}}function Ln(t){var e=Cn(t);return e.invert=Cn(-t),e}function Tn(t,e){var n=Qt(t),i=te(t),s=Qt(e),r=te(e);function o(t,e){var o=Qt(e),a=Qt(t)*o,l=te(t)*o,c=te(e),h=c*n+a*i;return[Kt(l*s-h*r,a*n-c*i),ne(h*s+l*r)]}return o.invert=function(t,e){var o=Qt(e),a=Qt(t)*o,l=te(t)*o,c=te(e),h=c*s-l*r;return[Kt(l*s+c*r,a*n+h*i),ne(h*n-a*i)]},o}function Rn(t,e){(e=De(e))[0]-=t,Ge(e);var n,i=(n=-e[1])>1?0:n<-1?Xt:Math.acos(n);return((-e[2]<0?-i:i)+Ht-kt)%Ht}function On(){var t,e,n=Sn([0,0]),i=Sn(90),s=Sn(6),r={point:function(n,i){t.push(n=e(n,i)),n[0]*=Wt,n[1]*=Wt}};function o(){var o,a,l,c=n.apply(this,arguments),h=i.apply(this,arguments)*Zt,u=s.apply(this,arguments)*Zt;return t=[],e=(o=-c[0]*Zt,a=-c[1]*Zt,l=0,(o%=Ht)?a||l?function(t,e){function n(n,i){return n=t(n,i),e(n[0],n[1])}return t.invert&&e.invert&&(n.invert=function(n,i){return(n=e.invert(n,i))&&t.invert(n[0],n[1])}),n}(Ln(o),Tn(a,l)):Ln(o):a||l?Tn(a,l):wn).invert,function(t,e,n,i,s,r){if(n){var o=Qt(e),a=te(e),l=i*n;null==s?(s=e+i*Ht,r=e-l/2):(s=Rn(o,s),r=Rn(o,r),(i>0?s<r:s>r)&&(s+=i*Ht));for(var c,h=s;i>0?h>r:h<r;h-=l)c=Ae([o,-a*Qt(h),-a*te(h)]),t.point(c[0],c[1])}}(r,h,u,1),c={type:"Polygon",coordinates:[t]},t=e=null,c}return o.center=function(t){return arguments.length?(n="function"==typeof t?t:Sn([+t[0],+t[1]]),o):n},o.radius=function(t){return arguments.length?(i="function"==typeof t?t:Sn(+t),o):i},o.precision=function(t){return arguments.length?(s="function"==typeof t?t:Sn(+t),o):s},o}function bn(t,e,n,i){this.x=t,this.z=e,this.o=n,this.e=i,this.v=!1,this.n=this.p=null}function Mn(t,e,n,i,s){var r,o,a=[],l=[];if(t.forEach((function(t){if(!((e=t.length-1)<=0)){var e,n,i,o,c=t[0],h=t[e];if(o=h,Jt((i=c)[0]-o[0])<kt&&Jt(i[1]-o[1])<kt){if(!c[2]&&!h[2]){for(s.lineStart(),r=0;r<e;++r)s.point((c=t[r])[0],c[1]);return void s.lineEnd()}h[0]+=2*kt}a.push(n=new bn(c,t,null,!0)),l.push(n.o=new bn(c,null,n,!1)),a.push(n=new bn(h,t,null,!1)),l.push(n.o=new bn(h,null,n,!0))}})),a.length){for(l.sort(e),vn(a),vn(l),r=0,o=l.length;r<o;++r)l[r].e=n=!n;for(var c,h,u=a[0];;){for(var g=u,d=!0;g.v;)if((g=g.n)===u)return;c=g.z,s.lineStart();do{if(g.v=g.o.v=!0,g.e){if(d)for(r=0,o=c.length;r<o;++r)s.point((h=c[r])[0],h[1]);else i(g.x,g.n.x,1,s);g=g.n}else{if(d)for(c=g.p.z,r=c.length-1;r>=0;--r)s.point((h=c[r])[0],h[1]);else i(g.x,g.p.x,-1,s);g=g.p}c=(g=g.o).z,d=!d}while(!g.v);s.lineEnd()}}}function vn(t){if(e=t.length){for(var e,n,i=0,s=t[0];++i<e;)s.n=n=t[i],n.p=s,s=n;s.n=n=t[0],n.p=s}}wn.invert=wn;var Pn=1e9,An=-Pn;function Dn(t,e,n,i){function s(s,r){return t<=s&&s<=n&&e<=r&&r<=i}function r(s,r,a,c){var h=0,u=0;if(null==s||(h=o(s,a))!==(u=o(r,a))||l(s,r)<0^a>0)do{c.point(0===h||3===h?t:n,h>1?i:e)}while((h=(h+a+4)%4)!==u);else c.point(r[0],r[1])}function o(i,s){return Jt(i[0]-t)<kt?s>0?0:3:Jt(i[0]-n)<kt?s>0?2:1:Jt(i[1]-e)<kt?s>0?1:0:s>0?3:2}function a(t,e){return l(t.x,e.x)}function l(t,e){var n=o(t,1),i=o(e,1);return n!==i?n-i:0===n?e[1]-t[1]:1===n?t[0]-e[0]:2===n?t[1]-e[1]:e[0]-t[0]}return function(o){var l,c,h,u,g,d,f,p,_,m,y,E=o,x=function(){var t,e=[];return{point:function(e,n,i){t.push([e,n,i])},lineStart:function(){e.push(t=[])},lineEnd:ie,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}}(),I={point:N,lineStart:function(){I.point=S,c&&c.push(h=[]);m=!0,_=!1,f=p=NaN},lineEnd:function(){l&&(S(u,g),d&&_&&x.rejoin(),l.push(x.result()));I.point=N,_&&E.lineEnd()},polygonStart:function(){E=x,l=[],c=[],y=!0},polygonEnd:function(){var e=function(){for(var e=0,n=0,s=c.length;n<s;++n)for(var r,o,a=c[n],l=1,h=a.length,u=a[0],g=u[0],d=u[1];l<h;++l)r=g,o=d,g=(u=a[l])[0],d=u[1],o<=i?d>i&&(g-r)*(i-o)>(d-o)*(t-r)&&++e:d<=i&&(g-r)*(i-o)<(d-o)*(t-r)&&--e;return e}(),n=y&&e,s=(l=vt(l)).length;(n||s)&&(o.polygonStart(),n&&(o.lineStart(),r(null,null,1,o),o.lineEnd()),s&&Mn(l,a,e,r,o),o.polygonEnd());E=o,l=c=h=null}};function N(t,e){s(t,e)&&E.point(t,e)}function S(r,o){var a=s(r,o);if(c&&h.push([r,o]),m)u=r,g=o,d=a,m=!1,a&&(E.lineStart(),E.point(r,o));else if(a&&_)E.point(r,o);else{var l=[f=Math.max(An,Math.min(Pn,f)),p=Math.max(An,Math.min(Pn,p))],x=[r=Math.max(An,Math.min(Pn,r)),o=Math.max(An,Math.min(Pn,o))];!function(t,e,n,i,s,r){var o,a=t[0],l=t[1],c=0,h=1,u=e[0]-a,g=e[1]-l;if(o=n-a,u||!(o>0)){if(o/=u,u<0){if(o<c)return;o<h&&(h=o)}else if(u>0){if(o>h)return;o>c&&(c=o)}if(o=s-a,u||!(o<0)){if(o/=u,u<0){if(o>h)return;o>c&&(c=o)}else if(u>0){if(o<c)return;o<h&&(h=o)}if(o=i-l,g||!(o>0)){if(o/=g,g<0){if(o<c)return;o<h&&(h=o)}else if(g>0){if(o>h)return;o>c&&(c=o)}if(o=r-l,g||!(o<0)){if(o/=g,g<0){if(o>h)return;o>c&&(c=o)}else if(g>0){if(o<c)return;o<h&&(h=o)}return c>0&&(t[0]=a+c*u,t[1]=l+c*g),h<1&&(e[0]=a+h*u,e[1]=l+h*g),!0}}}}}(l,x,t,e,n,i)?a&&(E.lineStart(),E.point(r,o),y=!1):(_||(E.lineStart(),E.point(l[0],l[1])),E.point(x[0],x[1]),a||E.lineEnd(),y=!1)}f=r,p=o,_=a}return I}}var Fn,Gn,qn,Bn,Yn=t=>t,Un=new H,zn=new H,kn={point:ie,lineStart:ie,lineEnd:ie,polygonStart:function(){kn.lineStart=Xn,kn.lineEnd=Hn},polygonEnd:function(){kn.lineStart=kn.lineEnd=kn.point=ie,Un.add(Jt(zn)),zn=new H},result:function(){var t=Un/2;return Un=new H,t}};function Xn(){kn.point=Vn}function Vn(t,e){kn.point=jn,Fn=qn=t,Gn=Bn=e}function jn(t,e){zn.add(Bn*t-qn*e),qn=t,Bn=e}function Hn(){jn(Fn,Gn)}var Wn=kn,Zn=1/0,Jn=Zn,Kn=-Zn,Qn=Kn,$n={point:function(t,e){t<Zn&&(Zn=t);t>Kn&&(Kn=t);e<Jn&&(Jn=e);e>Qn&&(Qn=e)},lineStart:ie,lineEnd:ie,polygonStart:ie,polygonEnd:ie,result:function(){var t=[[Zn,Jn],[Kn,Qn]];return Kn=Qn=-(Jn=Zn=1/0),t}};var ti,ei,ni,ii,si=$n,ri=0,oi=0,ai=0,li=0,ci=0,hi=0,ui=0,gi=0,di=0,fi={point:pi,lineStart:_i,lineEnd:Ei,polygonStart:function(){fi.lineStart=xi,fi.lineEnd=Ii},polygonEnd:function(){fi.point=pi,fi.lineStart=_i,fi.lineEnd=Ei},result:function(){var t=di?[ui/di,gi/di]:hi?[li/hi,ci/hi]:ai?[ri/ai,oi/ai]:[NaN,NaN];return ri=oi=ai=li=ci=hi=ui=gi=di=0,t}};function pi(t,e){ri+=t,oi+=e,++ai}function _i(){fi.point=mi}function mi(t,e){fi.point=yi,pi(ni=t,ii=e)}function yi(t,e){var n=t-ni,i=e-ii,s=ee(n*n+i*i);li+=s*(ni+t)/2,ci+=s*(ii+e)/2,hi+=s,pi(ni=t,ii=e)}function Ei(){fi.point=pi}function xi(){fi.point=Ni}function Ii(){Si(ti,ei)}function Ni(t,e){fi.point=Si,pi(ti=ni=t,ei=ii=e)}function Si(t,e){var n=t-ni,i=e-ii,s=ee(n*n+i*i);li+=s*(ni+t)/2,ci+=s*(ii+e)/2,hi+=s,ui+=(s=ii*t-ni*e)*(ni+t),gi+=s*(ii+e),di+=3*s,pi(ni=t,ii=e)}var wi=fi;function Ci(t){this._context=t}Ci.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,e){switch(this._point){case 0:this._context.moveTo(t,e),this._point=1;break;case 1:this._context.lineTo(t,e);break;default:this._context.moveTo(t+this._radius,e),this._context.arc(t,e,this._radius,0,Ht)}},result:ie};var Li,Ti,Ri,Oi,bi,Mi=new H,vi={point:ie,lineStart:function(){vi.point=Pi},lineEnd:function(){Li&&Ai(Ti,Ri),vi.point=ie},polygonStart:function(){Li=!0},polygonEnd:function(){Li=null},result:function(){var t=+Mi;return Mi=new H,t}};function Pi(t,e){vi.point=Ai,Ti=Oi=t,Ri=bi=e}function Ai(t,e){Oi-=t,bi-=e,Mi.add(ee(Oi*Oi+bi*bi)),Oi=t,bi=e}var Di=vi;let Fi,Gi,qi,Bi;class Yi{constructor(t){this._append=null==t?Ui:function(t){const e=Math.floor(t);if(!(e>=0))throw new RangeError(`invalid digits: ${t}`);if(e>15)return Ui;if(e!==Fi){const t=10**e;Fi=e,Gi=function(e){let n=1;this._+=e[0];for(const i=e.length;n<i;++n)this._+=Math.round(arguments[n]*t)/t+e[n]}}return Gi}(t),this._radius=4.5,this._=""}pointRadius(t){return this._radius=+t,this}polygonStart(){this._line=0}polygonEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){0===this._line&&(this._+="Z"),this._point=NaN}point(t,e){switch(this._point){case 0:this._append`M${t},${e}`,this._point=1;break;case 1:this._append`L${t},${e}`;break;default:if(this._append`M${t},${e}`,this._radius!==qi||this._append!==Gi){const t=this._radius,e=this._;this._="",this._append`m0,${t}a${t},${t} 0 1,1 0,${-2*t}a${t},${t} 0 1,1 0,${2*t}z`,qi=t,Gi=this._append,Bi=this._,this._=e}this._+=Bi}}result(){const t=this._;return this._="",t.length?t:null}}function Ui(t){let e=1;this._+=t[0];for(const n=t.length;e<n;++e)this._+=arguments[e]+t[e]}function zi(){}function ki(t,e,n){var i=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=i&&t.clipExtent(null),ce(n,t.stream(si)),e(si.result()),null!=i&&t.clipExtent(i),t}function Xi(t,e,n){return ki(t,(function(n){var i=e[1][0]-e[0][0],s=e[1][1]-e[0][1],r=Math.min(i/(n[1][0]-n[0][0]),s/(n[1][1]-n[0][1])),o=+e[0][0]+(i-r*(n[1][0]+n[0][0]))/2,a=+e[0][1]+(s-r*(n[1][1]+n[0][1]))/2;t.scale(150*r).translate([o,a])}),n)}function Vi(t,e){return[t,e]}function ji(t){t=e(t);let n=[];t.features.forEach((t=>{n.push(function(t){let e=[];t.geometry.type.includes("Multi")?t.geometry.coordinates.forEach((n=>{e.push({type:"Feature",properties:t.properties,geometry:{type:t.geometry.type.replace("Multi",""),coordinates:n}})})):e.push({...t});const n=Pe(t);return e.forEach((t=>t.__share=Pe(t)/n)),JSON.parse(JSON.stringify(e))}(t))}));const i=Object.keys(t).filter((t=>"features"!=t)),s={};return i.forEach((e=>{s[e]=t[e]})),s.features=n.flat(),s}function Hi(t){return t}function Wi(t){if(null==t)return Hi;var e,n,i=t.scale[0],s=t.scale[1],r=t.translate[0],o=t.translate[1];return function(t,a){a||(e=n=0);var l=2,c=t.length,h=new Array(c);for(h[0]=(e+=t[0])*i+r,h[1]=(n+=t[1])*s+o;l<c;)h[l]=t[l],++l;return h}}function Zi(t,e){var n=e.id,i=e.bbox,s=null==e.properties?{}:e.properties,r=Ji(t,e);return null==n&&null==i?{type:"Feature",properties:s,geometry:r}:null==i?{type:"Feature",id:n,properties:s,geometry:r}:{type:"Feature",id:n,bbox:i,properties:s,geometry:r}}function Ji(t,e){var n=Wi(t.transform),i=t.arcs;function s(t,e){e.length&&e.pop();for(var s=i[t<0?~t:t],r=0,o=s.length;r<o;++r)e.push(n(s[r],r));t<0&&function(t,e){for(var n,i=t.length,s=i-e;s<--i;)n=t[s],t[s++]=t[i],t[i]=n}(e,o)}function r(t){return n(t)}function o(t){for(var e=[],n=0,i=t.length;n<i;++n)s(t[n],e);return e.length<2&&e.push(e[0]),e}function a(t){for(var e=o(t);e.length<4;)e.push(e[0]);return e}function l(t){return t.map(a)}return function t(e){var n,i=e.type;switch(i){case"GeometryCollection":return{type:i,geometries:e.geometries.map(t)};case"Point":n=r(e.coordinates);break;case"MultiPoint":n=e.coordinates.map(r);break;case"LineString":n=o(e.arcs);break;case"MultiLineString":n=e.arcs.map(o);break;case"Polygon":n=l(e.arcs);break;case"MultiPolygon":n=e.arcs.map(l);break;default:return null}return{type:i,coordinates:n}}(e)}function Ki(t,e){var n={},i={},s={},r=[],o=-1;function a(t,e){for(var i in t){var s=t[i];delete e[s.start],delete s.start,delete s.end,s.forEach((function(t){n[t<0?~t:t]=1})),r.push(s)}}return e.forEach((function(n,i){var s,r=t.arcs[n<0?~n:n];r.length<3&&!r[1][0]&&!r[1][1]&&(s=e[++o],e[o]=n,e[i]=s)})),e.forEach((function(e){var n,r,o=function(e){var n,i=t.arcs[e<0?~e:e],s=i[0];t.transform?(n=[0,0],i.forEach((function(t){n[0]+=t[0],n[1]+=t[1]}))):n=i[i.length-1];return e<0?[n,s]:[s,n]}(e),a=o[0],l=o[1];if(n=s[a])if(delete s[n.end],n.push(e),n.end=l,r=i[l]){delete i[r.start];var c=r===n?n:n.concat(r);i[c.start=n.start]=s[c.end=r.end]=c}else i[n.start]=s[n.end]=n;else if(n=i[l])if(delete i[n.start],n.unshift(e),n.start=a,r=s[a]){delete s[r.end];var h=r===n?n:r.concat(n);i[h.start=r.start]=s[h.end=n.end]=h}else i[n.start]=s[n.end]=n;else i[(n=[e]).start=a]=s[n.end=l]=n})),a(s,i),a(i,s),e.forEach((function(t){n[t<0?~t:t]||r.push([t])})),r}function Qi(t,e,n){var i,s,r;if(arguments.length>1)i=function(t,e,n){var i,s=[],r=[];function o(t){var e=t<0?~t:t;(r[e]||(r[e]=[])).push({i:t,g:i})}function a(t){t.forEach(o)}function l(t){t.forEach(a)}function c(t){t.forEach(l)}function h(t){switch(i=t,t.type){case"GeometryCollection":t.geometries.forEach(h);break;case"LineString":a(t.arcs);break;case"MultiLineString":case"Polygon":l(t.arcs);break;case"MultiPolygon":c(t.arcs)}}return h(e),r.forEach(null==n?function(t){s.push(t[0].i)}:function(t){n(t[0].g,t[t.length-1].g)&&s.push(t[0].i)}),s}(0,e,n);else for(s=0,i=new Array(r=t.arcs.length);s<r;++s)i[s]=s;return{type:"MultiLineString",arcs:Ki(t,i)}}function $i(t){return Ji(t,ts.apply(this,arguments))}function ts(t,e){var n={},i=[],s=[];function r(t){t.forEach((function(e){e.forEach((function(e){(n[e=e<0?~e:e]||(n[e]=[])).push(t)}))})),i.push(t)}function o(e){return function(t){for(var e,n=-1,i=t.length,s=t[i-1],r=0;++n<i;)e=s,s=t[n],r+=e[0]*s[1]-e[1]*s[0];return Math.abs(r)}(Ji(t,{type:"Polygon",arcs:[e]}).coordinates[0])}return e.forEach((function t(e){switch(e.type){case"GeometryCollection":e.geometries.forEach(t);break;case"Polygon":r(e.arcs);break;case"MultiPolygon":e.arcs.forEach(r)}})),i.forEach((function(t){if(!t._){var e=[],i=[t];for(t._=1,s.push(e);t=i.pop();)e.push(t),t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].forEach((function(t){t._||(t._=1,i.push(t))}))}))}))}})),i.forEach((function(t){delete t._})),{type:"MultiPolygon",arcs:s.map((function(e){var i,s=[];if(e.forEach((function(t){t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].length<2&&s.push(t)}))}))})),(i=(s=Ki(t,s)).length)>1)for(var r,a,l=1,c=o(s[0]);l<i;++l)(r=o(s[l]))>c&&(a=s[0],s[0]=s[l],s[l]=a,c=r);return s})).filter((function(t){return t.length>0}))}}function es(t,e){for(var n=0,i=t.length;n<i;){var s=n+i>>>1;t[s]<e?n=s+1:i=s}return n}zi.prototype={constructor:zi,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},Vi.invert=Vi;const ns=Object.assign({},{topology:E,merge:$i});function is(t,n={}){let i=s(t=e(t)).dimension;if(null!=n.id&&null!=n.id){let e=n.id,s=Array.from(new Set(t.features.map((t=>t.properties[e])))),r=[];return s.forEach((n=>{let s,o={type:"FeatureCollection",features:t.features.filter((t=>t.properties[e]==n))};if(3==i){let t=ns.topology({foo:o});s=ns.merge(t,t.objects.foo.geometries)}2==i&&(s={type:"MultiLineString",coordinates:ji(o).features.map((t=>t.geometry.coordinates))}),1==i&&(s={type:"MultiPoint",coordinates:ji(o).features.map((t=>t.geometry.coordinates))}),r.push({type:"Feature",properties:{id:n},geometry:s})})),{type:"FeatureCollection",features:r}}{let e;if(3==i){let n=ns.topology({foo:t});e=ns.merge(n,n.objects.foo.geometries)}return 2==i&&(e={type:"MultiLineString",coordinates:ji(t).features.map((t=>t.geometry.coordinates))}),1==i&&(e={type:"MultiPoint",coordinates:ji(t).features.map((t=>t.geometry.coordinates))}),{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:e}]}}}const ss=Object.assign({},{geoArea:Pe,geoCentroid:function(t){qe=Be=Ye=Ue=ze=ke=Xe=Ve=0,je=new H,He=new H,We=new H,ce(t,gn);var e=+je,n=+He,i=+We,s=$t(e,n,i);return s<1e-12&&(e=ke,n=Xe,i=Ve,Be<kt&&(e=Ye,n=Ue,i=ze),(s=$t(e,n,i))<1e-12)?[NaN,NaN]:[Kt(n,e)*Wt,ne(i/s)*Wt]},geoIdentity:function(){var t,e,n,i,s,r,o,a,l=1,c=0,h=0,u=1,g=1,d=0,f=null,p=1,_=1,m=(a={point:function(t,e){var n=x([t,e]);this.stream.point(n[0],n[1])}},function(t){var e=new zi;for(var n in a)e[n]=a[n];return e.stream=t,e}),y=Yn;function E(){return p=l*u,_=l*g,r=o=null,x}function x(n){var i=n[0]*p,s=n[1]*_;if(d){var r=s*t-i*e;i=i*t+s*e,s=r}return[i+c,s+h]}return x.invert=function(n){var i=n[0]-c,s=n[1]-h;if(d){var r=s*t+i*e;i=i*t-s*e,s=r}return[i/p,s/_]},x.stream=function(t){return r&&o===t?r:r=m(y(o=t))},x.postclip=function(t){return arguments.length?(y=t,f=n=i=s=null,E()):y},x.clipExtent=function(t){return arguments.length?(y=null==t?(f=n=i=s=null,Yn):Dn(f=+t[0][0],n=+t[0][1],i=+t[1][0],s=+t[1][1]),E()):null==f?null:[[f,n],[i,s]]},x.scale=function(t){return arguments.length?(l=+t,E()):l},x.translate=function(t){return arguments.length?(c=+t[0],h=+t[1],E()):[c,h]},x.angle=function(n){return arguments.length?(e=te(d=n%360*Zt),t=Qt(d),E()):d*Wt},x.reflectX=function(t){return arguments.length?(u=t?-1:1,E()):u<0},x.reflectY=function(t){return arguments.length?(g=t?-1:1,E()):g<0},x.fitExtent=function(t,e){return Xi(x,t,e)},x.fitSize=function(t,e){return function(t,e,n){return Xi(t,[[0,0],e],n)}(x,t,e)},x.fitWidth=function(t,e){return function(t,e,n){return ki(t,(function(n){var i=+e,s=i/(n[1][0]-n[0][0]),r=(i-s*(n[1][0]+n[0][0]))/2,o=-s*n[0][1];t.scale(150*s).translate([r,o])}),n)}(x,t,e)},x.fitHeight=function(t,e){return function(t,e,n){return ki(t,(function(n){var i=+e,s=i/(n[1][1]-n[0][1]),r=-s*n[0][0],o=(i-s*(n[1][1]+n[0][1]))/2;t.scale(150*s).translate([r,o])}),n)}(x,t,e)},x},geoPath:function(t,e){let n,i,s=3,r=4.5;function o(t){return t&&("function"==typeof r&&i.pointRadius(+r.apply(this,arguments)),ce(t,n(i))),i.result()}return o.area=function(t){return ce(t,n(Wn)),Wn.result()},o.measure=function(t){return ce(t,n(Di)),Di.result()},o.bounds=function(t){return ce(t,n(si)),si.result()},o.centroid=function(t){return ce(t,n(wi)),wi.result()},o.projection=function(e){return arguments.length?(n=null==e?(t=null,Yn):(t=e).stream,o):t},o.context=function(t){return arguments.length?(i=null==t?(e=null,new Yi(s)):new Ci(e=t),"function"!=typeof r&&i.pointRadius(r),o):e},o.pointRadius=function(t){return arguments.length?(r="function"==typeof t?t:(i.pointRadius(+t),+t),o):r},o.digits=function(t){if(!arguments.length)return s;if(null==t)s=null;else{const e=Math.floor(t);if(!(e>=0))throw new RangeError(`invalid digits: ${t}`);s=e}return null===e&&(i=new Yi(s)),o},o.projection(t).digits(s).context(e)}});const rs=Object.assign({},{topology:E,neighbors:function(t){var e={},n=t.map((function(){return[]}));function i(t,n){t.forEach((function(t){t<0&&(t=~t);var i=e[t];i?i.push(n):e[t]=[n]}))}function s(t,e){t.forEach((function(t){i(t,e)}))}var r={LineString:i,MultiLineString:s,Polygon:s,MultiPolygon:function(t,e){t.forEach((function(t){s(t,e)}))}};for(var o in t.forEach((function t(e,n){"GeometryCollection"===e.type?e.geometries.forEach((function(e){t(e,n)})):e.type in r&&r[e.type](e.arcs,n)})),e)for(var a=e[o],l=a.length,c=0;c<l;++c)for(var h=c+1;h<l;++h){var u,g=a[c],d=a[h];(u=n[g])[o=es(u,d)]!==d&&u.splice(o,0,d),(u=n[d])[o=es(u,g)]!==g&&u.splice(o,0,g)}return n},mesh:function(t){return Ji(t,Qi.apply(this,arguments))}}),os=Object.assign({},zt);const as=Object.assign({},{geoEquirectangularRaw:Vi,geoBounds:function(t){var e,n,i,s,r,o,a;if(ye=me=-(pe=_e=1/0),we=[],ce(t,tn),n=we.length){for(we.sort(hn),e=1,r=[i=we[0]];e<n;++e)un(i,(s=we[e])[0])||un(i,s[1])?(cn(i[0],s[1])>cn(i[0],i[1])&&(i[1]=s[1]),cn(s[0],i[1])>cn(i[0],i[1])&&(i[0]=s[0])):r.push(i=s);for(o=-1/0,e=0,i=r[n=r.length-1];e<=n;i=s,++e)s=r[e],(a=cn(i[1],s[0]))>o&&(o=a,pe=s[0],me=i[1])}return we=Ce=null,pe===1/0||_e===1/0?[[NaN,NaN],[NaN,NaN]]:[[pe,_e],[me,ye]]}});const ls=(t,e)=>{const n=Math.PI/180,i=Math.tan(n*e/2)**2,s=function(e,n,r,o,a,l,c){if(l--){var h=hs(e,r),u=t.invert(...h),g=gs(u),d=ds(g,n),f=ds(g,o);cs(g,n,o)*(1+.25*a)*(1+.25*a)/(i*a)+(d-f)/a*2*((d-f)/a)>1&d+f>i|d+f>.25&&(s(e,n,h,g,d,l,c),c.push(u),s(h,g,r,o,f,l,c))}},r=e=>{let n=[],i=e[0],r=t.invert(...i),o=gs(r);n.push(r);for(var a=1,l=e.length;a<l;a++){let r=e[a],l=t.invert(...r),c=gs(l);s(i,o,r,c,ds(o,c),16,n),n.push(l),i=r,o=c}return n};let o,a=e=>t.invert(...e),l=t=>e=>e.forEach(((n,i)=>e[i]=t(n))),c={Point:t=>t.coordinates=a(t.coordinates),MultiPoint:t=>l(a)(t.coordinates),LineString:t=>t.coordinates=r(t.coordinates),Polygon:t=>l(r)(t.coordinates),MultiLineString:t=>l(r)(t.coordinates),MultiPolygon:t=>t.coordinates.forEach(l(r)),Feature:t=>o(t.geometry),GeometryCollection:t=>t.geometries.forEach(o),FeatureCollection:t=>t.features.forEach(o)};return o=t=>(c[t.type](t),t),function(t){return t=JSON.parse(JSON.stringify(t)),o(t)}},cs=([t,e,n],[i,s,r],[o,a,l])=>{var c=t*((s-e)*(l-n)-(a-e)*(r-n))+e*((r-n)*(o-t)-(l-n)*(i-t))+n*((i-t)*(a-e)-(o-t)*(s-e)),h=(t+o)*(t+i)+(e+a)*(e+s)+(n+l)*(n+r);return(c*c+!(h*h))/(h*h)},hs=([t,e],[n,i])=>[.5*(t+n),.5*(e+i)],us=Math.PI/180,gs=([t,e])=>[Math.cos(us*e)*Math.cos(us*t),Math.cos(us*e)*Math.sin(us*t),Math.sin(us*e)],ds=([t,e,n],[i,s,r])=>{var o=t*(s-e)-(i-t)*e,a=e*(r-n)-(s-e)*n,l=n*(i-t)-(r-n)*t,c=t*(i+t)+e*(s+e)+n*(r+n);return(o*o+a*a+l*l+!(c*c))/(c*c)};function fs(t){return t?t.toLowerCase().includes("point")?function(t){let e=t.match(/\(([^)]+)\)/g);return null===e?[void 0,void 0]:e[0].replace(/\s\s+/g," ").replace("(","").replace(")","").trimStart().trimEnd().split(" ").map((t=>t.replace(",","."))).map((t=>+t))}(t):function(t,e=","){let n=(t=t.replace(/[ ]+/g,"")).split(e).map((t=>t.replace(",","."))).map((t=>t.replace(/[^\d.-]/g,""))).map((t=>+t));return 2!=n.length&&(n=[void 0,void 0]),n}(t):null}function ps(t){let e=[],n=-180;for(;n<=180;)e.push([n,t]),n+=2.5;return{type:"MultiLineString",coordinates:[e]}}class _s{constructor(){_s.constructor_.apply(this,arguments)}static constructor_(){if(this._quadrantSegments=_s.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=_s.CAP_ROUND,this._joinStyle=_s.JOIN_ROUND,this._mitreLimit=_s.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=_s.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.setQuadrantSegments(t),this.setEndCapStyle(e)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.setQuadrantSegments(t),this.setEndCapStyle(e),this.setJoinStyle(n),this.setMitreLimit(i)}}static bufferDistanceError(t){const e=Math.PI/2/t;return 1-Math.cos(e/2)}getEndCapStyle(){return this._endCapStyle}isSingleSided(){return this._isSingleSided}setQuadrantSegments(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=_s.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=_s.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==_s.JOIN_ROUND&&(this._quadrantSegments=_s.DEFAULT_QUADRANT_SEGMENTS)}getJoinStyle(){return this._joinStyle}setJoinStyle(t){this._joinStyle=t}setSimplifyFactor(t){this._simplifyFactor=t<0?0:t}getSimplifyFactor(){return this._simplifyFactor}getQuadrantSegments(){return this._quadrantSegments}setEndCapStyle(t){this._endCapStyle=t}getMitreLimit(){return this._mitreLimit}setMitreLimit(t){this._mitreLimit=t}setSingleSided(t){this._isSingleSided=t}}function ms(t,e){return t.interfaces_&&t.interfaces_.indexOf(e)>-1}_s.CAP_ROUND=1,_s.CAP_FLAT=2,_s.CAP_SQUARE=3,_s.JOIN_ROUND=1,_s.JOIN_MITRE=2,_s.JOIN_BEVEL=3,_s.DEFAULT_QUADRANT_SEGMENTS=8,_s.DEFAULT_MITRE_LIMIT=5,_s.DEFAULT_SIMPLIFY_FACTOR=.01;class ys{static equalsWithTolerance(t,e,n){return Math.abs(t-e)<=n}}class Es extends Error{constructor(t){super(t),this.name=Object.keys({Exception:Es})[0]}toString(){return this.message}}class xs extends Es{constructor(t){super(t),this.name=Object.keys({IllegalArgumentException:xs})[0]}}class Is{constructor(t,e){this.low=e||0,this.high=t||0}static toBinaryString(t){let e,n="";for(e=2147483648;e>0;e>>>=1)n+=(t.high&e)===e?"1":"0";for(e=2147483648;e>0;e>>>=1)n+=(t.low&e)===e?"1":"0";return n}}function Ns(){}function Ss(){}function ws(){}Ns.NaN=NaN,Ns.isNaN=t=>Number.isNaN(t),Ns.isInfinite=t=>!Number.isFinite(t),Ns.MAX_VALUE=Number.MAX_VALUE,Ns.POSITIVE_INFINITY=Number.POSITIVE_INFINITY,Ns.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,"function"==typeof Float64Array&&"function"==typeof Int32Array?function(){const t=2146435072,e=new Float64Array(1),n=new Int32Array(e.buffer);Ns.doubleToLongBits=function(i){e[0]=i;let s=0|n[0],r=0|n[1];return(r&t)===t&&0!=(1048575&r)&&0!==s&&(s=0,r=2146959360),new Is(r,s)},Ns.longBitsToDouble=function(t){return n[0]=t.low,n[1]=t.high,e[0]}}():function(){const t=1023,e=Math.log2,n=Math.floor,i=Math.pow,s=function(){for(let t=53;t>0;t--){const s=i(2,t)-1;if(n(e(s))+1===t)return s}return 0}();Ns.doubleToLongBits=function(r){let o,a,l,c,h,u,g,d,f;if(r<0||1/r===Number.NEGATIVE_INFINITY?(u=1<<31,r=-r):u=0,0===r)return f=0,d=u,new Is(d,f);if(r===1/0)return f=0,d=2146435072|u,new Is(d,f);if(r!=r)return f=0,d=2146959360,new Is(d,f);if(c=0,f=0,o=n(r),o>1)if(o<=s)c=n(e(o)),c<=20?(f=0,d=o<<20-c&1048575):(l=c-20,a=i(2,l),f=o%a<<32-l,d=o/a&1048575);else for(l=o,f=0;a=l/2,l=n(a),0!==l;)c++,f>>>=1,f|=(1&d)<<31,d>>>=1,a!==l&&(d|=524288);if(g=c+t,h=0===o,o=r-o,c<52&&0!==o)for(l=0;;){if(a=2*o,a>=1?(o=a-1,h?(g--,h=!1):(l<<=1,l|=1,c++)):(o=a,h?0==--g&&(c++,h=!1):(l<<=1,c++)),20===c)d|=l,l=0;else if(52===c){f|=l;break}if(1===a){c<20?d|=l<<20-c:c<52&&(f|=l<<52-c);break}}return d|=g<<20,d|=u,new Is(d,f)},Ns.longBitsToDouble=function(e){let n,s,r,o;const a=e.high,l=e.low,c=a&1<<31?-1:1;for(r=((2146435072&a)>>20)-t,o=0,s=1<<19,n=1;n<=20;n++)a&s&&(o+=i(2,-n)),s>>>=1;for(s=1<<31,n=21;n<=52;n++)l&s&&(o+=i(2,-n)),s>>>=1;if(-1023===r){if(0===o)return 0*c;r=-1022}else{if(1024===r)return 0===o?c/0:NaN;o+=1}return c*o*i(2,r)}}();class Cs extends Es{constructor(t){super(t),this.name=Object.keys({RuntimeException:Cs})[0]}}class Ls extends Cs{constructor(){super(),Ls.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)Cs.constructor_.call(this);else if(1===arguments.length){const t=arguments[0];Cs.constructor_.call(this,t)}}}class Ts{static isTrue(){if(1===arguments.length){const t=arguments[0];Ts.isTrue(t,null)}else if(2===arguments.length){const t=arguments[1];if(!arguments[0])throw null===t?new Ls:new Ls(t)}}static shouldNeverReachHere(){if(0===arguments.length)Ts.shouldNeverReachHere(null);else if(1===arguments.length){const t=arguments[0];throw new Ls("Should never reach here"+(null!==t?": "+t:""))}}static equals(){if(2===arguments.length){const t=arguments[0],e=arguments[1];Ts.equals(t,e,null)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(!e.equals(t))throw new Ls("Expected "+t+" but encountered "+e+(null!==n?": "+n:""))}}}function Rs(){}function Os(){}const bs=new ArrayBuffer(8),Ms=new Float64Array(bs),vs=new Int32Array(bs);class Ps{constructor(){Ps.constructor_.apply(this,arguments)}static constructor_(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)Ps.constructor_.call(this,0,0);else if(1===arguments.length){const t=arguments[0];Ps.constructor_.call(this,t.x,t.y,t.getZ())}else if(2===arguments.length){const t=arguments[0],e=arguments[1];Ps.constructor_.call(this,t,e,Ps.NULL_ORDINATE)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.x=t,this.y=e,this.z=n}}static hashCode(t){return Ms[0]=t,vs[0]^vs[1]}equals2D(){if(1===arguments.length){const t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){const t=arguments[0],e=arguments[1];return!!ys.equalsWithTolerance(this.x,t.x,e)&&!!ys.equalsWithTolerance(this.y,t.y,e)}}setM(t){throw new xs("Invalid ordinate index: "+Ps.M)}equals3D(t){return this.x===t.x&&this.y===t.y&&(this.getZ()===t.getZ()||Ns.isNaN(this.getZ())&&Ns.isNaN(t.getZ()))}setX(t){this.x=t}compareTo(t){const e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0}getX(){return this.x}copy(){return new Ps(this)}toString(){return"("+this.x+", "+this.y+", "+this.getZ()+")"}distance3D(t){const e=this.x-t.x,n=this.y-t.y,i=this.getZ()-t.getZ();return Math.sqrt(e*e+n*n+i*i)}getY(){return this.y}getM(){return Ns.NaN}setOrdinate(t,e){switch(t){case Ps.X:this.x=e;break;case Ps.Y:this.y=e;break;case Ps.Z:this.setZ(e);break;default:throw new xs("Invalid ordinate index: "+t)}}getZ(){return this.z}getOrdinate(t){switch(t){case Ps.X:return this.x;case Ps.Y:return this.y;case Ps.Z:return this.getZ()}throw new xs("Invalid ordinate index: "+t)}equals(t){return t instanceof Ps&&this.equals2D(t)}equalInZ(t,e){return ys.equalsWithTolerance(this.getZ(),t.getZ(),e)}setZ(t){this.z=t}clone(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return Ts.shouldNeverReachHere("this shouldn't happen because this class is Cloneable"),null;throw t}}setY(t){this.y=t}distance(t){const e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)}hashCode(){let t=17;return t=37*t+Ps.hashCode(this.x),t=37*t+Ps.hashCode(this.y),t}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}get interfaces_(){return[Ss,Rs,ws]}}class As{constructor(){As.constructor_.apply(this,arguments)}static constructor_(){if(this._dimensionsToTest=2,0===arguments.length)As.constructor_.call(this,2);else if(1===arguments.length){const t=arguments[0];if(2!==t&&3!==t)throw new xs("only 2 or 3 dimensions may be specified");this._dimensionsToTest=t}}static compare(t,e){return t<e?-1:t>e?1:Ns.isNaN(t)?Ns.isNaN(e)?0:-1:Ns.isNaN(e)?1:0}compare(t,e){const n=As.compare(t.x,e.x);if(0!==n)return n;const i=As.compare(t.y,e.y);if(0!==i)return i;if(this._dimensionsToTest<=2)return 0;return As.compare(t.getZ(),e.getZ())}get interfaces_(){return[Os]}}Ps.DimensionalComparator=As,Ps.NULL_ORDINATE=Ns.NaN,Ps.X=0,Ps.Y=1,Ps.Z=2,Ps.M=3;class Ds{add(){}addAll(){}isEmpty(){}iterator(){}size(){}toArray(){}remove(){}}class Fs extends Es{constructor(t){super(t),this.name=Object.keys({IndexOutOfBoundsException:Fs})[0]}}class Gs extends Ds{get(){}set(){}isEmpty(){}}class qs extends Es{constructor(t){super(t),this.name=Object.keys({NoSuchElementException:qs})[0]}}class Bs extends Gs{constructor(t){super(),this.array=[],t instanceof Ds&&this.addAll(t)}get interfaces_(){return[Gs,Ds]}ensureCapacity(){}add(t){return 1===arguments.length?this.array.push(t):this.array.splice(arguments[0],0,arguments[1]),!0}clear(){this.array=[]}addAll(t){for(const e of t)this.array.push(e)}set(t,e){const n=this.array[t];return this.array[t]=e,n}iterator(){return new Ys(this)}get(t){if(t<0||t>=this.size())throw new Fs;return this.array[t]}isEmpty(){return 0===this.array.length}sort(t){t?this.array.sort(((e,n)=>t.compare(e,n))):this.array.sort()}size(){return this.array.length}toArray(){return this.array.slice()}remove(t){for(let e=0,n=this.array.length;e<n;e++)if(this.array[e]===t)return!!this.array.splice(e,1);return!1}[Symbol.iterator](){return this.array.values()}}class Ys{constructor(t){this.arrayList=t,this.position=0}next(){if(this.position===this.arrayList.size())throw new qs;return this.arrayList.get(this.position++)}hasNext(){return this.position<this.arrayList.size()}set(t){return this.arrayList.set(this.position-1,t)}remove(){this.arrayList.remove(this.arrayList.get(this.position))}}class Us extends Bs{constructor(){super(),Us.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.ensureCapacity(t.length),this.add(t,!0)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.ensureCapacity(t.length),this.add(t,e)}}getCoordinate(t){return this.get(t)}addAll(){if(2===arguments.length&&"boolean"==typeof arguments[1]&&ms(arguments[0],Ds)){const t=arguments[1];let e=!1;for(let n=arguments[0].iterator();n.hasNext();)this.add(n.next(),t),e=!0;return e}return super.addAll.apply(this,arguments)}clone(){const t=super.clone.call(this);for(let e=0;e<this.size();e++)t.add(e,this.get(e).clone());return t}closeRing(){if(this.size()>0){const t=this.get(0).copy();this.add(t,!1)}}toCoordinateArray(){if(0===arguments.length)return this.toArray(Us.coordArrayType);if(1===arguments.length){if(arguments[0])return this.toArray(Us.coordArrayType);const t=this.size(),e=new Array(t).fill(null);for(let n=0;n<t;n++)e[n]=this.get(t-n-1);return e}}add(){if(1===arguments.length){const t=arguments[0];return super.add.call(this,t)}if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return this.add(t,e,!0),!0}if(arguments[0]instanceof Ps&&"boolean"==typeof arguments[1]){const t=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(t))return null}super.add.call(this,t)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return this.add(t,e),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(arguments[2])for(let n=0;n<t.length;n++)this.add(t[n],e);else for(let n=t.length-1;n>=0;n--)this.add(t[n],e);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof Ps){const t=arguments[0],e=arguments[1];if(!arguments[2]){const n=this.size();if(n>0){if(t>0){if(this.get(t-1).equals2D(e))return null}if(t<n){if(this.get(t).equals2D(e))return null}}}super.add.call(this,t,e)}}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];let s=1;n>i&&(s=-1);for(let r=n;r!==i;r+=s)this.add(t[r],e);return!0}}}Us.coordArrayType=new Array(0).fill(null);class zs{static relativeSign(t,e){return t<e?-1:t>e?1:0}static compareValue(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0}static compare(t,e,n){if(e.equals2D(n))return 0;const i=zs.relativeSign(e.x,n.x),s=zs.relativeSign(e.y,n.y);switch(t){case 0:return zs.compareValue(i,s);case 1:return zs.compareValue(s,i);case 2:return zs.compareValue(s,-i);case 3:return zs.compareValue(-i,s);case 4:return zs.compareValue(-i,-s);case 5:return zs.compareValue(-s,-i);case 6:return zs.compareValue(-s,i);case 7:return zs.compareValue(i,-s)}return Ts.shouldNeverReachHere("invalid octant value"),0}}class ks{constructor(){ks.constructor_.apply(this,arguments)}static constructor_(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._segString=t,this.coord=new Ps(e),this.segmentIndex=n,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))}getCoordinate(){return this.coord}print(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex)}compareTo(t){const e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:this._isInterior?e._isInterior?zs.compare(this._segmentOctant,this.coord,e.coord):1:-1}isEndPoint(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t}toString(){return this.segmentIndex+":"+this.coord.toString()}isInterior(){return this._isInterior}get interfaces_(){return[Ss]}}class Xs{hasNext(){}next(){}remove(){}}class Vs{constructor(t){this.value=t}intValue(){return this.value}compareTo(t){return this.value<t?-1:this.value>t?1:0}static compare(t,e){return t<e?-1:t>e?1:0}static isNan(t){return Number.isNaN(t)}static valueOf(t){return new Vs(t)}}class js extends Es{constructor(t){super(t),this.name=Object.keys({UnsupportedOperationException:js})[0]}}class Hs{get(){}put(){}size(){}values(){}entrySet(){}}class Ws extends Hs{}class Zs extends Ds{contains(){}}class Js extends Zs{constructor(t){super(),this.map=new Map,t instanceof Ds&&this.addAll(t)}contains(t){const e=t.hashCode?t.hashCode():t;return!!this.map.has(e)}add(t){const e=t.hashCode?t.hashCode():t;return!this.map.has(e)&&!!this.map.set(e,t)}addAll(t){for(const e of t)this.add(e);return!0}remove(){throw new js}size(){return this.map.size}isEmpty(){return 0===this.map.size}toArray(){return Array.from(this.map.values())}iterator(){return new Ks(this.map)}[Symbol.iterator](){return this.map}}class Ks{constructor(t){this.iterator=t.values();const{done:e,value:n}=this.iterator.next();this.done=e,this.value=n}next(){if(this.done)throw new qs;const t=this.value,{done:e,value:n}=this.iterator.next();return this.done=e,this.value=n,t}hasNext(){return!this.done}remove(){throw new js}}function Qs(t){return null==t?0:t.color}function $s(t){return null==t?null:t.parent}function tr(t,e){null!==t&&(t.color=e)}function er(t){return null==t?null:t.left}function nr(t){return null==t?null:t.right}class ir extends Ws{constructor(){super(),this.root_=null,this.size_=0}get(t){let e=this.root_;for(;null!==e;){const n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null}put(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:0,getValue(){return this.value},getKey(){return this.key}},this.size_=1,null;let n,i,s=this.root_;do{if(n=s,i=t.compareTo(s.key),i<0)s=s.left;else{if(!(i>0)){const t=s.value;return s.value=e,t}s=s.right}}while(null!==s);const r={key:t,left:null,right:null,value:e,parent:n,color:0,getValue(){return this.value},getKey(){return this.key}};return i<0?n.left=r:n.right=r,this.fixAfterInsertion(r),this.size_++,null}fixAfterInsertion(t){let e;for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)$s(t)===er($s($s(t)))?(e=nr($s($s(t))),1===Qs(e)?(tr($s(t),0),tr(e,0),tr($s($s(t)),1),t=$s($s(t))):(t===nr($s(t))&&(t=$s(t),this.rotateLeft(t)),tr($s(t),0),tr($s($s(t)),1),this.rotateRight($s($s(t))))):(e=er($s($s(t))),1===Qs(e)?(tr($s(t),0),tr(e,0),tr($s($s(t)),1),t=$s($s(t))):(t===er($s(t))&&(t=$s(t),this.rotateRight(t)),tr($s(t),0),tr($s($s(t)),1),this.rotateLeft($s($s(t)))));this.root_.color=0}values(){const t=new Bs;let e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=ir.successor(e));)t.add(e.value);return t}entrySet(){const t=new Js;let e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=ir.successor(e));)t.add(e);return t}rotateLeft(t){if(null!=t){const e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}}rotateRight(t){if(null!=t){const e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}}getFirstEntry(){let t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t}static successor(t){let e;if(null===t)return null;if(null!==t.right){for(e=t.right;null!==e.left;)e=e.left;return e}{e=t.parent;let n=t;for(;null!==e&&n===e.right;)n=e,e=e.parent;return e}}size(){return this.size_}containsKey(t){let e=this.root_;for(;null!==e;){const n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return!0;e=e.right}}return!1}}class sr{constructor(){sr.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new ir,this._edge=null;const t=arguments[0];this._edge=t}getSplitCoordinates(){const t=new Us;this.addEndpoints();const e=this.iterator();let n=e.next();for(;e.hasNext();){const i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()}print(t){t.println("Intersections:");for(let e=this.iterator();e.hasNext();){e.next().print(t)}}findCollapsesFromExistingVertices(t){for(let e=0;e<this._edge.size()-2;e++){const n=this._edge.getCoordinate(e);this._edge.getCoordinate(e+1);const i=this._edge.getCoordinate(e+2);n.equals2D(i)&&t.add(Vs.valueOf(e+1))}}addEdgeCoordinates(t,e,n){const i=this.createSplitEdgePts(t,e);n.add(i,!1)}findCollapseIndex(t,e,n){if(!t.coord.equals2D(e.coord))return!1;let i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)}findCollapsesFromInsertedNodes(t){const e=new Array(1).fill(null),n=this.iterator();let i=n.next();for(;n.hasNext();){const s=n.next();this.findCollapseIndex(i,s,e)&&t.add(Vs.valueOf(e[0])),i=s}}getEdge(){return this._edge}addEndpoints(){const t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)}createSplitEdge(t,e){const n=this.createSplitEdgePts(t,e);return new La(n,this._edge.getData())}add(t,e){const n=new ks(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(n);return null!==i?(Ts.isTrue(i.coord.equals2D(t),"Found equal nodes with different coordinates"),i):(this._nodeMap.put(n,n),n)}checkSplitEdgesCorrectness(t){const e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new Cs("bad split edge start point at "+n);const i=t.get(t.size()-1).getCoordinates(),s=i[i.length-1];if(!s.equals2D(e[e.length-1]))throw new Cs("bad split edge end point at "+s)}addCollapsedNodes(){const t=new Bs;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(let e=t.iterator();e.hasNext();){const t=e.next().intValue();this.add(this._edge.getCoordinate(t),t)}}createSplitEdgePts(t,e){let n=e.segmentIndex-t.segmentIndex+2;if(2===n)return[new Ps(t.coord),new Ps(e.coord)];const i=this._edge.getCoordinate(e.segmentIndex),s=e.isInterior()||!e.coord.equals2D(i);s||n--;const r=new Array(n).fill(null);let o=0;r[o++]=new Ps(t.coord);for(let n=t.segmentIndex+1;n<=e.segmentIndex;n++)r[o++]=this._edge.getCoordinate(n);return s&&(r[o]=new Ps(e.coord)),r}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(t){this.addEndpoints(),this.addCollapsedNodes();const e=this.iterator();let n=e.next();for(;e.hasNext();){const i=e.next(),s=this.createSplitEdge(n,i);t.add(s),n=i}}}class rr{static ofLine(t){const e=t.size();if(e<=1)return 0;let n=0;const i=new Ps;t.getCoordinate(0,i);let s=i.x,r=i.y;for(let o=1;o<e;o++){t.getCoordinate(o,i);const e=i.x,a=i.y,l=e-s,c=a-r;n+=Math.sqrt(l*l+c*c),s=e,r=a}return n}}class or{filter(t){}}class ar{constructor(){ar.constructor_.apply(this,arguments)}static constructor_(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof Ps){const t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof ar){const t=arguments[0];this.init(t)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.init(t.x,e.x,t.y,e.y)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.init(t,e,n,i)}}static intersects(){if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];let s=Math.min(n.x,i.x),r=Math.max(n.x,i.x),o=Math.min(t.x,e.x),a=Math.max(t.x,e.x);return!(o>r)&&(!(a<s)&&(s=Math.min(n.y,i.y),r=Math.max(n.y,i.y),o=Math.min(t.y,e.y),a=Math.max(t.y,e.y),!(o>r)&&!(a<s)))}}getArea(){return this.getWidth()*this.getHeight()}getMinX(){return this._minx}expandToInclude(){if(1===arguments.length){if(arguments[0]instanceof Ps){const t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof ar){const t=arguments[0];if(t.isNull())return null;this.isNull()?(this._minx=t.getMinX(),this._maxx=t.getMaxX(),this._miny=t.getMinY(),this._maxy=t.getMaxY()):(t._minx<this._minx&&(this._minx=t._minx),t._maxx>this._maxx&&(this._maxx=t._maxx),t._miny<this._miny&&(this._miny=t._miny),t._maxy>this._maxy&&(this._maxy=t._maxy))}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.isNull()?(this._minx=t,this._maxx=t,this._miny=e,this._maxy=e):(t<this._minx&&(this._minx=t),t>this._maxx&&(this._maxx=t),e<this._miny&&(this._miny=e),e>this._maxy&&(this._maxy=e))}}compareTo(t){const e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0}translate(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)}copy(){return new ar(this)}expandBy(){if(1===arguments.length){const t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.isNull())return null;this._minx-=t,this._maxx+=t,this._miny-=e,this._maxy+=e,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}}contains(){if(1===arguments.length){if(arguments[0]instanceof ar){const t=arguments[0];return this.covers(t)}if(arguments[0]instanceof Ps){const t=arguments[0];return this.covers(t)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.covers(t,e)}}hashCode(){let t=17;return t=37*t+Ps.hashCode(this._minx),t=37*t+Ps.hashCode(this._maxx),t=37*t+Ps.hashCode(this._miny),t=37*t+Ps.hashCode(this._maxy),t}equals(t){if(!(t instanceof ar))return!1;const e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()}intersection(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new ar;const e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,i=this._maxx<t._maxx?this._maxx:t._maxx,s=this._maxy<t._maxy?this._maxy:t._maxy;return new ar(e,i,n,s)}isNull(){return this._maxx<this._minx}getMaxX(){return this._maxx}covers(){if(1===arguments.length){if(arguments[0]instanceof Ps){const t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof ar){const t=arguments[0];return!this.isNull()&&!t.isNull()&&(t.getMinX()>=this._minx&&t.getMaxX()<=this._maxx&&t.getMinY()>=this._miny&&t.getMaxY()<=this._maxy)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];return!this.isNull()&&(t>=this._minx&&t<=this._maxx&&e>=this._miny&&e<=this._maxy)}}intersects(){if(1===arguments.length){if(arguments[0]instanceof ar){const t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof Ps){const t=arguments[0];return this.intersects(t.x,t.y)}}else if(2===arguments.length){if(arguments[0]instanceof Ps&&arguments[1]instanceof Ps){const t=arguments[0],e=arguments[1];if(this.isNull())return!1;if((t.x<e.x?t.x:e.x)>this._maxx)return!1;if((t.x>e.x?t.x:e.x)<this._minx)return!1;if((t.y<e.y?t.y:e.y)>this._maxy)return!1;return!((t.y>e.y?t.y:e.y)<this._miny)}if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return!this.isNull()&&!(t>this._maxx||t<this._minx||e>this._maxy||e<this._miny)}}}getMinY(){return this._miny}getDiameter(){if(this.isNull())return 0;const t=this.getWidth(),e=this.getHeight();return Math.sqrt(t*t+e*e)}minExtent(){if(this.isNull())return 0;const t=this.getWidth(),e=this.getHeight();return t<e?t:e}getWidth(){return this.isNull()?0:this._maxx-this._minx}toString(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"}setToNull(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1}disjoint(t){return!(!this.isNull()&&!t.isNull())||(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}getHeight(){return this.isNull()?0:this._maxy-this._miny}maxExtent(){if(this.isNull())return 0;const t=this.getWidth(),e=this.getHeight();return t>e?t:e}centre(){return this.isNull()?null:new Ps((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)}init(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof Ps){const t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof ar){const t=arguments[0];this._minx=t._minx,this._maxx=t._maxx,this._miny=t._miny,this._maxy=t._maxy}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.init(t.x,e.x,t.y,e.y)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t<e?(this._minx=t,this._maxx=e):(this._minx=e,this._maxx=t),n<i?(this._miny=n,this._maxy=i):(this._miny=i,this._maxy=n)}}getMaxY(){return this._maxy}distance(t){if(this.intersects(t))return 0;let e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);let n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)}get interfaces_(){return[Ss,ws]}}class lr{constructor(){lr.constructor_.apply(this,arguments)}isGeometryCollection(){return this.getTypeCode()===lr.TYPECODE_GEOMETRYCOLLECTION}getFactory(){return this._factory}getGeometryN(t){return this}getArea(){return 0}isRectangle(){return!1}equalsExact(t){return this===t||this.equalsExact(t,0)}geometryChanged(){this.apply(lr.geometryChangedFilter)}geometryChangedAction(){this._envelope=null}equalsNorm(t){return null!==t&&this.norm().equalsExact(t.norm())}getLength(){return 0}getNumGeometries(){return 1}compareTo(){let t;if(1===arguments.length){const e=arguments[0];return t=e,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(e)}if(2===arguments.length){const e=arguments[0],n=arguments[1];return t=e,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(e,n)}}getUserData(){return this._userData}getSRID(){return this._SRID}getEnvelope(){return this.getFactory().toGeometry(this.getEnvelopeInternal())}static checkNotGeometryCollection(t){if(t.getTypeCode()===lr.TYPECODE_GEOMETRYCOLLECTION)throw new xs("This method does not support GeometryCollection arguments")}equal(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n}norm(){const t=this.copy();return t.normalize(),t}reverse(){const t=this.reverseInternal();return null!=this.envelope&&(t.envelope=this.envelope.copy()),t.setSRID(this.getSRID()),t}copy(){const t=this.copyInternal();return t.envelope=null==this._envelope?null:this._envelope.copy(),t._SRID=this._SRID,t._userData=this._userData,t}getPrecisionModel(){return this._factory.getPrecisionModel()}getEnvelopeInternal(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new ar(this._envelope)}setSRID(t){this._SRID=t}setUserData(t){this._userData=t}compare(t,e){const n=t.iterator(),i=e.iterator();for(;n.hasNext()&&i.hasNext();){const t=n.next(),e=i.next(),s=t.compareTo(e);if(0!==s)return s}return n.hasNext()?1:i.hasNext()?-1:0}hashCode(){return this.getEnvelopeInternal().hashCode()}isEquivalentClass(t){return this.getTypeCode()==t.getTypeCode()}get interfaces_(){return[Rs,Ss,ws]}getClass(){return lr}static hasNonEmptyElements(t){for(let e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1}static hasNullElements(t){for(let e=0;e<t.length;e++)if(null===t[e])return!0;return!1}}lr.constructor_=function(t){t&&(this._envelope=null,this._userData=null,this._factory=t,this._SRID=t.getSRID())},lr.TYPECODE_POINT=0,lr.TYPECODE_MULTIPOINT=1,lr.TYPECODE_LINESTRING=2,lr.TYPECODE_LINEARRING=3,lr.TYPECODE_MULTILINESTRING=4,lr.TYPECODE_POLYGON=5,lr.TYPECODE_MULTIPOLYGON=6,lr.TYPECODE_GEOMETRYCOLLECTION=7,lr.TYPENAME_POINT="Point",lr.TYPENAME_MULTIPOINT="MultiPoint",lr.TYPENAME_LINESTRING="LineString",lr.TYPENAME_LINEARRING="LinearRing",lr.TYPENAME_MULTILINESTRING="MultiLineString",lr.TYPENAME_POLYGON="Polygon",lr.TYPENAME_MULTIPOLYGON="MultiPolygon",lr.TYPENAME_GEOMETRYCOLLECTION="GeometryCollection",lr.geometryChangedFilter={get interfaces_(){return[or]},filter(t){t.geometryChangedAction()}};class cr extends Zs{}class hr extends cr{constructor(t){super(),this.array=[],t instanceof Ds&&this.addAll(t)}contains(t){for(const e of this.array)if(0===e.compareTo(t))return!0;return!1}add(t){if(this.contains(t))return!1;for(let e=0,n=this.array.length;e<n;e++){if(1===this.array[e].compareTo(t))return!!this.array.splice(e,0,t)}return this.array.push(t),!0}addAll(t){for(const e of t)this.add(e);return!0}remove(){throw new js}size(){return this.array.length}isEmpty(){return 0===this.array.length}toArray(){return this.array.slice()}iterator(){return new ur(this.array)}}class ur{constructor(t){this.array=t,this.position=0}next(){if(this.position===this.array.length)throw new qs;return this.array[this.position++]}hasNext(){return this.position<this.array.length}remove(){throw new js}}class gr{static isWhitespace(t){return t<=32&&t>=0||127===t}static toUpperCase(t){return t.toUpperCase()}}class dr{static toDimensionSymbol(t){switch(t){case dr.FALSE:return dr.SYM_FALSE;case dr.TRUE:return dr.SYM_TRUE;case dr.DONTCARE:return dr.SYM_DONTCARE;case dr.P:return dr.SYM_P;case dr.L:return dr.SYM_L;case dr.A:return dr.SYM_A}throw new xs("Unknown dimension value: "+t)}static toDimensionValue(t){switch(gr.toUpperCase(t)){case dr.SYM_FALSE:return dr.FALSE;case dr.SYM_TRUE:return dr.TRUE;case dr.SYM_DONTCARE:return dr.DONTCARE;case dr.SYM_P:return dr.P;case dr.SYM_L:return dr.L;case dr.SYM_A:return dr.A}throw new xs("Unknown dimension symbol: "+t)}}dr.P=0,dr.L=1,dr.A=2,dr.FALSE=-1,dr.TRUE=-2,dr.DONTCARE=-3,dr.SYM_FALSE="F",dr.SYM_TRUE="T",dr.SYM_DONTCARE="*",dr.SYM_P="0",dr.SYM_L="1",dr.SYM_A="2";class fr{static sort(){const t=arguments[0];if(1===arguments.length)t.sort(((t,e)=>t.compareTo(e)));else if(2===arguments.length)t.sort(((t,e)=>arguments[1].compare(t,e)));else if(3===arguments.length){const e=t.slice(arguments[1],arguments[2]);e.sort();const n=t.slice(0,arguments[1]).concat(e,t.slice(arguments[2],t.length));t.splice(0,t.length);for(const e of n)t.push(e)}else if(4===arguments.length){const e=t.slice(arguments[1],arguments[2]);e.sort(((t,e)=>arguments[3].compare(t,e)));const n=t.slice(0,arguments[1]).concat(e,t.slice(arguments[2],t.length));t.splice(0,t.length);for(const e of n)t.push(e)}}static asList(t){const e=new Bs;for(const n of t)e.add(n);return e}static copyOf(t,e){return t.slice(0,e)}}class pr{filter(t){}}class _r{filter(t){}}class mr{filter(t,e){}isGeometryChanged(){}isDone(){}}class yr extends lr{constructor(){super(),yr.constructor_.apply(this,arguments)}static constructor_(){if(this._geometries=null,0===arguments.length);else if(2===arguments.length){let t=arguments[0],e=arguments[1];if(lr.constructor_.call(this,e),null===t&&(t=[]),lr.hasNullElements(t))throw new xs("geometries must not contain null elements");this._geometries=t}}computeEnvelopeInternal(){const t=new ar;for(let e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t}getGeometryN(t){return this._geometries[t]}getCoordinates(){const t=new Array(this.getNumPoints()).fill(null);let e=-1;for(let n=0;n<this._geometries.length;n++){const i=this._geometries[n].getCoordinates();for(let n=0;n<i.length;n++)e++,t[e]=i[n]}return t}getArea(){let t=0;for(let e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new yr(t,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof lr){const t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;const n=t;if(this._geometries.length!==n._geometries.length)return!1;for(let t=0;t<this._geometries.length;t++)if(!this._geometries[t].equalsExact(n._geometries[t],e))return!1;return!0}return super.equalsExact.apply(this,arguments)}reverseInternal(){const t=this._geometries.length,e=new Bs(t);for(let n=0;n<t;n++)e.add(this._geometries[n].reverse());return this.getFactory().buildGeometry(e)}getTypeCode(){return lr.TYPECODE_GEOMETRYCOLLECTION}getDimension(){let t=dr.FALSE;for(let e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t}getNumGeometries(){return this._geometries.length}getBoundary(){return lr.checkNotGeometryCollection(this),Ts.shouldNeverReachHere(),null}getGeometryType(){return lr.TYPENAME_GEOMETRYCOLLECTION}isEmpty(){for(let t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0}normalize(){for(let t=0;t<this._geometries.length;t++)this._geometries[t].normalize();fr.sort(this._geometries)}getCoordinate(){return this.isEmpty()?null:this._geometries[0].getCoordinate()}getBoundaryDimension(){let t=dr.FALSE;for(let e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t}getLength(){let t=0;for(let e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t}getNumPoints(){let t=0;for(let e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t}compareToSameClass(){if(1===arguments.length){const t=arguments[0],e=new hr(fr.asList(this._geometries)),n=new hr(fr.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){const t=arguments[1],e=arguments[0],n=this.getNumGeometries(),i=e.getNumGeometries();let s=0;for(;s<n&&s<i;){const n=this.getGeometryN(s),i=e.getGeometryN(s),r=n.compareToSameClass(i,t);if(0!==r)return r;s++}return s<n?1:s<i?-1:0}}apply(){if(ms(arguments[0],pr)){const t=arguments[0];for(let e=0;e<this._geometries.length;e++)this._geometries[e].apply(t)}else if(ms(arguments[0],mr)){const t=arguments[0];if(0===this._geometries.length)return null;for(let e=0;e<this._geometries.length&&(this._geometries[e].apply(t),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(ms(arguments[0],_r)){const t=arguments[0];t.filter(this);for(let e=0;e<this._geometries.length;e++)this._geometries[e].apply(t)}else if(ms(arguments[0],or)){const t=arguments[0];t.filter(this);for(let e=0;e<this._geometries.length;e++)this._geometries[e].apply(t)}}}class Er{}class xr extends yr{constructor(){super(),xr.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];yr.constructor_.call(this,t,e)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof lr){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&super.equalsExact.call(this,t,e)}return super.equalsExact.apply(this,arguments)}getTypeCode(){return lr.TYPECODE_MULTIPOINT}getDimension(){return 0}getBoundary(){return this.getFactory().createGeometryCollection()}getGeometryType(){return lr.TYPENAME_MULTIPOINT}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new xr(t,this._factory)}isValid(){return!0}getCoordinate(){if(1===arguments.length&&Number.isInteger(arguments[0])){const t=arguments[0];return this._geometries[t].getCoordinate()}return super.getCoordinate.apply(this,arguments)}getBoundaryDimension(){return dr.FALSE}get interfaces_(){return[Er]}}class Ir extends Hs{constructor(){super(),this.map=new Map}get(t){return this.map.get(t)||null}put(t,e){return this.map.set(t,e),e}values(){const t=new Bs,e=this.map.values();let n=e.next();for(;!n.done;)t.add(n.value),n=e.next();return t}entrySet(){const t=new Js;return this.map.entries().forEach((e=>t.add(e))),t}size(){return this.map.size()}}class Nr{static opposite(t){return t===Nr.LEFT?Nr.RIGHT:t===Nr.RIGHT?Nr.LEFT:t}}Nr.ON=0,Nr.LEFT=1,Nr.RIGHT=2;class Sr{}const wr={reverseOrder:function(){return{compare:(t,e)=>e.compareTo(t)}},min:function(t){return wr.sort(t),t.get(0)},sort:function(t,e){const n=t.toArray();e?fr.sort(n,e):fr.sort(n);const i=t.iterator();for(let t=0,e=n.length;t<e;t++)i.next(),i.set(n[t])},singletonList:function(t){const e=new Bs;return e.add(t),e}};class Cr{constructor(){Cr.constructor_.apply(this,arguments)}static constructor_(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;const t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n}static isAdjacentSegments(t,e){return 1===Math.abs(t-e)}isTrivialIntersection(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Cr.isAdjacentSegments(e,i))return!0;if(t.isClosed()){const n=t.getNumPoints()-1;if(0===e&&i===n||0===i&&e===n)return!0}}return!1}hasProperInteriorIntersection(){return this._hasProperInterior}isBoundaryPointInternal(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next().getCoordinate();if(t.isIntersection(e))return!0}return!1}hasProperIntersection(){return this._hasProper}hasIntersection(){return this._hasIntersection}isDone(){return this._isDone}isBoundaryPoint(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))}setBoundaryNodes(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e}addIntersections(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;const s=t.getCoordinates()[e],r=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(s,r,o,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))}getProperIntersectionPoint(){return this._properIntersectionPoint}setIsDoneIfProperInt(t){this._isDoneWhenProperInt=t}}class Lr{constructor(){Lr.constructor_.apply(this,arguments)}static constructor_(){this.mce=null,this.chainIndex=null;const t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e}computeIntersections(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)}}class Tr{constructor(){Tr.constructor_.apply(this,arguments)}static constructor_(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){const t=arguments[0],e=arguments[1];this._eventType=Tr.DELETE,this._xValue=t,this._insertEvent=e}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._eventType=Tr.INSERT,this._label=t,this._xValue=e,this._obj=n}}getObject(){return this._obj}getDeleteEventIndex(){return this._deleteEventIndex}isDelete(){return this._eventType===Tr.DELETE}setDeleteEventIndex(t){this._deleteEventIndex=t}compareTo(t){const e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0}getInsertEvent(){return this._insertEvent}isInsert(){return this._eventType===Tr.INSERT}isSameLabel(t){return null!==this._label&&this._label===t._label}get interfaces_(){return[Ss]}}Tr.INSERT=1,Tr.DELETE=2;class Rr extends Sr{constructor(){super(),Rr.constructor_.apply(this,arguments)}static constructor_(){this.events=new Bs,this.nOverlaps=null}prepareEvents(){wr.sort(this.events);for(let t=0;t<this.events.size();t++){const e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}}computeIntersections(){if(1===arguments.length){const t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(let e=0;e<this.events.size();e++){const n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof Cr&&ms(arguments[0],Gs)&&ms(arguments[1],Gs)){const t=arguments[0],e=arguments[1],n=arguments[2];this.addEdges(t,t),this.addEdges(e,e),this.computeIntersections(n)}else if("boolean"==typeof arguments[2]&&ms(arguments[0],Gs)&&arguments[1]instanceof Cr){const t=arguments[0],e=arguments[1];arguments[2]?this.addEdges(t,null):this.addEdges(t),this.computeIntersections(e)}}addEdge(t,e){const n=t.getMonotoneChainEdge(),i=n.getStartIndexes();for(let t=0;t<i.length-1;t++){const i=new Lr(n,t),s=new Tr(e,n.getMinX(t),i);this.events.add(s),this.events.add(new Tr(n.getMaxX(t),s))}}processOverlaps(t,e,n,i){const s=n.getObject();for(let r=t;r<e;r++){const t=this.events.get(r);if(t.isInsert()){const e=t.getObject();n.isSameLabel(t)||(s.computeIntersections(e,i),this.nOverlaps++)}}}addEdges(){if(1===arguments.length){for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.addEdge(e,e)}}else if(2===arguments.length){const t=arguments[1];for(let e=arguments[0].iterator();e.hasNext();){const n=e.next();this.addEdge(n,t)}}}}class Or{constructor(t){this.str=t}append(t){this.str+=t}setCharAt(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}toString(){return this.str}}class br extends Es{constructor(t){super(t),this.name=Object.keys({IllegalStateException:br})[0]}}class Mr{constructor(){Mr.constructor_.apply(this,arguments)}static constructor_(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){const t=arguments[0];this.init(t)}else if(arguments[0]instanceof Mr){const t=arguments[0];this.init(t)}else if("string"==typeof arguments[0]){const t=arguments[0];Mr.constructor_.call(this,Mr.parse(t))}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.init(t,e)}}static determinant(){if("number"==typeof arguments[3]&&"number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];return Mr.determinant(Mr.valueOf(t),Mr.valueOf(e),Mr.valueOf(n),Mr.valueOf(i))}if(arguments[3]instanceof Mr&&arguments[2]instanceof Mr&&arguments[0]instanceof Mr&&arguments[1]instanceof Mr){const t=arguments[1],e=arguments[2],n=arguments[3];return arguments[0].multiply(n).selfSubtract(t.multiply(e))}}static sqr(t){return Mr.valueOf(t).selfMultiply(t)}static valueOf(){if("string"==typeof arguments[0]){const t=arguments[0];return Mr.parse(t)}if("number"==typeof arguments[0]){return new Mr(arguments[0])}}static sqrt(t){return Mr.valueOf(t).sqrt()}static parse(t){let e=0;const n=t.length;for(;gr.isWhitespace(t.charAt(e));)e++;let i=!1;if(e<n){const n=t.charAt(e);"-"!==n&&"+"!==n||(e++,"-"===n&&(i=!0))}const s=new Mr;let r=0,o=0,a=0,l=!1;for(;!(e>=n);){const n=t.charAt(e);if(e++,gr.isDigit(n)){const t=n-"0";s.selfMultiply(Mr.TEN),s.selfAdd(t),r++}else{if("."!==n){if("e"===n||"E"===n){const n=t.substring(e);try{a=Vs.parseInt(n)}catch(e){throw e instanceof NumberFormatException?new NumberFormatException("Invalid exponent "+n+" in string "+t):e}break}throw new NumberFormatException("Unexpected character '"+n+"' at position "+e+" in string "+t)}o=r,l=!0}}let c=s;l||(o=r);const h=r-o-a;if(0===h)c=s;else if(h>0){const t=Mr.TEN.pow(h);c=s.divide(t)}else if(h<0){const t=Mr.TEN.pow(-h);c=s.multiply(t)}return i?c.negate():c}static createNaN(){return new Mr(Ns.NaN,Ns.NaN)}static copy(t){return new Mr(t)}static magnitude(t){const e=Math.abs(t),n=Math.log(e)/Math.log(10);let i=Math.trunc(Math.floor(n));return 10*Math.pow(10,i)<=e&&(i+=1),i}static stringOfChar(t,e){const n=new Or;for(let i=0;i<e;i++)n.append(t);return n.toString()}le(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<=t._lo}extractSignificantDigits(t,e){let n=this.abs(),i=Mr.magnitude(n._hi);const s=Mr.TEN.pow(i);n=n.divide(s),n.gt(Mr.TEN)?(n=n.divide(Mr.TEN),i+=1):n.lt(Mr.ONE)&&(n=n.multiply(Mr.TEN),i-=1);const r=i+1,o=new Or,a=Mr.MAX_PRINT_DIGITS-1;for(let e=0;e<=a;e++){t&&e===r&&o.append(".");const i=Math.trunc(n._hi);if(i<0)break;let s=!1,l=0;i>9?(s=!0,l="9"):l="0"+i,o.append(l),n=n.subtract(Mr.valueOf(i)).multiply(Mr.TEN),s&&n.selfAdd(Mr.TEN);let c=!0;const h=Mr.magnitude(n._hi);if(h<0&&Math.abs(h)>=a-e&&(c=!1),!c)break}return e[0]=i,o.toString()}sqr(){return this.multiply(this)}getSpecialNumberString(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null}setValue(){if(arguments[0]instanceof Mr){const t=arguments[0];return this.init(t),this}if("number"==typeof arguments[0]){const t=arguments[0];return this.init(t),this}}multiply(){if(arguments[0]instanceof Mr){const t=arguments[0];return t.isNaN()?Mr.createNaN():Mr.copy(this).selfMultiply(t)}if("number"==typeof arguments[0]){const t=arguments[0];return Ns.isNaN(t)?Mr.createNaN():Mr.copy(this).selfMultiply(t,0)}}isNaN(){return Ns.isNaN(this._hi)}reciprocal(){let t=null,e=null,n=null,i=null,s=null,r=null,o=null,a=null;s=1/this._hi,r=Mr.SPLIT*s,t=r-s,a=Mr.SPLIT*this._hi,t=r-t,e=s-t,n=a-this._hi,o=s*this._hi,n=a-n,i=this._hi-n,a=t*n-o+t*i+e*n+e*i,r=(1-o-a-s*this._lo)/this._hi;const l=s+r;return new Mr(l,s-l+r)}doubleValue(){return this._hi+this._lo}subtract(){if(arguments[0]instanceof Mr){const t=arguments[0];return this.add(t.negate())}if("number"==typeof arguments[0]){const t=arguments[0];return this.add(-t)}}equals(){if(1===arguments.length&&arguments[0]instanceof Mr){const t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}}isZero(){return 0===this._hi&&0===this._lo}selfSubtract(){if(arguments[0]instanceof Mr){const t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];return this.isNaN()?this:this.selfAdd(-t,0)}}min(t){return this.le(t)?this:t}selfDivide(){if(1===arguments.length){if(arguments[0]instanceof Mr){const t=arguments[0];return this.selfDivide(t._hi,t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];return this.selfDivide(t,0)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=null,i=null,s=null,r=null,o=null,a=null,l=null,c=null;return o=this._hi/t,a=Mr.SPLIT*o,n=a-o,c=Mr.SPLIT*t,n=a-n,i=o-n,s=c-t,l=o*t,s=c-s,r=t-s,c=n*s-l+n*r+i*s+i*r,a=(this._hi-l-c+this._lo-o*e)/t,c=o+a,this._hi=c,this._lo=o-c+a,this}}dump(){return"DD<"+this._hi+", "+this._lo+">"}divide(){if(arguments[0]instanceof Mr){const t=arguments[0];let e=null,n=null,i=null,s=null,r=null,o=null,a=null,l=null;r=this._hi/t._hi,o=Mr.SPLIT*r,e=o-r,l=Mr.SPLIT*t._hi,e=o-e,n=r-e,i=l-t._hi,a=r*t._hi,i=l-i,s=t._hi-i,l=e*i-a+e*s+n*i+n*s,o=(this._hi-a-l+this._lo-r*t._lo)/t._hi,l=r+o;return new Mr(l,r-l+o)}if("number"==typeof arguments[0]){const t=arguments[0];return Ns.isNaN(t)?Mr.createNaN():Mr.copy(this).selfDivide(t,0)}}ge(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>=t._lo}pow(t){if(0===t)return Mr.valueOf(1);let e=new Mr(this),n=Mr.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2==1&&n.selfMultiply(e),i/=2,i>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n}ceil(){if(this.isNaN())return Mr.NaN;const t=Math.ceil(this._hi);let e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new Mr(t,e)}compareTo(t){const e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0}rint(){if(this.isNaN())return this;return this.add(.5).floor()}max(t){return this.ge(t)?this:t}sqrt(){if(this.isZero())return Mr.valueOf(0);if(this.isNegative())return Mr.NaN;const t=1/Math.sqrt(this._hi),e=this._hi*t,n=Mr.valueOf(e),i=this.subtract(n.sqr())._hi*(.5*t);return n.add(i)}selfAdd(){if(1===arguments.length){if(arguments[0]instanceof Mr){const t=arguments[0];return this.selfAdd(t._hi,t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];let e=null,n=null,i=null,s=null,r=null,o=null;return i=this._hi+t,r=i-this._hi,s=i-r,s=t-r+(this._hi-s),o=s+this._lo,e=i+o,n=o+(i-e),this._hi=e+n,this._lo=n+(e-this._hi),this}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=null,i=null,s=null,r=null,o=null,a=null,l=null,c=null;o=this._hi+t,s=this._lo+e,l=o-this._hi,c=s-this._lo,a=o-l,r=s-c,a=t-l+(this._hi-a),r=e-c+(this._lo-r),l=a+s,n=o+l,i=l+(o-n),l=r+i;const h=n+l,u=l+(n-h);return this._hi=h,this._lo=u,this}}selfMultiply(){if(1===arguments.length){if(arguments[0]instanceof Mr){const t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];return this.selfMultiply(t,0)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=null,i=null,s=null,r=null,o=null,a=null;o=Mr.SPLIT*this._hi,n=o-this._hi,a=Mr.SPLIT*t,n=o-n,i=this._hi-n,s=a-t,o=this._hi*t,s=a-s,r=t-s,a=n*s-o+n*r+i*s+i*r+(this._hi*e+this._lo*t);const l=o+a;n=o-l;const c=a+n;return this._hi=l,this._lo=c,this}}selfSqr(){return this.selfMultiply(this)}floor(){if(this.isNaN())return Mr.NaN;const t=Math.floor(this._hi);let e=0;return t===this._hi&&(e=Math.floor(this._lo)),new Mr(t,e)}negate(){return this.isNaN()?this:new Mr(-this._hi,-this._lo)}clone(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return null;throw t}}intValue(){return Math.trunc(this._hi)}toString(){const t=Mr.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()}toStandardNotation(){const t=this.getSpecialNumberString();if(null!==t)return t;const e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1;let s=n;if("."===n.charAt(0))s="0"+n;else if(i<0)s="0."+Mr.stringOfChar("0",-i)+n;else if(-1===n.indexOf(".")){const t=i-n.length;s=n+Mr.stringOfChar("0",t)+".0"}return this.isNegative()?"-"+s:s}toSciNotation(){if(this.isZero())return Mr.SCI_NOT_ZERO;const t=this.getSpecialNumberString();if(null!==t)return t;const e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=Mr.SCI_NOT_EXPONENT_CHAR+e[0];if("0"===n.charAt(0))throw new br("Found leading zero: "+n);let s="";n.length>1&&(s=n.substring(1));const r=n.charAt(0)+"."+s;return this.isNegative()?"-"+r+i:r+i}abs(){return this.isNaN()?Mr.NaN:this.isNegative()?this.negate():new Mr(this)}isPositive(){return this._hi>0||0===this._hi&&this._lo>0}lt(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<t._lo}add(){if(arguments[0]instanceof Mr){const t=arguments[0];return Mr.copy(this).selfAdd(t)}if("number"==typeof arguments[0]){const t=arguments[0];return Mr.copy(this).selfAdd(t)}}init(){if(1===arguments.length){if("number"==typeof arguments[0]){const t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof Mr){const t=arguments[0];this._hi=t._hi,this._lo=t._lo}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._hi=t,this._lo=e}}gt(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>t._lo}isNegative(){return this._hi<0||0===this._hi&&this._lo<0}trunc(){return this.isNaN()?Mr.NaN:this.isPositive()?this.floor():this.ceil()}signum(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0}get interfaces_(){return[ws,Ss,Rs]}}Mr.PI=new Mr(3.141592653589793,12246467991473532e-32),Mr.TWO_PI=new Mr(6.283185307179586,24492935982947064e-32),Mr.PI_2=new Mr(1.5707963267948966,6123233995736766e-32),Mr.E=new Mr(2.718281828459045,14456468917292502e-32),Mr.NaN=new Mr(Ns.NaN,Ns.NaN),Mr.EPS=123259516440783e-46,Mr.SPLIT=134217729,Mr.MAX_PRINT_DIGITS=32,Mr.TEN=Mr.valueOf(10),Mr.ONE=Mr.valueOf(1),Mr.SCI_NOT_EXPONENT_CHAR="E",Mr.SCI_NOT_ZERO="0.0E0";class vr{static orientationIndex(t,e,n){const i=vr.orientationIndexFilter(t,e,n);if(i<=1)return i;const s=Mr.valueOf(e.x).selfAdd(-t.x),r=Mr.valueOf(e.y).selfAdd(-t.y),o=Mr.valueOf(n.x).selfAdd(-e.x),a=Mr.valueOf(n.y).selfAdd(-e.y);return s.selfMultiply(a).selfSubtract(r.selfMultiply(o)).signum()}static signOfDet2x2(){if(arguments[3]instanceof Mr&&arguments[2]instanceof Mr&&arguments[0]instanceof Mr&&arguments[1]instanceof Mr){const t=arguments[1],e=arguments[2],n=arguments[3];return arguments[0].multiply(n).selfSubtract(t.multiply(e)).signum()}if("number"==typeof arguments[3]&&"number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],s=Mr.valueOf(t),r=Mr.valueOf(e),o=Mr.valueOf(n),a=Mr.valueOf(i);return s.multiply(a).selfSubtract(r.multiply(o)).signum()}}static intersection(t,e,n,i){const s=new Mr(t.y).selfSubtract(e.y),r=new Mr(e.x).selfSubtract(t.x),o=new Mr(t.x).selfMultiply(e.y).selfSubtract(new Mr(e.x).selfMultiply(t.y)),a=new Mr(n.y).selfSubtract(i.y),l=new Mr(i.x).selfSubtract(n.x),c=new Mr(n.x).selfMultiply(i.y).selfSubtract(new Mr(i.x).selfMultiply(n.y)),h=r.multiply(c).selfSubtract(l.multiply(o)),u=a.multiply(o).selfSubtract(s.multiply(c)),g=s.multiply(l).selfSubtract(a.multiply(r)),d=h.selfDivide(g).doubleValue(),f=u.selfDivide(g).doubleValue();return Ns.isNaN(d)||Ns.isInfinite(d)||Ns.isNaN(f)||Ns.isInfinite(f)?null:new Ps(d,f)}static orientationIndexFilter(t,e,n){let i=null;const s=(t.x-n.x)*(e.y-n.y),r=(t.y-n.y)*(e.x-n.x),o=s-r;if(s>0){if(r<=0)return vr.signum(o);i=s+r}else{if(!(s<0))return vr.signum(o);if(r>=0)return vr.signum(o);i=-s-r}const a=vr.DP_SAFE_EPSILON*i;return o>=a||-o>=a?vr.signum(o):2}static signum(t){return t>0?1:t<0?-1:0}}vr.DP_SAFE_EPSILON=1e-15;class Pr{getCoordinate(){}getCoordinateCopy(t){}createCoordinate(){}getDimension(){}hasM(){return this.getMeasures()>0}getX(t){}hasZ(){return this.getDimension()-this.getMeasures()>2}getMeasures(){return 0}expandEnvelope(t){}copy(){}getY(t){}toCoordinateArray(){}getM(t){if(this.hasM()){const e=this.getDimension()-this.getMeasures();return this.getOrdinate(t,e)}return Ns.NaN}setOrdinate(t,e,n){}getZ(t){return this.hasZ()?this.getOrdinate(t,2):Ns.NaN}size(){}getOrdinate(t,e){}get interfaces_(){return[Rs]}}Pr.X=0,Pr.Y=1,Pr.Z=2,Pr.M=3;class Ar{static isCCW(){if(arguments[0]instanceof Array){const t=arguments[0],e=t.length-1;if(e<3)throw new xs("Ring has fewer than 4 points, so orientation cannot be determined");let n=t[0],i=0;for(let s=1;s<=e;s++){const e=t[s];e.y>n.y&&(n=e,i=s)}let s=i;do{s-=1,s<0&&(s=e)}while(t[s].equals2D(n)&&s!==i);let r=i;do{r=(r+1)%e}while(t[r].equals2D(n)&&r!==i);const o=t[s],a=t[r];if(o.equals2D(n)||a.equals2D(n)||o.equals2D(a))return!1;const l=Ar.index(o,n,a);let c=null;return c=0===l?o.x>a.x:l>0,c}if(ms(arguments[0],Pr)){const t=arguments[0],e=t.size()-1;if(e<3)throw new xs("Ring has fewer than 4 points, so orientation cannot be determined");let n=t.getCoordinate(0),i=0;for(let s=1;s<=e;s++){const e=t.getCoordinate(s);e.y>n.y&&(n=e,i=s)}let s=null,r=i;do{r-=1,r<0&&(r=e),s=t.getCoordinate(r)}while(s.equals2D(n)&&r!==i);let o=null,a=i;do{a=(a+1)%e,o=t.getCoordinate(a)}while(o.equals2D(n)&&a!==i);if(s.equals2D(n)||o.equals2D(n)||s.equals2D(o))return!1;const l=Ar.index(s,n,o);let c=null;return c=0===l?s.x>o.x:l>0,c}}static index(t,e,n){return vr.orientationIndex(t,e,n)}}Ar.CLOCKWISE=-1,Ar.RIGHT=Ar.CLOCKWISE,Ar.COUNTERCLOCKWISE=1,Ar.LEFT=Ar.COUNTERCLOCKWISE,Ar.COLLINEAR=0,Ar.STRAIGHT=Ar.COLLINEAR;class Dr{static toLocationSymbol(t){switch(t){case Dr.EXTERIOR:return"e";case Dr.BOUNDARY:return"b";case Dr.INTERIOR:return"i";case Dr.NONE:return"-"}throw new xs("Unknown location value: "+t)}}Dr.INTERIOR=0,Dr.BOUNDARY=1,Dr.EXTERIOR=2,Dr.NONE=-1;class Fr{constructor(){Fr.constructor_.apply(this,arguments)}static constructor_(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){const t=arguments[0];this.init(1),this.location[Nr.ON]=t}else if(arguments[0]instanceof Fr){const t=arguments[0];if(this.init(t.location.length),null!==t)for(let e=0;e<this.location.length;e++)this.location[e]=t.location[e]}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.init(3),this.location[Nr.ON]=t,this.location[Nr.LEFT]=e,this.location[Nr.RIGHT]=n}}setAllLocations(t){for(let e=0;e<this.location.length;e++)this.location[e]=t}isNull(){for(let t=0;t<this.location.length;t++)if(this.location[t]!==Dr.NONE)return!1;return!0}setAllLocationsIfNull(t){for(let e=0;e<this.location.length;e++)this.location[e]===Dr.NONE&&(this.location[e]=t)}isLine(){return 1===this.location.length}merge(t){if(t.location.length>this.location.length){const t=new Array(3).fill(null);t[Nr.ON]=this.location[Nr.ON],t[Nr.LEFT]=Dr.NONE,t[Nr.RIGHT]=Dr.NONE,this.location=t}for(let e=0;e<this.location.length;e++)this.location[e]===Dr.NONE&&e<t.location.length&&(this.location[e]=t.location[e])}getLocations(){return this.location}flip(){if(this.location.length<=1)return null;const t=this.location[Nr.LEFT];this.location[Nr.LEFT]=this.location[Nr.RIGHT],this.location[Nr.RIGHT]=t}get(t){return t<this.location.length?this.location[t]:Dr.NONE}isEqualOnSide(t,e){return this.location[e]===t.location[e]}allPositionsEqual(t){for(let e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0}toString(){const t=new Or;return this.location.length>1&&t.append(Dr.toLocationSymbol(this.location[Nr.LEFT])),t.append(Dr.toLocationSymbol(this.location[Nr.ON])),this.location.length>1&&t.append(Dr.toLocationSymbol(this.location[Nr.RIGHT])),t.toString()}setLocations(t,e,n){this.location[Nr.ON]=t,this.location[Nr.LEFT]=e,this.location[Nr.RIGHT]=n}isArea(){return this.location.length>1}isAnyNull(){for(let t=0;t<this.location.length;t++)if(this.location[t]===Dr.NONE)return!0;return!1}setLocation(){if(1===arguments.length){const t=arguments[0];this.setLocation(Nr.ON,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.location[t]=e}}init(t){this.location=new Array(t).fill(null),this.setAllLocations(Dr.NONE)}}class Gr{constructor(){Gr.constructor_.apply(this,arguments)}static constructor_(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){const t=arguments[0];this.elt[0]=new Fr(t),this.elt[1]=new Fr(t)}else if(arguments[0]instanceof Gr){const t=arguments[0];this.elt[0]=new Fr(t.elt[0]),this.elt[1]=new Fr(t.elt[1])}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[0]=new Fr(Dr.NONE),this.elt[1]=new Fr(Dr.NONE),this.elt[t].setLocation(e)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.elt[0]=new Fr(t,e,n),this.elt[1]=new Fr(t,e,n)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.elt[0]=new Fr(Dr.NONE,Dr.NONE,Dr.NONE),this.elt[1]=new Fr(Dr.NONE,Dr.NONE,Dr.NONE),this.elt[t].setLocations(e,n,i)}}static toLineLabel(t){const e=new Gr(Dr.NONE);for(let n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e}getGeometryCount(){let t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t}setAllLocations(t,e){this.elt[t].setAllLocations(e)}isNull(t){return this.elt[t].isNull()}setAllLocationsIfNull(){if(1===arguments.length){const t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[t].setAllLocationsIfNull(e)}}isLine(t){return this.elt[t].isLine()}merge(t){for(let e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Fr(t.elt[e]):this.elt[e].merge(t.elt[e])}flip(){this.elt[0].flip(),this.elt[1].flip()}getLocation(){if(1===arguments.length){const t=arguments[0];return this.elt[t].get(Nr.ON)}if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.elt[t].get(e)}}toString(){const t=new Or;return null!==this.elt[0]&&(t.append("A:"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString()}setLocation(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[t].setLocation(Nr.ON,e)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.elt[t].setLocation(e,n)}}isEqualOnSide(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)}allPositionsEqual(t,e){return this.elt[t].allPositionsEqual(e)}toLine(t){this.elt[t].isArea()&&(this.elt[t]=new Fr(this.elt[t].location[0]))}isArea(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){const t=arguments[0];return this.elt[t].isArea()}}isAnyNull(t){return this.elt[t].isAnyNull()}}class qr extends Ps{constructor(){super(),qr.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)Ps.constructor_.call(this);else if(1===arguments.length){if(arguments[0]instanceof qr){const t=arguments[0];Ps.constructor_.call(this,t.x,t.y)}else if(arguments[0]instanceof Ps){const t=arguments[0];Ps.constructor_.call(this,t.x,t.y)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];Ps.constructor_.call(this,t,e,Ps.NULL_ORDINATE)}}setOrdinate(t,e){switch(t){case qr.X:this.x=e;break;case qr.Y:this.y=e;break;default:throw new xs("Invalid ordinate index: "+t)}}setZ(t){throw new xs("CoordinateXY dimension 2 does not support z-ordinate")}copy(){return new qr(this)}toString(){return"("+this.x+", "+this.y+")"}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}getZ(){return Ps.NULL_ORDINATE}getOrdinate(t){switch(t){case qr.X:return this.x;case qr.Y:return this.y}throw new xs("Invalid ordinate index: "+t)}}qr.X=0,qr.Y=1,qr.Z=-1,qr.M=-1;class Br extends Ps{constructor(){super(),Br.constructor_.apply(this,arguments)}static constructor_(){if(this._m=null,0===arguments.length)Ps.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof Br){const t=arguments[0];Ps.constructor_.call(this,t.x,t.y),this._m=t._m}else if(arguments[0]instanceof Ps){const t=arguments[0];Ps.constructor_.call(this,t.x,t.y),this._m=this.getM()}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];Ps.constructor_.call(this,t,e,Ps.NULL_ORDINATE),this._m=n}}setM(t){this._m=t}setZ(t){throw new xs("CoordinateXY dimension 2 does not support z-ordinate")}copy(){return new Br(this)}toString(){return"("+this.x+", "+this.y+" m="+this.getM()+")"}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}getM(){return this._m}setOrdinate(t,e){switch(t){case Br.X:this.x=e;break;case Br.Y:this.y=e;break;case Br.M:this._m=e;break;default:throw new xs("Invalid ordinate index: "+t)}}getZ(){return Ps.NULL_ORDINATE}getOrdinate(t){switch(t){case Br.X:return this.x;case Br.Y:return this.y;case Br.M:return this._m}throw new xs("Invalid ordinate index: "+t)}}Br.X=0,Br.Y=1,Br.Z=-1,Br.M=2;class Yr extends Ps{constructor(){super(),Yr.constructor_.apply(this,arguments)}static constructor_(){if(this._m=null,0===arguments.length)Ps.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof Yr){const t=arguments[0];Ps.constructor_.call(this,t),this._m=t._m}else if(arguments[0]instanceof Ps){const t=arguments[0];Ps.constructor_.call(this,t),this._m=this.getM()}}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];Ps.constructor_.call(this,t,e,n),this._m=i}}setM(t){this._m=t}getOrdinate(t){switch(t){case Ps.X:return this.x;case Ps.Y:return this.y;case Ps.Z:return this.getZ();case Ps.M:return this.getM()}throw new xs("Invalid ordinate index: "+t)}copy(){return new Yr(this)}toString(){return"("+this.x+", "+this.y+", "+this.getZ()+" m="+this.getM()+")"}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}getM(){return this._m}setOrdinate(t,e){switch(t){case Ps.X:this.x=e;break;case Ps.Y:this.y=e;break;case Ps.Z:this.z=e;break;case Ps.M:this._m=e;break;default:throw new xs("Invalid ordinate index: "+t)}}}class Ur{static measures(t){return t instanceof qr?0:t instanceof Br||t instanceof Yr?1:0}static create(){if(1===arguments.length){const t=arguments[0];return Ur.create(t,0)}if(2===arguments.length){const t=arguments[0],e=arguments[1];return 2===t?new qr:3===t&&0===e?new Ps:3===t&&1===e?new Br:4===t&&1===e?new Yr:new Ps}}static dimension(t){return t instanceof qr?2:t instanceof Br?3:t instanceof Yr?4:3}}class zr{static log10(t){const e=Math.log(t);return Ns.isInfinite(e)||Ns.isNaN(e)?e:e/zr.LOG_10}static min(t,e,n,i){let s=t;return e<s&&(s=e),n<s&&(s=n),i<s&&(s=i),s}static clamp(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}}static average(t,e){return(t+e)/2}static wrap(t,e){return t<0?e- -t%e:t%e}static max(){if(3===arguments.length){const t=arguments[1],e=arguments[2];let n=arguments[0];return t>n&&(n=t),e>n&&(n=e),n}if(4===arguments.length){const t=arguments[1],e=arguments[2],n=arguments[3];let i=arguments[0];return t>i&&(i=t),e>i&&(i=e),n>i&&(i=n),i}}}zr.LOG_10=Math.log(10);class kr{static arraycopy(t,e,n,i,s){let r=0;for(let o=e;o<e+s;o++)n[i+r]=t[o],r++}static getProperty(t){return{"line.separator":"\n"}[t]}}class Xr{static scroll(t,e){const n=Xr.indexOf(e,t);if(n<0)return null;const i=new Array(t.length).fill(null);kr.arraycopy(t,n,i,0,t.length-n),kr.arraycopy(t,0,i,t.length-n,n),kr.arraycopy(i,0,t,0,t.length)}static removeRepeatedPoints(t){if(!Xr.hasRepeatedPoints(t))return t;return new Us(t,!1).toCoordinateArray()}static reverse(t){const e=t.length-1,n=Math.trunc(e/2);for(let i=0;i<=n;i++){const n=t[i];t[i]=t[e-i],t[e-i]=n}}static removeNull(t){let e=0;for(let n=0;n<t.length;n++)null!==t[n]&&e++;const n=new Array(e).fill(null);if(0===e)return n;let i=0;for(let e=0;e<t.length;e++)null!==t[e]&&(n[i++]=t[e]);return n}static copyDeep(){if(1===arguments.length){const t=arguments[0],e=new Array(t.length).fill(null);for(let n=0;n<t.length;n++)e[n]=t[n].copy();return e}if(5===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],s=arguments[4];for(let r=0;r<s;r++)n[i+r]=t[e+r].copy()}}static isEqualReversed(t,e){for(let n=0;n<t.length;n++){const i=t[n],s=e[t.length-n-1];if(0!==i.compareTo(s))return!1}return!0}static envelope(t){const e=new ar;for(let n=0;n<t.length;n++)e.expandToInclude(t[n]);return e}static extract(t,e,n){e=zr.clamp(e,0,t.length);let i=(n=zr.clamp(n,-1,t.length))-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);const s=new Array(i).fill(null);if(0===i)return s;let r=0;for(let i=e;i<=n;i++)s[r++]=t[i];return s}static isRing(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])}static ptNotInList(t,e){for(let n=0;n<t.length;n++){const i=t[n];if(Xr.indexOf(i,e)<0)return i}return null}static equals(){if(2===arguments.length){const t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(let i=0;i<t.length;i++)if(0!==n.compare(t[i],e[i]))return!1;return!0}}static intersection(t,e){const n=new Us;for(let i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()}static measures(t){if(null===t||0===t.length)return 0;let e=0;for(const n of t)e=Math.max(e,Ur.measures(n));return e}static hasRepeatedPoints(t){for(let e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1}static toCoordinateArray(t){return t.toArray(Xr.coordArrayType)}static dimension(t){if(null===t||0===t.length)return 3;let e=0;for(const n of t)e=Math.max(e,Ur.dimension(n));return e}static atLeastNCoordinatesOrNothing(t,e){return e.length>=t?e:[]}static indexOf(t,e){for(let n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1}static increasingDirection(t){for(let e=0;e<Math.trunc(t.length/2);e++){const n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1}static compare(t,e){let n=0;for(;n<t.length&&n<e.length;){const i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0}static minCoordinate(t){let e=null;for(let n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e}}Xr.ForwardComparator=class{compare(t,e){const n=t,i=e;return Xr.compare(n,i)}get interfaces_(){return[Os]}},Xr.BidirectionalComparator=class{compare(t,e){const n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;const s=Xr.compare(n,i);return Xr.isEqualReversed(n,i)?0:s}OLDcompare(t,e){const n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;const s=Xr.increasingDirection(n),r=Xr.increasingDirection(i);let o=s>0?0:n.length-1,a=r>0?0:n.length-1;for(let t=0;t<n.length;t++){const t=n[o].compareTo(i[a]);if(0!==t)return t;o+=s,a+=r}return 0}get interfaces_(){return[Os]}},Xr.coordArrayType=new Array(0).fill(null);class Vr{}class jr{}class Hr extends yr{constructor(){super(),Hr.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];yr.constructor_.call(this,t,e)}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new Hr(t,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof lr){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&super.equalsExact.call(this,t,e)}return super.equalsExact.apply(this,arguments)}getBoundaryDimension(){return this.isClosed()?dr.FALSE:0}isClosed(){if(this.isEmpty())return!1;for(let t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0}getTypeCode(){return lr.TYPECODE_MULTILINESTRING}getDimension(){return 1}getBoundary(){throw new js}getGeometryType(){return lr.TYPENAME_MULTILINESTRING}get interfaces_(){return[jr]}}class Wr{constructor(){Wr.constructor_.apply(this,arguments)}static constructor_(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this._label=t}}setVisited(t){this._isVisited=t}setInResult(t){this._isInResult=t}setLabel(t){this._label=t}getLabel(){return this._label}setCovered(t){this._isCovered=t,this._isCoveredSet=!0}updateIM(t){Ts.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(t)}isCovered(){return this._isCovered}isCoveredSet(){return this._isCoveredSet}isInResult(){return this._isInResult}isVisited(){return this._isVisited}}class Zr extends Wr{constructor(){super(),Zr.constructor_.apply(this,arguments)}static constructor_(){this._coord=null,this._edges=null;const t=arguments[0],e=arguments[1];this._coord=t,this._edges=e,this._label=new Gr(0,Dr.NONE)}isIncidentEdgeInResult(){for(let t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1}isIsolated(){return 1===this._label.getGeometryCount()}getCoordinate(){return this._coord}computeMergedLocation(t,e){let n=Dr.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){const i=t.getLocation(e);n!==Dr.BOUNDARY&&(n=i)}return n}setLabel(){if(2!==arguments.length||!Number.isInteger(arguments[1])||!Number.isInteger(arguments[0]))return super.setLabel.apply(this,arguments);{const t=arguments[0],e=arguments[1];null===this._label?this._label=new Gr(t,e):this._label.setLocation(t,e)}}getEdges(){return this._edges}mergeLabel(){if(arguments[0]instanceof Zr){const t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Gr){const t=arguments[0];for(let e=0;e<2;e++){const n=this.computeMergedLocation(t,e);this._label.getLocation(e)===Dr.NONE&&this._label.setLocation(e,n)}}}add(t){this._edges.insert(t),t.setNode(this)}setLabelBoundary(t){if(null===this._label)return null;let e=Dr.NONE;null!==this._label&&(e=this._label.getLocation(t));let n=null;switch(e){case Dr.BOUNDARY:n=Dr.INTERIOR;break;case Dr.INTERIOR:default:n=Dr.BOUNDARY}this._label.setLocation(t,n)}print(t){t.println("node "+this._coord+" lbl: "+this._label)}computeIM(t){}}class Jr{constructor(){Jr.constructor_.apply(this,arguments)}static constructor_(){this.nodeMap=new ir,this.nodeFact=null;const t=arguments[0];this.nodeFact=t}print(t){for(let e=this.iterator();e.hasNext();){e.next().print(t)}}iterator(){return this.nodeMap.values().iterator()}values(){return this.nodeMap.values()}getBoundaryNodes(t){const e=new Bs;for(let n=this.iterator();n.hasNext();){const i=n.next();i.getLabel().getLocation(t)===Dr.BOUNDARY&&e.add(i)}return e}add(t){const e=t.getCoordinate();this.addNode(e).add(t)}find(t){return this.nodeMap.get(t)}addNode(){if(arguments[0]instanceof Ps){const t=arguments[0];let e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Zr){const t=arguments[0],e=this.nodeMap.get(t.getCoordinate());return null===e?(this.nodeMap.put(t.getCoordinate(),t),t):(e.mergeLabel(t),e)}}}class Kr{static isNorthern(t){return t===Kr.NE||t===Kr.NW}static isOpposite(t,e){if(t===e)return!1;return 2===(t-e+4)%4}static commonHalfPlane(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;const n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n}static isInHalfPlane(t,e){return e===Kr.SE?t===Kr.SE||t===Kr.SW:t===e||t===e+1}static quadrant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new xs("Cannot compute the quadrant for point ( "+t+", "+e+" )");return t>=0?e>=0?Kr.NE:Kr.SE:e>=0?Kr.NW:Kr.SW}if(arguments[0]instanceof Ps&&arguments[1]instanceof Ps){const t=arguments[0],e=arguments[1];if(e.x===t.x&&e.y===t.y)throw new xs("Cannot compute the quadrant for two identical points "+t);return e.x>=t.x?e.y>=t.y?Kr.NE:Kr.SE:e.y>=t.y?Kr.NW:Kr.SW}}}Kr.NE=0,Kr.NW=1,Kr.SW=2,Kr.SE=3;class Qr{createNode(t){return new Zr(t,null)}}class $r{constructor(){$r.constructor_.apply(this,arguments)}static constructor_(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){const t=arguments[0];this._edge=t}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];$r.constructor_.call(this,t,e,n,null)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];$r.constructor_.call(this,t),this.init(e,n),this._label=i}}compareDirection(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:Ar.index(t._p0,t._p1,this._p1)}getDy(){return this._dy}print(t){const e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),i=n.lastIndexOf("."),s=n.substring(i+1);t.print("  "+s+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+e+"   "+this._label)}getLabel(){return this._label}getEdge(){return this._edge}toString(){const t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(".");return"  "+e.substring(n+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label}computeLabel(t){}init(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Kr.quadrant(this._dx,this._dy),Ts.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")}getCoordinate(){return this._p0}setNode(t){this._node=t}compareTo(t){const e=t;return this.compareDirection(e)}getDirectedCoordinate(){return this._p1}getDx(){return this._dx}getQuadrant(){return this._quadrant}getNode(){return this._node}get interfaces_(){return[Ss]}}class to extends Cs{constructor(t,e){super(e?t+" [ "+e+" ]":t),this.pt=e?new Ps(e):void 0,this.name=Object.keys({TopologyException:to})[0]}getCoordinate(){return this.pt}}class eo extends $r{constructor(){super(),eo.constructor_.apply(this,arguments)}static constructor_(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999];const t=arguments[0],e=arguments[1];if($r.constructor_.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{const e=t.getNumPoints()-1;this.init(t.getCoordinate(e),t.getCoordinate(e-1))}this.computeDirectedLabel()}static depthFactor(t,e){return t===Dr.EXTERIOR&&e===Dr.INTERIOR?1:t===Dr.INTERIOR&&e===Dr.EXTERIOR?-1:0}setVisited(t){this._isVisited=t}setDepth(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new to("assigned depths do not match",this.getCoordinate());this._depth[t]=e}isInteriorAreaEdge(){let t=!0;for(let e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Nr.LEFT)===Dr.INTERIOR&&this._label.getLocation(e,Nr.RIGHT)===Dr.INTERIOR||(t=!1);return t}setNextMin(t){this._nextMin=t}print(t){super.print.call(this,t),t.print(" "+this._depth[Nr.LEFT]+"/"+this._depth[Nr.RIGHT]),t.print(" ("+this.getDepthDelta()+")"),this._isInResult&&t.print(" inResult")}setMinEdgeRing(t){this._minEdgeRing=t}getSym(){return this._sym}isForward(){return this._isForward}setSym(t){this._sym=t}setVisitedEdge(t){this.setVisited(t),this._sym.setVisited(t)}getNextMin(){return this._nextMin}getDepth(t){return this._depth[t]}computeDirectedLabel(){this._label=new Gr(this._edge.getLabel()),this._isForward||this._label.flip()}getNext(){return this._next}isLineEdge(){const t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,Dr.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,Dr.EXTERIOR);return t&&e&&n}setEdgeRing(t){this._edgeRing=t}getMinEdgeRing(){return this._minEdgeRing}getDepthDelta(){let t=this._edge.getDepthDelta();return this._isForward||(t=-t),t}setInResult(t){this._isInResult=t}getEdge(){return this._edge}printEdge(t){this.print(t),t.print(" "),this._isForward?this._edge.print(t):this._edge.printReverse(t)}setEdgeDepths(t,e){let n=this.getEdge().getDepthDelta();this._isForward||(n=-n);let i=1;t===Nr.LEFT&&(i=-1);const s=Nr.opposite(t),r=e+n*i;this.setDepth(t,e),this.setDepth(s,r)}getEdgeRing(){return this._edgeRing}isInResult(){return this._isInResult}setNext(t){this._next=t}isVisited(){return this._isVisited}}class no{constructor(){no.constructor_.apply(this,arguments)}static constructor_(){if(this._edges=new Bs,this._nodes=null,this._edgeEndList=new Bs,0===arguments.length)this._nodes=new Jr(new Qr);else if(1===arguments.length){const t=arguments[0];this._nodes=new Jr(t)}}static linkResultDirectedEdges(t){for(let e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}}printEdges(t){t.println("Edges:");for(let e=0;e<this._edges.size();e++){t.println("edge "+e+":");const n=this._edges.get(e);n.print(t),n.eiList.print(t)}}debugPrintln(t){kr.out.println(t)}isBoundaryNode(t,e){const n=this._nodes.find(e);if(null===n)return!1;const i=n.getLabel();return null!==i&&i.getLocation(t)===Dr.BOUNDARY}linkAllDirectedEdges(){for(let t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}}debugPrint(t){kr.out.print(t)}findEdgeEnd(t){for(let e=this.getEdgeEnds().iterator();e.hasNext();){const n=e.next();if(n.getEdge()===t)return n}return null}getNodes(){return this._nodes.values()}findEdge(t,e){for(let n=0;n<this._edges.size();n++){const i=this._edges.get(n),s=i.getCoordinates();if(t.equals(s[0])&&e.equals(s[1]))return i}return null}find(t){return this._nodes.find(t)}addNode(){if(arguments[0]instanceof Zr){const t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof Ps){const t=arguments[0];return this._nodes.addNode(t)}}getNodeIterator(){return this._nodes.iterator()}linkResultDirectedEdges(){for(let t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}}matchInSameDirection(t,e,n,i){return!!t.equals(n)&&(Ar.index(t,e,i)===Ar.COLLINEAR&&Kr.quadrant(t,e)===Kr.quadrant(n,i))}getEdgeEnds(){return this._edgeEndList}getEdgeIterator(){return this._edges.iterator()}findEdgeInSameDirection(t,e){for(let n=0;n<this._edges.size();n++){const i=this._edges.get(n),s=i.getCoordinates();if(this.matchInSameDirection(t,e,s[0],s[1]))return i;if(this.matchInSameDirection(t,e,s[s.length-1],s[s.length-2]))return i}return null}insertEdge(t){this._edges.add(t)}addEdges(t){for(let e=t.iterator();e.hasNext();){const t=e.next();this._edges.add(t);const n=new eo(t,!0),i=new eo(t,!1);n.setSym(i),i.setSym(n),this.add(n),this.add(i)}}add(t){this._nodes.add(t),this._edgeEndList.add(t)}}class io{static ofRingSigned(){if(arguments[0]instanceof Array){const t=arguments[0];if(t.length<3)return 0;let e=0;const n=t[0].x;for(let i=1;i<t.length-1;i++){const s=t[i].x-n,r=t[i+1].y;e+=s*(t[i-1].y-r)}return e/2}if(ms(arguments[0],Pr)){const t=arguments[0],e=t.size();if(e<3)return 0;const n=new Ps,i=new Ps,s=new Ps;t.getCoordinate(0,i),t.getCoordinate(1,s);const r=i.x;s.x-=r;let o=0;for(let a=1;a<e-1;a++)n.y=i.y,i.x=s.x,i.y=s.y,t.getCoordinate(a+1,s),s.x-=r,o+=i.x*(n.y-s.y);return o/2}}static ofRing(){if(arguments[0]instanceof Array){const t=arguments[0];return Math.abs(io.ofRingSigned(t))}if(ms(arguments[0],Pr)){const t=arguments[0];return Math.abs(io.ofRingSigned(t))}}}class so{static scroll(){if(2===arguments.length){if(ms(arguments[0],Pr)&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1];so.scroll(t,e,so.isRing(t))}else if(ms(arguments[0],Pr)&&arguments[1]instanceof Ps){const t=arguments[0],e=arguments[1],n=so.indexOf(e,t);if(n<=0)return null;so.scroll(t,n)}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(e<=0)return null;const i=t.copy(),s=n?t.size()-1:t.size();for(let n=0;n<s;n++)for(let r=0;r<t.getDimension();r++)t.setOrdinate(n,r,i.getOrdinate((e+n)%s,r));if(n)for(let e=0;e<t.getDimension();e++)t.setOrdinate(s,e,t.getOrdinate(0,e))}}static isEqual(t,e){const n=t.size();if(n!==e.size())return!1;const i=Math.min(t.getDimension(),e.getDimension());for(let s=0;s<n;s++)for(let n=0;n<i;n++){const i=t.getOrdinate(s,n),r=e.getOrdinate(s,n);if(t.getOrdinate(s,n)!==e.getOrdinate(s,n)&&(!Ns.isNaN(i)||!Ns.isNaN(r)))return!1}return!0}static minCoordinateIndex(){if(1===arguments.length){const t=arguments[0];return so.minCoordinateIndex(t,0,t.size()-1)}if(3===arguments.length){const t=arguments[0],e=arguments[2];let n=-1,i=null;for(let s=arguments[1];s<=e;s++){const e=t.getCoordinate(s);(null===i||i.compareTo(e)>0)&&(i=e,n=s)}return n}}static extend(t,e,n){const i=t.create(n,e.getDimension()),s=e.size();if(so.copy(e,0,i,0,s),s>0)for(let t=s;t<n;t++)so.copy(e,s-1,i,t,1);return i}static reverse(t){const e=t.size()-1,n=Math.trunc(e/2);for(let i=0;i<=n;i++)so.swap(t,i,e-i)}static ensureValidRing(t,e){const n=e.size();if(0===n)return e;if(n<=3)return so.createClosedRing(t,e,4);return e.getOrdinate(0,Pr.X)===e.getOrdinate(n-1,Pr.X)&&e.getOrdinate(0,Pr.Y)===e.getOrdinate(n-1,Pr.Y)?e:so.createClosedRing(t,e,n+1)}static minCoordinate(t){let e=null;for(let n=0;n<t.size();n++){const i=t.getCoordinate(n);(null===e||e.compareTo(i)>0)&&(e=i)}return e}static copyCoord(t,e,n,i){const s=Math.min(t.getDimension(),n.getDimension());for(let r=0;r<s;r++)n.setOrdinate(i,r,t.getOrdinate(e,r))}static isRing(t){const e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,Pr.X)===t.getOrdinate(e-1,Pr.X)&&t.getOrdinate(0,Pr.Y)===t.getOrdinate(e-1,Pr.Y))}static swap(t,e,n){if(e===n)return null;for(let i=0;i<t.getDimension();i++){const s=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,s)}}static copy(t,e,n,i,s){for(let r=0;r<s;r++)so.copyCoord(t,e+r,n,i+r)}static indexOf(t,e){for(let n=0;n<e.size();n++)if(t.x===e.getOrdinate(n,Pr.X)&&t.y===e.getOrdinate(n,Pr.Y))return n;return-1}static createClosedRing(t,e,n){const i=t.create(n,e.getDimension()),s=e.size();so.copy(e,0,i,0,s);for(let t=s;t<n;t++)so.copy(e,0,i,t,1);return i}}class ro extends lr{constructor(){super(),ro.constructor_.apply(this,arguments)}static constructor_(){this._shell=null,this._holes=null;let t=arguments[0],e=arguments[1],n=arguments[2];if(lr.constructor_.call(this,n),null===t&&(t=this.getFactory().createLinearRing()),null===e&&(e=[]),lr.hasNullElements(e))throw new xs("holes must not contain null elements");if(t.isEmpty()&&lr.hasNonEmptyElements(e))throw new xs("shell is empty but holes are not");this._shell=t,this._holes=e}computeEnvelopeInternal(){return this._shell.getEnvelopeInternal()}getCoordinates(){if(this.isEmpty())return[];const t=new Array(this.getNumPoints()).fill(null);let e=-1;const n=this._shell.getCoordinates();for(let i=0;i<n.length;i++)e++,t[e]=n[i];for(let n=0;n<this._holes.length;n++){const i=this._holes[n].getCoordinates();for(let n=0;n<i.length;n++)e++,t[e]=i[n]}return t}getArea(){let t=0;t+=io.ofRing(this._shell.getCoordinateSequence());for(let e=0;e<this._holes.length;e++)t-=io.ofRing(this._holes[e].getCoordinateSequence());return t}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof lr){const t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;const n=t,i=this._shell,s=n._shell;if(!i.equalsExact(s,e))return!1;if(this._holes.length!==n._holes.length)return!1;for(let t=0;t<this._holes.length;t++)if(!this._holes[t].equalsExact(n._holes[t],e))return!1;return!0}return super.equalsExact.apply(this,arguments)}reverseInternal(){const t=this.getExteriorRing().reverse(),e=new Array(this.getNumInteriorRing()).fill(null);for(let t=0;t<e.length;t++)e[t]=this.getInteriorRingN(t).reverse();return this.getFactory().createPolygon(t,e)}getTypeCode(){return lr.TYPECODE_POLYGON}getDimension(){return 2}getBoundary(){if(this.isEmpty())return this.getFactory().createMultiLineString();const t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(let e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)}getGeometryType(){return lr.TYPENAME_POLYGON}getExteriorRing(){return this._shell}copyInternal(){const t=this._shell.copy(),e=new Array(this._holes.length).fill(null);for(let t=0;t<this._holes.length;t++)e[t]=this._holes[t].copy();return new ro(t,e,this._factory)}isRectangle(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;const t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal();for(let n=0;n<5;n++){const i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;const s=t.getY(n);if(s!==e.getMinY()&&s!==e.getMaxY())return!1}let n=t.getX(0),i=t.getY(0);for(let e=1;e<=4;e++){const s=t.getX(e),r=t.getY(e);if(s!==n===(r!==i))return!1;n=s,i=r}return!0}normalize(){if(0===arguments.length){this._shell=this.normalized(this._shell,!0);for(let t=0;t<this._holes.length;t++)this._holes[t]=this.normalized(this._holes[t],!1);fr.sort(this._holes)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];if(t.isEmpty())return null;const n=t.getCoordinateSequence(),i=so.minCoordinateIndex(n,0,n.size()-2);so.scroll(n,i,!0),Ar.isCCW(n)===e&&so.reverse(n)}}getCoordinate(){return this._shell.getCoordinate()}getNumInteriorRing(){return this._holes.length}getBoundaryDimension(){return 1}getLength(){let t=0;t+=this._shell.getLength();for(let e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t}getNumPoints(){let t=this._shell.getNumPoints();for(let e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t}convexHull(){return this.getExteriorRing().convexHull()}normalized(t,e){const n=t.copy();return this.normalize(n,e),n}compareToSameClass(){if(1===arguments.length){const t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){const t=arguments[1],e=arguments[0],n=this._shell,i=e._shell,s=n.compareToSameClass(i,t);if(0!==s)return s;const r=this.getNumInteriorRing(),o=e.getNumInteriorRing();let a=0;for(;a<r&&a<o;){const n=this.getInteriorRingN(a),i=e.getInteriorRingN(a),s=n.compareToSameClass(i,t);if(0!==s)return s;a++}return a<r?1:a<o?-1:0}}apply(){if(ms(arguments[0],pr)){const t=arguments[0];this._shell.apply(t);for(let e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(ms(arguments[0],mr)){const t=arguments[0];if(this._shell.apply(t),!t.isDone())for(let e=0;e<this._holes.length&&(this._holes[e].apply(t),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(ms(arguments[0],_r)){arguments[0].filter(this)}else if(ms(arguments[0],or)){const t=arguments[0];t.filter(this),this._shell.apply(t);for(let e=0;e<this._holes.length;e++)this._holes[e].apply(t)}}isEmpty(){return this._shell.isEmpty()}getInteriorRingN(t){return this._holes[t]}get interfaces_(){return[Vr]}}class oo{static intersection(t,e,n,i){const s=t.x<e.x?t.x:e.x,r=t.y<e.y?t.y:e.y,o=t.x>e.x?t.x:e.x,a=t.y>e.y?t.y:e.y,l=n.x<i.x?n.x:i.x,c=n.y<i.y?n.y:i.y,h=n.x>i.x?n.x:i.x,u=n.y>i.y?n.y:i.y,g=((s>l?s:l)+(o<h?o:h))/2,d=((r>c?r:c)+(a<u?a:u))/2,f=t.x-g,p=t.y-d,_=e.x-g,m=e.y-d,y=n.x-g,E=n.y-d,x=i.x-g,I=i.y-d,N=p-m,S=_-f,w=f*m-_*p,C=E-I,L=x-y,T=y*I-x*E,R=N*L-C*S,O=(S*T-L*w)/R,b=(C*w-N*T)/R;return Ns.isNaN(O)||Ns.isInfinite(O)||Ns.isNaN(b)||Ns.isInfinite(b)?null:new Ps(O+g,b+d)}}class ao{static pointToSegmentString(t,e){if(0===e.length)throw new xs("Line array must contain at least one vertex");let n=t.distance(e[0]);for(let i=0;i<e.length-1;i++){const s=ao.pointToSegment(t,e[i],e[i+1]);s<n&&(n=s)}return n}static segmentToSegment(t,e,n,i){if(t.equals(e))return ao.pointToSegment(t,n,i);if(n.equals(i))return ao.pointToSegment(i,t,e);let s=!1;if(ar.intersects(t,e,n,i)){const r=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===r)s=!0;else{const o=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/r,l=o/r;(l<0||l>1||a<0||a>1)&&(s=!0)}}else s=!0;return s?zr.min(ao.pointToSegment(t,n,i),ao.pointToSegment(e,n,i),ao.pointToSegment(n,t,e),ao.pointToSegment(i,t,e)):0}static pointToLinePerpendicular(t,e,n){const i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),s=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(s)*Math.sqrt(i)}static pointToSegment(t,e,n){if(e.x===n.x&&e.y===n.y)return t.distance(e);const i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),s=((t.x-e.x)*(n.x-e.x)+(t.y-e.y)*(n.y-e.y))/i;if(s<=0)return t.distance(e);if(s>=1)return t.distance(n);const r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)}}class lo{constructor(t){this.str=t}append(t){this.str+=t}setCharAt(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}toString(){return this.str}}class co{constructor(){co.constructor_.apply(this,arguments)}static constructor_(){this._result=null,this._inputLines=Array(2).fill().map((()=>Array(2))),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new Ps,this._intPt[1]=new Ps,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0}static nonRobustComputeEdgeDistance(t,e,n){const i=t.x-e.x,s=t.y-e.y,r=Math.sqrt(i*i+s*s);return Ts.isTrue(!(0===r&&!t.equals(e)),"Invalid distance calculation"),r}static computeEdgeDistance(t,e,n){const i=Math.abs(n.x-e.x),s=Math.abs(n.y-e.y);let r=-1;if(t.equals(e))r=0;else if(t.equals(n))r=i>s?i:s;else{const n=Math.abs(t.x-e.x),o=Math.abs(t.y-e.y);r=i>s?n:o,0!==r||t.equals(e)||(r=Math.max(n,o))}return Ts.isTrue(!(0===r&&!t.equals(e)),"Bad distance calculation"),r}computeIntersection(t,e,n,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,n,i)}getIntersectionNum(){return this._result}computeIntLineIndex(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((()=>Array(2))),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){const t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}}isInteriorIntersection(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){const t=arguments[0];for(let e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}}getIntersection(t){return this._intPt[t]}getEdgeDistance(t,e){return co.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])}isCollinear(){return this._result===co.COLLINEAR_INTERSECTION}toString(){return Na.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+Na.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()}getEndpoint(t,e){return this._inputLines[t][e]}getIndexAlongSegment(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]}getTopologySummary(){const t=new lo;return this.isEndPoint()&&t.append(" endpoint"),this._isProper&&t.append(" proper"),this.isCollinear()&&t.append(" collinear"),t.toString()}isProper(){return this.hasIntersection()&&this._isProper}setPrecisionModel(t){this._precisionModel=t}isEndPoint(){return this.hasIntersection()&&!this._isProper}hasIntersection(){return this._result!==co.NO_INTERSECTION}isIntersection(t){for(let e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1}getIntersectionAlongSegment(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]}}co.DONT_INTERSECT=0,co.DO_INTERSECT=1,co.COLLINEAR=2,co.NO_INTERSECTION=0,co.POINT_INTERSECTION=1,co.COLLINEAR_INTERSECTION=2;class ho extends co{constructor(){super()}static nearestEndpoint(t,e,n,i){let s=t,r=ao.pointToSegment(t,n,i),o=ao.pointToSegment(e,n,i);return o<r&&(r=o,s=e),o=ao.pointToSegment(n,t,e),o<r&&(r=o,s=n),o=ao.pointToSegment(i,t,e),o<r&&(r=o,s=i),s}isInSegmentEnvelopes(t){const e=new ar(this._inputLines[0][0],this._inputLines[0][1]),n=new ar(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)}computeIntersection(){if(3!==arguments.length)return super.computeIntersection.apply(this,arguments);{const t=arguments[0],e=arguments[1],n=arguments[2];if(this._isProper=!1,ar.intersects(e,n,t)&&0===Ar.index(e,n,t)&&0===Ar.index(n,e,t))return this._isProper=!0,(t.equals(e)||t.equals(n))&&(this._isProper=!1),this._result=co.POINT_INTERSECTION,null;this._result=co.NO_INTERSECTION}}intersection(t,e,n,i){let s=this.intersectionSafe(t,e,n,i);return this.isInSegmentEnvelopes(s)||(s=new Ps(ho.nearestEndpoint(t,e,n,i))),null!==this._precisionModel&&this._precisionModel.makePrecise(s),s}checkDD(t,e,n,i,s){const r=vr.intersection(t,e,n,i),o=this.isInSegmentEnvelopes(r);kr.out.println("DD in env = "+o+"  --------------------- "+r),s.distance(r)>1e-4&&kr.out.println("Distance = "+s.distance(r))}intersectionSafe(t,e,n,i){let s=oo.intersection(t,e,n,i);return null===s&&(s=ho.nearestEndpoint(t,e,n,i)),s}computeCollinearIntersection(t,e,n,i){const s=ar.intersects(t,e,n),r=ar.intersects(t,e,i),o=ar.intersects(n,i,t),a=ar.intersects(n,i,e);return s&&r?(this._intPt[0]=n,this._intPt[1]=i,co.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=t,this._intPt[1]=e,co.COLLINEAR_INTERSECTION):s&&o?(this._intPt[0]=n,this._intPt[1]=t,!n.equals(t)||r||a?co.COLLINEAR_INTERSECTION:co.POINT_INTERSECTION):s&&a?(this._intPt[0]=n,this._intPt[1]=e,!n.equals(e)||r||o?co.COLLINEAR_INTERSECTION:co.POINT_INTERSECTION):r&&o?(this._intPt[0]=i,this._intPt[1]=t,!i.equals(t)||s||a?co.COLLINEAR_INTERSECTION:co.POINT_INTERSECTION):r&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||s||o?co.COLLINEAR_INTERSECTION:co.POINT_INTERSECTION):co.NO_INTERSECTION}computeIntersect(t,e,n,i){if(this._isProper=!1,!ar.intersects(t,e,n,i))return co.NO_INTERSECTION;const s=Ar.index(t,e,n),r=Ar.index(t,e,i);if(s>0&&r>0||s<0&&r<0)return co.NO_INTERSECTION;const o=Ar.index(n,i,t),a=Ar.index(n,i,e);if(o>0&&a>0||o<0&&a<0)return co.NO_INTERSECTION;return 0===s&&0===r&&0===o&&0===a?this.computeCollinearIntersection(t,e,n,i):(0===s||0===r||0===o||0===a?(this._isProper=!1,t.equals2D(n)||t.equals2D(i)?this._intPt[0]=t:e.equals2D(n)||e.equals2D(i)?this._intPt[0]=e:0===s?this._intPt[0]=new Ps(n):0===r?this._intPt[0]=new Ps(i):0===o?this._intPt[0]=new Ps(t):0===a&&(this._intPt[0]=new Ps(e))):(this._isProper=!0,this._intPt[0]=this.intersection(t,e,n,i)),co.POINT_INTERSECTION)}}class uo{constructor(){uo.constructor_.apply(this,arguments)}static constructor_(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;const t=arguments[0];this._p=t}static locatePointInRing(){if(arguments[0]instanceof Ps&&ms(arguments[1],Pr)){const t=arguments[1],e=new uo(arguments[0]),n=new Ps,i=new Ps;for(let s=1;s<t.size();s++)if(t.getCoordinate(s,n),t.getCoordinate(s-1,i),e.countSegment(n,i),e.isOnSegment())return e.getLocation();return e.getLocation()}if(arguments[0]instanceof Ps&&arguments[1]instanceof Array){const t=arguments[1],e=new uo(arguments[0]);for(let n=1;n<t.length;n++){const i=t[n],s=t[n-1];if(e.countSegment(i,s),e.isOnSegment())return e.getLocation()}return e.getLocation()}}getLocation(){return this._isPointOnSegment?Dr.BOUNDARY:this._crossingCount%2==1?Dr.INTERIOR:Dr.EXTERIOR}isPointInPolygon(){return this.getLocation()!==Dr.EXTERIOR}isOnSegment(){return this._isPointOnSegment}countSegment(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){let n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this._p.x>=n&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){let n=Ar.index(t,e,this._p);if(n===Ar.COLLINEAR)return this._isPointOnSegment=!0,null;e.y<t.y&&(n=-n),n===Ar.LEFT&&this._crossingCount++}}}class go{static isInRing(t,e){return go.locateInRing(t,e)!==Dr.EXTERIOR}static locateInRing(t,e){return uo.locatePointInRing(t,e)}static isOnLine(){if(arguments[0]instanceof Ps&&ms(arguments[1],Pr)){const t=arguments[0],e=arguments[1],n=new ho,i=new Ps,s=new Ps,r=e.size();for(let o=1;o<r;o++)if(e.getCoordinate(o-1,i),e.getCoordinate(o,s),n.computeIntersection(t,i,s),n.hasIntersection())return!0;return!1}if(arguments[0]instanceof Ps&&arguments[1]instanceof Array){const t=arguments[0],e=arguments[1],n=new ho;for(let i=1;i<e.length;i++){const s=e[i-1],r=e[i];if(n.computeIntersection(t,s,r),n.hasIntersection())return!0}return!1}}}class fo{isInBoundary(t){}}class po{isInBoundary(t){return t%2==1}get interfaces_(){return[fo]}}class _o{isInBoundary(t){return t>0}get interfaces_(){return[fo]}}class mo{isInBoundary(t){return t>1}get interfaces_(){return[fo]}}class yo{isInBoundary(t){return 1===t}get interfaces_(){return[fo]}}fo.Mod2BoundaryNodeRule=po,fo.EndPointBoundaryNodeRule=_o,fo.MultiValentEndPointBoundaryNodeRule=mo,fo.MonoValentEndPointBoundaryNodeRule=yo,fo.MOD2_BOUNDARY_RULE=new po,fo.ENDPOINT_BOUNDARY_RULE=new _o,fo.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new mo,fo.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new yo,fo.OGC_SFS_BOUNDARY_RULE=fo.MOD2_BOUNDARY_RULE;class Eo extends yr{constructor(){super(),Eo.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];yr.constructor_.call(this,t,e)}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new Eo(t,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof lr){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&super.equalsExact.call(this,t,e)}return super.equalsExact.apply(this,arguments)}getBoundaryDimension(){return 1}getTypeCode(){return lr.TYPECODE_MULTIPOLYGON}getDimension(){return 2}getBoundary(){if(this.isEmpty())return this.getFactory().createMultiLineString();const t=new Bs;for(let e=0;e<this._geometries.length;e++){const n=this._geometries[e].getBoundary();for(let e=0;e<n.getNumGeometries();e++)t.add(n.getGeometryN(e))}const e=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(e))}getGeometryType(){return lr.TYPENAME_MULTIPOLYGON}get interfaces_(){return[Vr]}}class xo{constructor(){xo.constructor_.apply(this,arguments)}static constructor_(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;const t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()}static isAtomic(t){return!(t instanceof yr)}next(){if(this._atStart)return this._atStart=!1,xo.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new qs;const t=this._parent.getGeometryN(this._index++);return t instanceof yr?(this._subcollectionIterator=new xo(t),this._subcollectionIterator.next()):t}hasNext(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)}remove(){throw new js(this.getClass().getName())}get interfaces_(){return[Xs]}}class Io extends lr{constructor(){super(),Io.constructor_.apply(this,arguments)}static constructor_(){this._coordinates=null;const t=arguments[0],e=arguments[1];lr.constructor_.call(this,e),this.init(t)}computeEnvelopeInternal(){if(this.isEmpty())return new ar;const t=new ar;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t}getCoordinates(){return this.isEmpty()?[]:[this.getCoordinate()]}copyInternal(){return new Io(this._coordinates.copy(),this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof lr){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&(!(!this.isEmpty()||!t.isEmpty())||this.isEmpty()===t.isEmpty()&&this.equal(t.getCoordinate(),this.getCoordinate(),e))}return super.equalsExact.apply(this,arguments)}reverseInternal(){return this.getFactory().createPoint(this._coordinates.copy())}getTypeCode(){return lr.TYPECODE_POINT}getDimension(){return 0}getNumPoints(){return this.isEmpty()?0:1}getX(){if(null===this.getCoordinate())throw new br("getX called on empty Point");return this.getCoordinate().x}getBoundary(){return this.getFactory().createGeometryCollection()}getGeometryType(){return lr.TYPENAME_POINT}getCoordinateSequence(){return this._coordinates}getY(){if(null===this.getCoordinate())throw new br("getY called on empty Point");return this.getCoordinate().y}isSimple(){return!0}normalize(){}getCoordinate(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null}getBoundaryDimension(){return dr.FALSE}compareToSameClass(){if(1===arguments.length){const t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){const t=arguments[0];return arguments[1].compare(this._coordinates,t._coordinates)}}apply(){if(ms(arguments[0],pr)){const t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(ms(arguments[0],mr)){const t=arguments[0];if(this.isEmpty())return null;t.filter(this._coordinates,0),t.isGeometryChanged()&&this.geometryChanged()}else if(ms(arguments[0],_r)){arguments[0].filter(this)}else if(ms(arguments[0],or)){arguments[0].filter(this)}}isEmpty(){return 0===this._coordinates.size()}init(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),Ts.isTrue(t.size()<=1),this._coordinates=t}get interfaces_(){return[Er]}}class No{constructor(){No.constructor_.apply(this,arguments)}static constructor_(){if(this._boundaryRule=fo.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];if(null===t)throw new xs("Rule must be non-null");this._boundaryRule=t}}locateInPolygonRing(t,e){return e.getEnvelopeInternal().intersects(t)?go.locateInRing(t,e.getCoordinates()):Dr.EXTERIOR}intersects(t,e){return this.locate(t,e)!==Dr.EXTERIOR}updateLocationInfo(t){t===Dr.INTERIOR&&(this._isIn=!0),t===Dr.BOUNDARY&&this._numBoundaries++}computeLocation(t,e){if(e instanceof Io&&this.updateLocationInfo(this.locateOnPoint(t,e)),e instanceof jo)this.updateLocationInfo(this.locateOnLineString(t,e));else if(e instanceof ro)this.updateLocationInfo(this.locateInPolygon(t,e));else if(e instanceof Hr){const n=e;for(let e=0;e<n.getNumGeometries();e++){const i=n.getGeometryN(e);this.updateLocationInfo(this.locateOnLineString(t,i))}}else if(e instanceof Eo){const n=e;for(let e=0;e<n.getNumGeometries();e++){const i=n.getGeometryN(e);this.updateLocationInfo(this.locateInPolygon(t,i))}}else if(e instanceof yr){const n=new xo(e);for(;n.hasNext();){const i=n.next();i!==e&&this.computeLocation(t,i)}}}locateOnPoint(t,e){return e.getCoordinate().equals2D(t)?Dr.INTERIOR:Dr.EXTERIOR}locateOnLineString(t,e){if(!e.getEnvelopeInternal().intersects(t))return Dr.EXTERIOR;const n=e.getCoordinateSequence();return e.isClosed()||!t.equals(n.getCoordinate(0))&&!t.equals(n.getCoordinate(n.size()-1))?go.isOnLine(t,n)?Dr.INTERIOR:Dr.EXTERIOR:Dr.BOUNDARY}locateInPolygon(t,e){if(e.isEmpty())return Dr.EXTERIOR;const n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===Dr.EXTERIOR)return Dr.EXTERIOR;if(i===Dr.BOUNDARY)return Dr.BOUNDARY;for(let n=0;n<e.getNumInteriorRing();n++){const i=e.getInteriorRingN(n),s=this.locateInPolygonRing(t,i);if(s===Dr.INTERIOR)return Dr.EXTERIOR;if(s===Dr.BOUNDARY)return Dr.BOUNDARY}return Dr.INTERIOR}locate(t,e){return e.isEmpty()?Dr.EXTERIOR:e instanceof jo?this.locateOnLineString(t,e):e instanceof ro?this.locateInPolygon(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?Dr.BOUNDARY:this._numBoundaries>0||this._isIn?Dr.INTERIOR:Dr.EXTERIOR)}}class So{visitItem(t){}}class wo{locate(t){}}class Co{constructor(){Co.constructor_.apply(this,arguments)}static constructor_(){this._min=Ns.POSITIVE_INFINITY,this._max=Ns.NEGATIVE_INFINITY}getMin(){return this._min}intersects(t,e){return!(this._min>e||this._max<t)}getMax(){return this._max}toString(){return Na.toLineString(new Ps(this._min,0),new Ps(this._max,0))}}Co.NodeComparator=class{compare(t,e){const n=t,i=e,s=(n._min+n._max)/2,r=(i._min+i._max)/2;return s<r?-1:s>r?1:0}get interfaces_(){return[Os]}};class Lo extends Co{constructor(){super(),Lo.constructor_.apply(this,arguments)}static constructor_(){this._item=null;const t=arguments[0],e=arguments[1],n=arguments[2];this._min=t,this._max=e,this._item=n}query(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)}}class To extends Co{constructor(){super(),To.constructor_.apply(this,arguments)}static constructor_(){this._node1=null,this._node2=null;const t=arguments[0],e=arguments[1];this._node1=t,this._node2=e,this.buildExtent(this._node1,this._node2)}buildExtent(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)}query(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)}}class Ro{constructor(){Ro.constructor_.apply(this,arguments)}static constructor_(){this._leaves=new Bs,this._root=null,this._level=0}buildTree(){wr.sort(this._leaves,new Co.NodeComparator);let t=this._leaves,e=null,n=new Bs;for(;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}}insert(t,e,n){if(null!==this._root)throw new br("Index cannot be added to once it has been queried");this._leaves.add(new Lo(t,e,n))}query(t,e,n){if(this.init(),null===this._root)return null;this._root.query(t,e,n)}buildRoot(){if(null!==this._root)return null;this._root=this.buildTree()}printNode(t){kr.out.println(Na.toLineString(new Ps(t._min,this._level),new Ps(t._max,this._level)))}init(){return null!==this._root||0===this._leaves.size()?null:void this.buildRoot()}buildLevel(t,e){this._level++,e.clear();for(let n=0;n<t.size();n+=2){const i=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(i);else{const i=new To(t.get(n),t.get(n+1));e.add(i)}}}}class Oo{constructor(){Oo.constructor_.apply(this,arguments)}static constructor_(){if(this.p0=null,this.p1=null,0===arguments.length)Oo.constructor_.call(this,new Ps,new Ps);else if(1===arguments.length){const t=arguments[0];Oo.constructor_.call(this,t.p0,t.p1)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.p0=t,this.p1=e}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];Oo.constructor_.call(this,new Ps(t,e),new Ps(n,i))}}static midPoint(t,e){return new Ps((t.x+e.x)/2,(t.y+e.y)/2)}minX(){return Math.min(this.p0.x,this.p1.x)}orientationIndex(){if(arguments[0]instanceof Oo){const t=arguments[0],e=Ar.index(this.p0,this.p1,t.p0),n=Ar.index(this.p0,this.p1,t.p1);return e>=0&&n>=0||e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof Ps){const t=arguments[0];return Ar.index(this.p0,this.p1,t)}}toGeometry(t){return t.createLineString([this.p0,this.p1])}isVertical(){return this.p0.x===this.p1.x}minY(){return Math.min(this.p0.y,this.p1.y)}midPoint(){return Oo.midPoint(this.p0,this.p1)}maxY(){return Math.max(this.p0.y,this.p1.y)}pointAlongOffset(t,e){const n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),s=this.p1.x-this.p0.x,r=this.p1.y-this.p0.y,o=Math.sqrt(s*s+r*r);let a=0,l=0;if(0!==e){if(o<=0)throw new br("Cannot compute offset from zero-length line segment");a=e*s/o,l=e*r/o}return new Ps(n-l,i+a)}setCoordinates(){if(1===arguments.length){const t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.p0.x=t.x,this.p0.y=t.y,this.p1.x=e.x,this.p1.y=e.y}}segmentFraction(t){let e=this.projectionFactor(t);return e<0?e=0:(e>1||Ns.isNaN(e))&&(e=1),e}toString(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"}distance(){if(arguments[0]instanceof Oo){const t=arguments[0];return ao.segmentToSegment(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof Ps){const t=arguments[0];return ao.pointToSegment(t,this.p0,this.p1)}}equals(t){if(!(t instanceof Oo))return!1;const e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)}intersection(t){const e=new ho;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null}project(){if(arguments[0]instanceof Ps){const t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new Ps(t);const e=this.projectionFactor(t),n=new Ps;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof Oo){const t=arguments[0],e=this.projectionFactor(t.p0),n=this.projectionFactor(t.p1);if(e>=1&&n>=1)return null;if(e<=0&&n<=0)return null;let i=this.project(t.p0);e<0&&(i=this.p0),e>1&&(i=this.p1);let s=this.project(t.p1);return n<0&&(s=this.p0),n>1&&(s=this.p1),new Oo(i,s)}}normalize(){this.p1.compareTo(this.p0)<0&&this.reverse()}angle(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)}getCoordinate(t){return 0===t?this.p0:this.p1}distancePerpendicular(t){return ao.pointToLinePerpendicular(t,this.p0,this.p1)}closestPoint(t){const e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1}projectionFactor(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;const e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(i<=0)return Ns.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i}closestPoints(t){const e=this.intersection(t);if(null!==e)return[e,e];const n=new Array(2).fill(null);let i=Ns.MAX_VALUE,s=null;const r=this.closestPoint(t.p0);i=r.distance(t.p0),n[0]=r,n[1]=t.p0;const o=this.closestPoint(t.p1);s=o.distance(t.p1),s<i&&(i=s,n[0]=o,n[1]=t.p1);const a=t.closestPoint(this.p0);s=a.distance(this.p0),s<i&&(i=s,n[0]=this.p0,n[1]=a);const l=t.closestPoint(this.p1);return s=l.distance(this.p1),s<i&&(i=s,n[0]=this.p1,n[1]=l),n}maxX(){return Math.max(this.p0.x,this.p1.x)}getLength(){return this.p0.distance(this.p1)}compareTo(t){const e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)}reverse(){const t=this.p0;this.p0=this.p1,this.p1=t}equalsTopo(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)}lineIntersection(t){return oo.intersection(this.p0,this.p1,t.p0,t.p1)}isHorizontal(){return this.p0.y===this.p1.y}reflect(t){const e=this.p1.getY()-this.p0.getY(),n=this.p0.getX()-this.p1.getX(),i=this.p0.getY()*(this.p1.getX()-this.p0.getX())-this.p0.getX()*(this.p1.getY()-this.p0.getY()),s=e*e+n*n,r=e*e-n*n,o=t.getX(),a=t.getY();return new Ps((-r*o-2*e*n*a-2*e*i)/s,(r*a-2*e*n*o-2*n*i)/s)}pointAlong(t){const e=new Ps;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e}hashCode(){let t=Ns.doubleToLongBits(this.p0.x);t^=31*Ns.doubleToLongBits(this.p0.y);const e=Math.trunc(t)^Math.trunc(t>>32);let n=Ns.doubleToLongBits(this.p1.x);n^=31*Ns.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))}get interfaces_(){return[Ss,ws]}}class bo{constructor(){bo.constructor_.apply(this,arguments)}static constructor_(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){const t=arguments[0];this._lines=t}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._lines=t,this._isForcedToLineString=e}}static getLines(){if(1===arguments.length){const t=arguments[0];return bo.getLines(t,!1)}if(2===arguments.length){if(ms(arguments[0],Ds)&&ms(arguments[1],Ds)){const t=arguments[1];for(let e=arguments[0].iterator();e.hasNext();){const n=e.next();bo.getLines(n,t)}return t}if(arguments[0]instanceof lr&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=new Bs;return t.apply(new bo(n,e)),n}if(arguments[0]instanceof lr&&ms(arguments[1],Ds)){const t=arguments[0],e=arguments[1];return t instanceof jo?e.add(t):t.apply(new bo(e)),e}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&ms(arguments[0],Ds)&&ms(arguments[1],Ds)){const t=arguments[1],e=arguments[2];for(let n=arguments[0].iterator();n.hasNext();){const i=n.next();bo.getLines(i,t,e)}return t}if("boolean"==typeof arguments[2]&&arguments[0]instanceof lr&&ms(arguments[1],Ds)){const t=arguments[1],e=arguments[2];return arguments[0].apply(new bo(t,e)),t}}}static getGeometry(){if(1===arguments.length){const t=arguments[0];return t.getFactory().buildGeometry(bo.getLines(t))}if(2===arguments.length){const t=arguments[0],e=arguments[1];return t.getFactory().buildGeometry(bo.getLines(t,e))}}filter(t){if(this._isForcedToLineString&&t instanceof Ho){const e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof jo&&this._lines.add(t)}setForceToLineString(t){this._isForcedToLineString=t}get interfaces_(){return[or]}}class Mo{constructor(){Mo.constructor_.apply(this,arguments)}static constructor_(){this._items=new Bs}getItems(){return this._items}visitItem(t){this._items.add(t)}get interfaces_(){return[So]}}class vo{constructor(){vo.constructor_.apply(this,arguments)}static constructor_(){this._geom=null,this._index=null;const t=arguments[0];if(!(ms(t,Vr)||t instanceof Ho))throw new xs("Argument must be Polygonal or LinearRing");this._geom=t}locate(t){null===this._index&&(this._index=new Ao(this._geom),this._geom=null);const e=new uo(t),n=new Po(e);return this._index.query(t.y,t.y,n),e.getLocation()}get interfaces_(){return[wo]}}class Po{constructor(){Po.constructor_.apply(this,arguments)}static constructor_(){this._counter=null;const t=arguments[0];this._counter=t}visitItem(t){const e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))}get interfaces_(){return[So]}}class Ao{constructor(){Ao.constructor_.apply(this,arguments)}static constructor_(){this._isEmpty=!1,this._index=new Ro;const t=arguments[0];t.isEmpty()?this._isEmpty=!0:this.init(t)}init(t){for(let e=bo.getLines(t).iterator();e.hasNext();){const t=e.next().getCoordinates();this.addLine(t)}}addLine(t){for(let e=1;e<t.length;e++){const n=new Oo(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),s=Math.max(n.p0.y,n.p1.y);this._index.insert(i,s,n)}}query(){if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this._isEmpty)return new Bs;const n=new Mo;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(this._isEmpty)return null;this._index.query(t,e,n)}}}vo.SegmentVisitor=Po,vo.IntervalIndexedGeometry=Ao;class Do{constructor(){Do.constructor_.apply(this,arguments)}static constructor_(){this.coord=null,this.segmentIndex=null,this.dist=null;const t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new Ps(t),this.segmentIndex=e,this.dist=n}getSegmentIndex(){return this.segmentIndex}getCoordinate(){return this.coord}print(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex),t.println(" dist = "+this.dist)}compareTo(t){const e=t;return this.compare(e.segmentIndex,e.dist)}isEndPoint(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t}toString(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist}getDistance(){return this.dist}compare(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0}get interfaces_(){return[Ss]}}class Fo{constructor(){Fo.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new ir,this.edge=null;const t=arguments[0];this.edge=t}print(t){t.println("Intersections:");for(let e=this.iterator();e.hasNext();){e.next().print(t)}}addEndpoints(){const t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)}createSplitEdge(t,e){let n=e.segmentIndex-t.segmentIndex+2;const i=this.edge.pts[e.segmentIndex],s=e.dist>0||!e.coord.equals2D(i);s||n--;const r=new Array(n).fill(null);let o=0;r[o++]=new Ps(t.coord);for(let n=t.segmentIndex+1;n<=e.segmentIndex;n++)r[o++]=this.edge.pts[n];return s&&(r[o]=e.coord),new zo(r,new Gr(this.edge._label))}add(t,e,n){const i=new Do(t,e,n),s=this._nodeMap.get(i);return null!==s?s:(this._nodeMap.put(i,i),i)}isIntersection(t){for(let e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(t){this.addEndpoints();const e=this.iterator();let n=e.next();for(;e.hasNext();){const i=e.next(),s=this.createSplitEdge(n,i);t.add(s),n=i}}}class Go{constructor(){Go.constructor_.apply(this,arguments)}static constructor_(){if(this._matrix=null,0===arguments.length)this._matrix=Array(3).fill().map((()=>Array(3))),this.setAll(dr.FALSE);else if(1===arguments.length)if("string"==typeof arguments[0]){const t=arguments[0];Go.constructor_.call(this),this.set(t)}else if(arguments[0]instanceof Go){const t=arguments[0];Go.constructor_.call(this),this._matrix[Dr.INTERIOR][Dr.INTERIOR]=t._matrix[Dr.INTERIOR][Dr.INTERIOR],this._matrix[Dr.INTERIOR][Dr.BOUNDARY]=t._matrix[Dr.INTERIOR][Dr.BOUNDARY],this._matrix[Dr.INTERIOR][Dr.EXTERIOR]=t._matrix[Dr.INTERIOR][Dr.EXTERIOR],this._matrix[Dr.BOUNDARY][Dr.INTERIOR]=t._matrix[Dr.BOUNDARY][Dr.INTERIOR],this._matrix[Dr.BOUNDARY][Dr.BOUNDARY]=t._matrix[Dr.BOUNDARY][Dr.BOUNDARY],this._matrix[Dr.BOUNDARY][Dr.EXTERIOR]=t._matrix[Dr.BOUNDARY][Dr.EXTERIOR],this._matrix[Dr.EXTERIOR][Dr.INTERIOR]=t._matrix[Dr.EXTERIOR][Dr.INTERIOR],this._matrix[Dr.EXTERIOR][Dr.BOUNDARY]=t._matrix[Dr.EXTERIOR][Dr.BOUNDARY],this._matrix[Dr.EXTERIOR][Dr.EXTERIOR]=t._matrix[Dr.EXTERIOR][Dr.EXTERIOR]}}static isTrue(t){return t>=0||t===dr.TRUE}static matches(){if(Number.isInteger(arguments[0])&&"string"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return e===dr.SYM_DONTCARE||(e===dr.SYM_TRUE&&(t>=0||t===dr.TRUE)||(e===dr.SYM_FALSE&&t===dr.FALSE||(e===dr.SYM_P&&t===dr.P||(e===dr.SYM_L&&t===dr.L||e===dr.SYM_A&&t===dr.A))))}if("string"==typeof arguments[0]&&"string"==typeof arguments[1]){const t=arguments[1];return new Go(arguments[0]).matches(t)}}isIntersects(){return!this.isDisjoint()}set(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<t.length;e++){const n=Math.trunc(e/3),i=e%3;this._matrix[n][i]=dr.toDimensionValue(t.charAt(e))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._matrix[t][e]=n}}isContains(){return Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])&&this._matrix[Dr.EXTERIOR][Dr.INTERIOR]===dr.FALSE&&this._matrix[Dr.EXTERIOR][Dr.BOUNDARY]===dr.FALSE}isWithin(){return Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])&&this._matrix[Dr.INTERIOR][Dr.EXTERIOR]===dr.FALSE&&this._matrix[Dr.BOUNDARY][Dr.EXTERIOR]===dr.FALSE}isTouches(t,e){return t>e?this.isTouches(e,t):(t===dr.A&&e===dr.A||t===dr.L&&e===dr.L||t===dr.L&&e===dr.A||t===dr.P&&e===dr.A||t===dr.P&&e===dr.L)&&(this._matrix[Dr.INTERIOR][Dr.INTERIOR]===dr.FALSE&&(Go.isTrue(this._matrix[Dr.INTERIOR][Dr.BOUNDARY])||Go.isTrue(this._matrix[Dr.BOUNDARY][Dr.INTERIOR])||Go.isTrue(this._matrix[Dr.BOUNDARY][Dr.BOUNDARY])))}isOverlaps(t,e){return t===dr.P&&e===dr.P||t===dr.A&&e===dr.A?Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])&&Go.isTrue(this._matrix[Dr.INTERIOR][Dr.EXTERIOR])&&Go.isTrue(this._matrix[Dr.EXTERIOR][Dr.INTERIOR]):t===dr.L&&e===dr.L&&(1===this._matrix[Dr.INTERIOR][Dr.INTERIOR]&&Go.isTrue(this._matrix[Dr.INTERIOR][Dr.EXTERIOR])&&Go.isTrue(this._matrix[Dr.EXTERIOR][Dr.INTERIOR]))}isEquals(t,e){return t===e&&(Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])&&this._matrix[Dr.INTERIOR][Dr.EXTERIOR]===dr.FALSE&&this._matrix[Dr.BOUNDARY][Dr.EXTERIOR]===dr.FALSE&&this._matrix[Dr.EXTERIOR][Dr.INTERIOR]===dr.FALSE&&this._matrix[Dr.EXTERIOR][Dr.BOUNDARY]===dr.FALSE)}matches(t){if(9!==t.length)throw new xs("Should be length 9: "+t);for(let e=0;e<3;e++)for(let n=0;n<3;n++)if(!Go.matches(this._matrix[e][n],t.charAt(3*e+n)))return!1;return!0}add(t){for(let e=0;e<3;e++)for(let n=0;n<3;n++)this.setAtLeast(e,n,t.get(e,n))}isDisjoint(){return this._matrix[Dr.INTERIOR][Dr.INTERIOR]===dr.FALSE&&this._matrix[Dr.INTERIOR][Dr.BOUNDARY]===dr.FALSE&&this._matrix[Dr.BOUNDARY][Dr.INTERIOR]===dr.FALSE&&this._matrix[Dr.BOUNDARY][Dr.BOUNDARY]===dr.FALSE}isCrosses(t,e){return t===dr.P&&e===dr.L||t===dr.P&&e===dr.A||t===dr.L&&e===dr.A?Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])&&Go.isTrue(this._matrix[Dr.INTERIOR][Dr.EXTERIOR]):t===dr.L&&e===dr.P||t===dr.A&&e===dr.P||t===dr.A&&e===dr.L?Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])&&Go.isTrue(this._matrix[Dr.EXTERIOR][Dr.INTERIOR]):t===dr.L&&e===dr.L&&0===this._matrix[Dr.INTERIOR][Dr.INTERIOR]}isCovers(){return(Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])||Go.isTrue(this._matrix[Dr.INTERIOR][Dr.BOUNDARY])||Go.isTrue(this._matrix[Dr.BOUNDARY][Dr.INTERIOR])||Go.isTrue(this._matrix[Dr.BOUNDARY][Dr.BOUNDARY]))&&this._matrix[Dr.EXTERIOR][Dr.INTERIOR]===dr.FALSE&&this._matrix[Dr.EXTERIOR][Dr.BOUNDARY]===dr.FALSE}isCoveredBy(){return(Go.isTrue(this._matrix[Dr.INTERIOR][Dr.INTERIOR])||Go.isTrue(this._matrix[Dr.INTERIOR][Dr.BOUNDARY])||Go.isTrue(this._matrix[Dr.BOUNDARY][Dr.INTERIOR])||Go.isTrue(this._matrix[Dr.BOUNDARY][Dr.BOUNDARY]))&&this._matrix[Dr.INTERIOR][Dr.EXTERIOR]===dr.FALSE&&this._matrix[Dr.BOUNDARY][Dr.EXTERIOR]===dr.FALSE}setAtLeast(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<t.length;e++){const n=Math.trunc(e/3),i=e%3;this.setAtLeast(n,i,dr.toDimensionValue(t.charAt(e)))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._matrix[t][e]<n&&(this._matrix[t][e]=n)}}setAtLeastIfValid(t,e,n){t>=0&&e>=0&&this.setAtLeast(t,e,n)}toString(){const t=new lo("123456789");for(let e=0;e<3;e++)for(let n=0;n<3;n++)t.setCharAt(3*e+n,dr.toDimensionSymbol(this._matrix[e][n]));return t.toString()}setAll(t){for(let e=0;e<3;e++)for(let n=0;n<3;n++)this._matrix[e][n]=t}get(t,e){return this._matrix[t][e]}transpose(){let t=this._matrix[1][0];return this._matrix[1][0]=this._matrix[0][1],this._matrix[0][1]=t,t=this._matrix[2][0],this._matrix[2][0]=this._matrix[0][2],this._matrix[0][2]=t,t=this._matrix[2][1],this._matrix[2][1]=this._matrix[1][2],this._matrix[1][2]=t,this}get interfaces_(){return[Rs]}}class qo{constructor(){qo.constructor_.apply(this,arguments)}static constructor_(){this._depth=Array(2).fill().map((()=>Array(3)));for(let t=0;t<2;t++)for(let e=0;e<3;e++)this._depth[t][e]=qo.NULL_VALUE}static depthAtLocation(t){return t===Dr.EXTERIOR?0:t===Dr.INTERIOR?1:qo.NULL_VALUE}getDepth(t,e){return this._depth[t][e]}setDepth(t,e,n){this._depth[t][e]=n}isNull(){if(0===arguments.length){for(let t=0;t<2;t++)for(let e=0;e<3;e++)if(this._depth[t][e]!==qo.NULL_VALUE)return!1;return!0}if(1===arguments.length){const t=arguments[0];return this._depth[t][1]===qo.NULL_VALUE}if(2===arguments.length){const t=arguments[0],e=arguments[1];return this._depth[t][e]===qo.NULL_VALUE}}normalize(){for(let t=0;t<2;t++)if(!this.isNull(t)){let e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(let n=1;n<3;n++){let i=0;this._depth[t][n]>e&&(i=1),this._depth[t][n]=i}}}getDelta(t){return this._depth[t][Nr.RIGHT]-this._depth[t][Nr.LEFT]}getLocation(t,e){return this._depth[t][e]<=0?Dr.EXTERIOR:Dr.INTERIOR}toString(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]}add(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<2;e++)for(let n=1;n<3;n++){const i=t.getLocation(e,n);i!==Dr.EXTERIOR&&i!==Dr.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=qo.depthAtLocation(i):this._depth[e][n]+=qo.depthAtLocation(i))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1];arguments[2]===Dr.INTERIOR&&this._depth[t][e]++}}}qo.NULL_VALUE=-1;class Bo{constructor(){Bo.constructor_.apply(this,arguments)}static constructor_(){if(this._data=null,this._size=0,0===arguments.length)Bo.constructor_.call(this,10);else if(1===arguments.length){const t=arguments[0];this._data=new Array(t).fill(null)}}size(){return this._size}addAll(t){return null===t||0===t.length?null:(this.ensureCapacity(this._size+t.length),kr.arraycopy(t,0,this._data,this._size,t.length),void(this._size+=t.length))}ensureCapacity(t){if(t<=this._data.length)return null;const e=Math.max(t,2*this._data.length);this._data=fr.copyOf(this._data,e)}toArray(){const t=new Array(this._size).fill(null);return kr.arraycopy(this._data,0,t,0,this._size),t}add(t){this.ensureCapacity(this._size+1),this._data[this._size]=t,++this._size}}class Yo{static toIntArray(t){const e=new Array(t.size()).fill(null);for(let n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e}findChainEnd(t,e){const n=Kr.quadrant(t[e],t[e+1]);let i=e+1;for(;i<t.length;){if(Kr.quadrant(t[i-1],t[i])!==n)break;i++}return i-1}OLDgetChainStartIndices(t){let e=0;const n=new Bs;n.add(e);do{const i=this.findChainEnd(t,e);n.add(i),e=i}while(e<t.length-1);return Yo.toIntArray(n)}getChainStartIndices(t){let e=0;const n=new Bo(Math.trunc(t.length/2));n.add(e);do{const i=this.findChainEnd(t,e);n.add(i),e=i}while(e<t.length-1);return n.toArray()}}class Uo{constructor(){Uo.constructor_.apply(this,arguments)}static constructor_(){this.e=null,this.pts=null,this.startIndex=null;const t=arguments[0];this.e=t,this.pts=t.getCoordinates();const e=new Yo;this.startIndex=e.getChainStartIndices(this.pts)}getCoordinates(){return this.pts}getMaxX(t){const e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n}getMinX(t){const e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n}computeIntersectsForChain(){if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],s=arguments[4],r=arguments[5];if(e-t==1&&s-i==1)return r.addIntersections(this.e,t,n.e,i),null;if(!this.overlaps(t,e,n,i,s))return null;const o=Math.trunc((t+e)/2),a=Math.trunc((i+s)/2);t<o&&(i<a&&this.computeIntersectsForChain(t,o,n,i,a,r),a<s&&this.computeIntersectsForChain(t,o,n,a,s,r)),o<e&&(i<a&&this.computeIntersectsForChain(o,e,n,i,a,r),a<s&&this.computeIntersectsForChain(o,e,n,a,s,r))}}overlaps(t,e,n,i,s){return ar.intersects(this.pts[t],this.pts[e],n.pts[i],n.pts[s])}getStartIndexes(){return this.startIndex}computeIntersects(t,e){for(let n=0;n<this.startIndex.length-1;n++)for(let i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)}}class zo extends Wr{constructor(){super(),zo.constructor_.apply(this,arguments)}static constructor_(){if(this.pts=null,this._env=null,this.eiList=new Fo(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new qo,this._depthDelta=0,1===arguments.length){const t=arguments[0];zo.constructor_.call(this,t,null)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.pts=t,this._label=e}}static updateIM(){if(!(2===arguments.length&&arguments[1]instanceof Go&&arguments[0]instanceof Gr))return super.updateIM.apply(this,arguments);{const t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,Nr.ON),t.getLocation(1,Nr.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,Nr.LEFT),t.getLocation(1,Nr.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,Nr.RIGHT),t.getLocation(1,Nr.RIGHT),2))}}getDepth(){return this._depth}getCollapsedEdge(){const t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new zo(t,Gr.toLineLabel(this._label))}setIsolated(t){this._isIsolated=t}setName(t){this._name=t}equals(t){if(!(t instanceof zo))return!1;const e=t;if(this.pts.length!==e.pts.length)return!1;let n=!0,i=!0,s=this.pts.length;for(let t=0;t<this.pts.length;t++)if(this.pts[t].equals2D(e.pts[t])||(n=!1),this.pts[t].equals2D(e.pts[--s])||(i=!1),!n&&!i)return!1;return!0}getCoordinate(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){const t=arguments[0];return this.pts[t]}}isClosed(){return this.pts[0].equals(this.pts[this.pts.length-1])}getMaximumSegmentIndex(){return this.pts.length-1}setDepthDelta(t){this._depthDelta=t}getEdgeIntersectionList(){return this.eiList}addIntersections(t,e,n){for(let i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)}isIsolated(){return this._isIsolated}getCoordinates(){return this.pts}print(t){t.print("edge "+this._name+": "),t.print("LINESTRING (");for(let e=0;e<this.pts.length;e++)e>0&&t.print(","),t.print(this.pts[e].x+" "+this.pts[e].y);t.print(")  "+this._label+" "+this._depthDelta)}computeIM(t){zo.updateIM(this._label,t)}isCollapsed(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))}getDepthDelta(){return this._depthDelta}getNumPoints(){return this.pts.length}printReverse(t){t.print("edge "+this._name+": ");for(let e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+" ");t.println("")}getMonotoneChainEdge(){return null===this._mce&&(this._mce=new Uo(this)),this._mce}getEnvelope(){if(null===this._env){this._env=new ar;for(let t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env}addIntersection(t,e,n,i){const s=new Ps(t.getIntersection(i));let r=e,o=t.getEdgeDistance(n,i);const a=r+1;if(a<this.pts.length){const t=this.pts[a];s.equals2D(t)&&(r=a,o=0)}this.eiList.add(s,r,o)}toString(){const t=new lo;t.append("edge "+this._name+": "),t.append("LINESTRING (");for(let e=0;e<this.pts.length;e++)e>0&&t.append(","),t.append(this.pts[e].x+" "+this.pts[e].y);return t.append(")  "+this._label+" "+this._depthDelta),t.toString()}isPointwiseEqual(t){if(this.pts.length!==t.pts.length)return!1;for(let e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0}}class ko extends no{constructor(){super(),ko.constructor_.apply(this,arguments)}static constructor_(){if(this._parentGeom=null,this._lineEdgeMap=new Ir,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new No,2===arguments.length){const t=arguments[0],e=arguments[1];ko.constructor_.call(this,t,e,fo.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._argIndex=t,this._parentGeom=e,this._boundaryNodeRule=n,null!==e&&this.add(e)}}static determineBoundary(t,e){return t.isInBoundary(e)?Dr.BOUNDARY:Dr.INTERIOR}insertBoundaryPoint(t,e){const n=this._nodes.addNode(e).getLabel();let i=1,s=Dr.NONE;s=n.getLocation(t,Nr.ON),s===Dr.BOUNDARY&&i++;const r=ko.determineBoundary(this._boundaryNodeRule,i);n.setLocation(t,r)}computeSelfNodes(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){const t=arguments[1],e=arguments[2],n=new Cr(arguments[0],!0,!1);n.setIsDoneIfProperInt(e);const i=this.createEdgeSetIntersector(),s=this._parentGeom instanceof Ho||this._parentGeom instanceof ro||this._parentGeom instanceof Eo,r=t||!s;return i.computeIntersections(this._edges,n,r),this.addSelfIntersectionNodes(this._argIndex),n}}addPolygon(t){this.addPolygonRing(t.getExteriorRing(),Dr.EXTERIOR,Dr.INTERIOR);for(let e=0;e<t.getNumInteriorRing();e++){const n=t.getInteriorRingN(e);this.addPolygonRing(n,Dr.INTERIOR,Dr.EXTERIOR)}}addEdge(t){this.insertEdge(t);const e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],Dr.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],Dr.BOUNDARY)}addLineString(t){const e=Xr.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;const n=new zo(e,new Gr(this._argIndex,Dr.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),Ts.isTrue(e.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])}getInvalidPoint(){return this._invalidPoint}getBoundaryPoints(){const t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null);let n=0;for(let i=t.iterator();i.hasNext();){const t=i.next();e[n++]=t.getCoordinate().copy()}return e}addSelfIntersectionNodes(t){for(let e=this._edges.iterator();e.hasNext();){const n=e.next(),i=n.getLabel().getLocation(t);for(let e=n.eiList.iterator();e.hasNext();){const n=e.next();this.addSelfIntersectionNode(t,n.coord,i)}}}add(){if(!(1===arguments.length&&arguments[0]instanceof lr))return super.add.apply(this,arguments);{const t=arguments[0];if(t.isEmpty())return null;if(t instanceof Eo&&(this._useBoundaryDeterminationRule=!1),t instanceof ro)this.addPolygon(t);else if(t instanceof jo)this.addLineString(t);else if(t instanceof Io)this.addPoint(t);else if(t instanceof xr)this.addCollection(t);else if(t instanceof Hr)this.addCollection(t);else if(t instanceof Eo)this.addCollection(t);else{if(!(t instanceof yr))throw new js(t.getGeometryType());this.addCollection(t)}}}addCollection(t){for(let e=0;e<t.getNumGeometries();e++){const n=t.getGeometryN(e);this.add(n)}}locate(t){return ms(this._parentGeom,Vr)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new vo(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)}findEdge(){if(1===arguments.length&&arguments[0]instanceof jo){const t=arguments[0];return this._lineEdgeMap.get(t)}return super.findEdge.apply(this,arguments)}computeSplitEdges(t){for(let e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}}computeEdgeIntersections(t,e,n){const i=new Cr(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,i),i}getGeometry(){return this._parentGeom}getBoundaryNodeRule(){return this._boundaryNodeRule}hasTooFewPoints(){return this._hasTooFewPoints}addPoint(){if(arguments[0]instanceof Io){const t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,Dr.INTERIOR)}else if(arguments[0]instanceof Ps){const t=arguments[0];this.insertPoint(this._argIndex,t,Dr.INTERIOR)}}getBoundaryNodes(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes}addSelfIntersectionNode(t,e,n){if(this.isBoundaryNode(t,e))return null;n===Dr.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)}addPolygonRing(t,e,n){if(t.isEmpty())return null;const i=Xr.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=i[0],null;let s=e,r=n;Ar.isCCW(i)&&(s=n,r=e);const o=new zo(i,new Gr(this._argIndex,Dr.BOUNDARY,s,r));this._lineEdgeMap.put(t,o),this.insertEdge(o),this.insertPoint(this._argIndex,i[0],Dr.BOUNDARY)}insertPoint(t,e,n){const i=this._nodes.addNode(e),s=i.getLabel();null===s?i._label=new Gr(t,n):s.setLocation(t,n)}createEdgeSetIntersector(){return new Rr}}class Xo{constructor(){Xo.constructor_.apply(this,arguments)}static constructor_(){if(this._inputGeom=null,this._isClosedEndpointsInInterior=!0,this._nonSimpleLocation=null,1===arguments.length){const t=arguments[0];this._inputGeom=t}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._inputGeom=t,this._isClosedEndpointsInInterior=!e.isInBoundary(2)}}static isSimple(){if(1===arguments.length){return new Xo(arguments[0]).isSimple()}if(2===arguments.length){return new Xo(arguments[0],arguments[1]).isSimple()}}isSimpleMultiPoint(t){if(t.isEmpty())return!0;const e=new hr;for(let n=0;n<t.getNumGeometries();n++){const i=t.getGeometryN(n).getCoordinate();if(e.contains(i))return this._nonSimpleLocation=i,!1;e.add(i)}return!0}isSimplePolygonal(t){for(let e=bo.getLines(t).iterator();e.hasNext();){const t=e.next();if(!this.isSimpleLinearGeometry(t))return!1}return!0}hasClosedEndpointIntersection(t){const e=new ir;for(let n=t.getEdgeIterator();n.hasNext();){const t=n.next(),i=t.isClosed(),s=t.getCoordinate(0);this.addEndpoint(e,s,i);const r=t.getCoordinate(t.getNumPoints()-1);this.addEndpoint(e,r,i)}for(let t=e.values().iterator();t.hasNext();){const e=t.next();if(e.isClosed&&2!==e.degree)return this._nonSimpleLocation=e.getCoordinate(),!0}return!1}getNonSimpleLocation(){return this._nonSimpleLocation}isSimpleLinearGeometry(t){if(t.isEmpty())return!0;const e=new ko(0,t),n=new ho,i=e.computeSelfNodes(n,!0);return!i.hasIntersection()||(i.hasProperIntersection()?(this._nonSimpleLocation=i.getProperIntersectionPoint(),!1):!this.hasNonEndpointIntersection(e)&&(!this._isClosedEndpointsInInterior||!this.hasClosedEndpointIntersection(e)))}hasNonEndpointIntersection(t){for(let e=t.getEdgeIterator();e.hasNext();){const t=e.next(),n=t.getMaximumSegmentIndex();for(let e=t.getEdgeIntersectionList().iterator();e.hasNext();){const t=e.next();if(!t.isEndPoint(n))return this._nonSimpleLocation=t.getCoordinate(),!0}}return!1}addEndpoint(t,e,n){let i=t.get(e);null===i&&(i=new Vo(e),t.put(e,i)),i.addEndpoint(n)}computeSimple(t){return this._nonSimpleLocation=null,!!t.isEmpty()||(t instanceof jo||t instanceof Hr?this.isSimpleLinearGeometry(t):t instanceof xr?this.isSimpleMultiPoint(t):ms(t,Vr)?this.isSimplePolygonal(t):!(t instanceof yr)||this.isSimpleGeometryCollection(t))}isSimple(){return this._nonSimpleLocation=null,this.computeSimple(this._inputGeom)}isSimpleGeometryCollection(t){for(let e=0;e<t.getNumGeometries();e++){const n=t.getGeometryN(e);if(!this.computeSimple(n))return!1}return!0}}class Vo{constructor(){Vo.constructor_.apply(this,arguments)}static constructor_(){this.pt=null,this.isClosed=null,this.degree=null;const t=arguments[0];this.pt=t,this.isClosed=!1,this.degree=0}getCoordinate(){return this.pt}addEndpoint(t){this.degree++,this.isClosed|=t}}Xo.EndpointInfo=Vo;class jo extends lr{constructor(){super(),jo.constructor_.apply(this,arguments)}static constructor_(){if(this._points=null,0===arguments.length);else if(2===arguments.length){const t=arguments[0],e=arguments[1];lr.constructor_.call(this,e),this.init(t)}}computeEnvelopeInternal(){return this.isEmpty()?new ar:this._points.expandEnvelope(new ar)}isRing(){return this.isClosed()&&Xo.isSimple(this)}getCoordinates(){return this._points.toCoordinateArray()}copyInternal(){return new jo(this._points.copy(),this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof lr){const t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;const n=t;if(this._points.size()!==n._points.size())return!1;for(let t=0;t<this._points.size();t++)if(!this.equal(this._points.getCoordinate(t),n._points.getCoordinate(t),e))return!1;return!0}return super.equalsExact.apply(this,arguments)}isClosed(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))}reverseInternal(){const t=this._points.copy();return so.reverse(t),this.getFactory().createLineString(t)}getEndPoint(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)}getTypeCode(){return lr.TYPECODE_LINESTRING}getDimension(){return 1}getBoundary(){throw new js}isEquivalentClass(t){return t instanceof jo}getCoordinateSequence(){return this._points}getPointN(t){return this.getFactory().createPoint(this._points.getCoordinate(t))}normalize(){for(let t=0;t<Math.trunc(this._points.size()/2);t++){const e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e))){if(this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0){const t=this._points.copy();so.reverse(t),this._points=t}return null}}}getCoordinate(){return this.isEmpty()?null:this._points.getCoordinate(0)}getBoundaryDimension(){return this.isClosed()?dr.FALSE:0}getLength(){return rr.ofLine(this._points)}getNumPoints(){return this._points.size()}compareToSameClass(){if(1===arguments.length){const t=arguments[0];let e=0,n=0;for(;e<this._points.size()&&n<t._points.size();){const i=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==i)return i;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){const t=arguments[0];return arguments[1].compare(this._points,t._points)}}apply(){if(ms(arguments[0],pr)){const t=arguments[0];for(let e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e))}else if(ms(arguments[0],mr)){const t=arguments[0];if(0===this._points.size())return null;for(let e=0;e<this._points.size()&&(t.filter(this._points,e),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(ms(arguments[0],_r)){arguments[0].filter(this)}else if(ms(arguments[0],or)){arguments[0].filter(this)}}getCoordinateN(t){return this._points.getCoordinate(t)}getGeometryType(){return lr.TYPENAME_LINESTRING}isEmpty(){return 0===this._points.size()}init(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new xs("Invalid number of points in LineString (found "+t.size()+" - must be 0 or >= 2)");this._points=t}isCoordinate(t){for(let e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1}getStartPoint(){return this.isEmpty()?null:this.getPointN(0)}get interfaces_(){return[jr]}}class Ho extends jo{constructor(){super(),Ho.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];jo.constructor_.call(this,t,e),this.validateConstruction()}copyInternal(){return new Ho(this._points.copy(),this._factory)}getBoundaryDimension(){return dr.FALSE}isClosed(){return!!this.isEmpty()||super.isClosed.call(this)}reverseInternal(){const t=this._points.copy();return so.reverse(t),this.getFactory().createLinearRing(t)}getTypeCode(){return lr.TYPECODE_LINEARRING}validateConstruction(){if(!this.isEmpty()&&!super.isClosed.call(this))throw new xs("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<Ho.MINIMUM_VALID_SIZE)throw new xs("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")}getGeometryType(){return lr.TYPENAME_LINEARRING}}Ho.MINIMUM_VALID_SIZE=4;class Wo{create(){if(1===arguments.length)arguments[0]instanceof Array||ms(arguments[0],Pr);else if(2===arguments.length);else if(3===arguments.length){const t=arguments[0],e=arguments[1];return this.create(t,e)}}}class Zo{constructor(){Zo.constructor_.apply(this,arguments)}static constructor_(){if(this._dimension=3,this._measures=0,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];Zo.constructor_.call(this,t,Xr.dimension(t),Xr.measures(t))}else if(Number.isInteger(arguments[0])){const t=arguments[0];this._coordinates=new Array(t).fill(null);for(let e=0;e<t;e++)this._coordinates[e]=new Ps}else if(ms(arguments[0],Pr)){const t=arguments[0];if(null===t)return this._coordinates=new Array(0).fill(null),null;this._dimension=t.getDimension(),this._measures=t.getMeasures(),this._coordinates=new Array(t.size()).fill(null);for(let e=0;e<this._coordinates.length;e++)this._coordinates[e]=t.getCoordinateCopy(e)}}else if(2===arguments.length){if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1];Zo.constructor_.call(this,t,e,Xr.measures(t))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1];this._coordinates=new Array(t).fill(null),this._dimension=e;for(let n=0;n<t;n++)this._coordinates[n]=Ur.create(e)}}else if(3===arguments.length)if(Number.isInteger(arguments[2])&&arguments[0]instanceof Array&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1],n=arguments[2];this._dimension=e,this._measures=n,this._coordinates=null===t?new Array(0).fill(null):t}else if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1],n=arguments[2];this._coordinates=new Array(t).fill(null),this._dimension=e,this._measures=n;for(let e=0;e<t;e++)this._coordinates[e]=this.createCoordinate()}}getCoordinate(){if(1===arguments.length){const t=arguments[0];return this._coordinates[t]}if(2===arguments.length){const t=arguments[0];arguments[1].setCoordinate(this._coordinates[t])}}getCoordinateCopy(t){const e=this.createCoordinate();return e.setCoordinate(this._coordinates[t]),e}createCoordinate(){return Ur.create(this.getDimension(),this.getMeasures())}getDimension(){return this._dimension}getX(t){return this._coordinates[t].x}getMeasures(){return this._measures}expandEnvelope(t){for(let e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t}copy(){const t=new Array(this.size()).fill(null);for(let e=0;e<this._coordinates.length;e++){const n=this.createCoordinate();n.setCoordinate(this._coordinates[e]),t[e]=n}return new Zo(t,this._dimension,this._measures)}toString(){if(this._coordinates.length>0){const t=new lo(17*this._coordinates.length);t.append("("),t.append(this._coordinates[0]);for(let e=1;e<this._coordinates.length;e++)t.append(", "),t.append(this._coordinates[e]);return t.append(")"),t.toString()}return"()"}getY(t){return this._coordinates[t].y}toCoordinateArray(){return this._coordinates}getM(t){return this.hasM()?this._coordinates[t].getM():Ns.NaN}setOrdinate(t,e,n){switch(e){case Pr.X:this._coordinates[t].x=n;break;case Pr.Y:this._coordinates[t].y=n;break;default:this._coordinates[t].setOrdinate(e,n)}}getZ(t){return this.hasZ()?this._coordinates[t].getZ():Ns.NaN}size(){return this._coordinates.length}getOrdinate(t,e){switch(e){case Pr.X:return this._coordinates[t].x;case Pr.Y:return this._coordinates[t].y;default:return this._coordinates[t].getOrdinate(e)}}get interfaces_(){return[Pr,ws]}}class Jo{static instance(){return Jo.instanceObject}readResolve(){return Jo.instance()}create(){if(1===arguments.length){if(arguments[0]instanceof Array){return new Zo(arguments[0])}if(ms(arguments[0],Pr)){return new Zo(arguments[0])}}else{if(2===arguments.length){let t=arguments[1];return t>3&&(t=3),t<2&&(t=2),new Zo(arguments[0],t)}if(3===arguments.length){let t=arguments[2],e=arguments[1]-t;return t>1&&(t=1),e>3&&(e=3),e<2&&(e=2),new Zo(arguments[0],e+t,t)}}}get interfaces_(){return[Wo,ws]}}Jo.instanceObject=new Jo;class Ko{constructor(){Ko.constructor_.apply(this,arguments)}static constructor_(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=Ko.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof Qo){const t=arguments[0];this._modelType=t,t===Ko.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){const t=arguments[0];this._modelType=Ko.FIXED,this.setScale(t)}else if(arguments[0]instanceof Ko){const t=arguments[0];this._modelType=t._modelType,this._scale=t._scale}}static mostPrecise(t,e){return t.compareTo(e)>=0?t:e}equals(t){if(!(t instanceof Ko))return!1;const e=t;return this._modelType===e._modelType&&this._scale===e._scale}compareTo(t){const e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return Vs.compare(n,i)}getType(){return this._modelType}toString(){let t="UNKNOWN";return this._modelType===Ko.FLOATING?t="Floating":this._modelType===Ko.FLOATING_SINGLE?t="Floating-Single":this._modelType===Ko.FIXED&&(t="Fixed (Scale="+this.getScale()+")"),t}makePrecise(){if("number"==typeof arguments[0]){const t=arguments[0];if(Ns.isNaN(t))return t;if(this._modelType===Ko.FLOATING_SINGLE){return t}return this._modelType===Ko.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof Ps){const t=arguments[0];if(this._modelType===Ko.FLOATING)return null;t.x=this.makePrecise(t.x),t.y=this.makePrecise(t.y)}}getMaximumSignificantDigits(){let t=16;return this._modelType===Ko.FLOATING?t=16:this._modelType===Ko.FLOATING_SINGLE?t=6:this._modelType===Ko.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t}setScale(t){this._scale=Math.abs(t)}getScale(){return this._scale}isFloating(){return this._modelType===Ko.FLOATING||this._modelType===Ko.FLOATING_SINGLE}get interfaces_(){return[ws,Ss]}}class Qo{constructor(){Qo.constructor_.apply(this,arguments)}static constructor_(){this._name=null;const t=arguments[0];this._name=t,Qo.nameToTypeMap.put(t,this)}readResolve(){return Qo.nameToTypeMap.get(this._name)}toString(){return this._name}get interfaces_(){return[ws]}}Qo.nameToTypeMap=new Ir,Ko.Type=Qo,Ko.FIXED=new Qo("FIXED"),Ko.FLOATING=new Qo("FLOATING"),Ko.FLOATING_SINGLE=new Qo("FLOATING SINGLE"),Ko.maximumPreciseValue=9007199254740992;class $o{constructor(){$o.constructor_.apply(this,arguments)}static constructor_(){if(this._precisionModel=null,this._coordinateSequenceFactory=null,this._SRID=null,0===arguments.length)$o.constructor_.call(this,new Ko,0);else if(1===arguments.length){if(ms(arguments[0],Wo)){const t=arguments[0];$o.constructor_.call(this,new Ko,0,t)}else if(arguments[0]instanceof Ko){const t=arguments[0];$o.constructor_.call(this,t,0,$o.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];$o.constructor_.call(this,t,e,$o.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._precisionModel=t,this._coordinateSequenceFactory=n,this._SRID=e}}static toMultiPolygonArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toGeometryArray(t){if(null===t)return null;const e=new Array(t.size()).fill(null);return t.toArray(e)}static getDefaultCoordinateSequenceFactory(){return Jo.instance()}static toMultiLineStringArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toLineStringArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toMultiPointArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toLinearRingArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toPointArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toPolygonArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static createPointFromInternalCoord(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)}createEmpty(t){switch(t){case-1:return this.createGeometryCollection();case 0:return this.createPoint();case 1:return this.createLineString();case 2:return this.createPolygon();default:throw new xs("Invalid dimension: "+t)}}toGeometry(t){return t.isNull()?this.createPoint():t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new Ps(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new Ps(t.getMinX(),t.getMinY()),new Ps(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new Ps(t.getMinX(),t.getMinY()),new Ps(t.getMinX(),t.getMaxY()),new Ps(t.getMaxX(),t.getMaxY()),new Ps(t.getMaxX(),t.getMinY()),new Ps(t.getMinX(),t.getMinY())]),null)}createLineString(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];return this.createLineString(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(ms(arguments[0],Pr)){return new jo(arguments[0],this)}}}createMultiLineString(){if(0===arguments.length)return new Hr(null,this);if(1===arguments.length){return new Hr(arguments[0],this)}}createPolygon(){if(0===arguments.length)return this.createPolygon(null,null);if(1===arguments.length){if(ms(arguments[0],Pr)){const t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){const t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Ho){const t=arguments[0];return this.createPolygon(t,null)}}else if(2===arguments.length){return new ro(arguments[0],arguments[1],this)}}getSRID(){return this._SRID}createGeometryCollection(){if(0===arguments.length)return new yr(null,this);if(1===arguments.length){return new yr(arguments[0],this)}}getPrecisionModel(){return this._precisionModel}createLinearRing(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(ms(arguments[0],Pr)){return new Ho(arguments[0],this)}}}createMultiPolygon(){if(0===arguments.length)return new Eo(null,this);if(1===arguments.length){return new Eo(arguments[0],this)}}createMultiPoint(){if(0===arguments.length)return new xr(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){return new xr(arguments[0],this)}if(ms(arguments[0],Pr)){const t=arguments[0];if(null===t)return this.createMultiPoint(new Array(0).fill(null));const e=new Array(t.size()).fill(null);for(let n=0;n<t.size();n++){const i=this.getCoordinateSequenceFactory().create(1,t.getDimension(),t.getMeasures());so.copy(t,n,i,0,1),e[n]=this.createPoint(i)}return this.createMultiPoint(e)}}}buildGeometry(t){let e=null,n=!1,i=!1;for(let s=t.iterator();s.hasNext();){const t=s.next(),r=t.getTypeCode();null===e&&(e=r),r!==e&&(n=!0),t instanceof yr&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection($o.toGeometryArray(t));const s=t.iterator().next();if(t.size()>1){if(s instanceof ro)return this.createMultiPolygon($o.toPolygonArray(t));if(s instanceof jo)return this.createMultiLineString($o.toLineStringArray(t));if(s instanceof Io)return this.createMultiPoint($o.toPointArray(t));Ts.shouldNeverReachHere("Unhandled geometry type: "+s.getGeometryType())}return s}createMultiPointFromCoords(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)}createPoint(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Ps){const t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(ms(arguments[0],Pr)){return new Io(arguments[0],this)}}}getCoordinateSequenceFactory(){return this._coordinateSequenceFactory}get interfaces_(){return[ws]}}const ta="XY",ea="XYZ",na="XYM",ia="XYZM",sa={POINT:"Point",LINE_STRING:"LineString",LINEAR_RING:"LinearRing",POLYGON:"Polygon",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon",GEOMETRY_COLLECTION:"GeometryCollection",CIRCLE:"Circle"},ra="EMPTY",oa="Z",aa="M",la=1,ca=2,ha=3,ua=4,ga=5,da=6;for(const t in sa)sa[t].toUpperCase();class fa{constructor(t){this.wkt=t,this.index_=-1}isAlpha_(t){return t>="a"&&t<="z"||t>="A"&&t<="Z"}isNumeric_(t,e){return t>="0"&&t<="9"||"."==t&&!(void 0!==e&&e)}isWhiteSpace_(t){return" "==t||"\t"==t||"\r"==t||"\n"==t}nextChar_(){return this.wkt.charAt(++this.index_)}nextToken(){const t=this.nextChar_(),e=this.index_;let n,i=t;if("("==t)n=ca;else if(","==t)n=ga;else if(")"==t)n=ha;else if(this.isNumeric_(t)||"-"==t)n=ua,i=this.readNumber_();else if(this.isAlpha_(t))n=la,i=this.readText_();else{if(this.isWhiteSpace_(t))return this.nextToken();if(""!==t)throw new Error("Unexpected character: "+t);n=da}return{position:e,value:i,type:n}}readNumber_(){let t;const e=this.index_;let n=!1,i=!1;do{"."==t?n=!0:"e"!=t&&"E"!=t||(i=!0),t=this.nextChar_()}while(this.isNumeric_(t,n)||!i&&("e"==t||"E"==t)||i&&("-"==t||"+"==t));return parseFloat(this.wkt.substring(e,this.index_--))}readText_(){let t;const e=this.index_;do{t=this.nextChar_()}while(this.isAlpha_(t));return this.wkt.substring(e,this.index_--).toUpperCase()}}class pa{constructor(t,e){this.lexer_=t,this.token_,this.layout_=ta,this.factory=e}consume_(){this.token_=this.lexer_.nextToken()}isTokenType(t){return this.token_.type==t}match(t){const e=this.isTokenType(t);return e&&this.consume_(),e}parse(){this.consume_();return this.parseGeometry_()}parseGeometryLayout_(){let t=ta;const e=this.token_;if(this.isTokenType(la)){const n=e.value;n===oa?t=ea:n===aa?t=na:"ZM"===n&&(t=ia),t!==ta&&this.consume_()}return t}parseGeometryCollectionText_(){if(this.match(ca)){const t=[];do{t.push(this.parseGeometry_())}while(this.match(ga));if(this.match(ha))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePointText_(){if(this.match(ca)){const t=this.parsePoint_();if(this.match(ha))return t}else if(this.isEmptyGeometry_())return null;throw new Error(this.formatErrorMessage_())}parseLineStringText_(){if(this.match(ca)){const t=this.parsePointList_();if(this.match(ha))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePolygonText_(){if(this.match(ca)){const t=this.parseLineStringTextList_();if(this.match(ha))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPointText_(){if(this.match(ca)){let t;if(t=this.token_.type==ca?this.parsePointTextList_():this.parsePointList_(),this.match(ha))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiLineStringText_(){if(this.match(ca)){const t=this.parseLineStringTextList_();if(this.match(ha))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPolygonText_(){if(this.match(ca)){const t=this.parsePolygonTextList_();if(this.match(ha))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePoint_(){const t=[],e=this.layout_.length;for(let n=0;n<e;++n){const e=this.token_;if(!this.match(ua))break;t.push(e.value)}if(t.length==e)return t;throw new Error(this.formatErrorMessage_())}parsePointList_(){const t=[this.parsePoint_()];for(;this.match(ga);)t.push(this.parsePoint_());return t}parsePointTextList_(){const t=[this.parsePointText_()];for(;this.match(ga);)t.push(this.parsePointText_());return t}parseLineStringTextList_(){const t=[this.parseLineStringText_()];for(;this.match(ga);)t.push(this.parseLineStringText_());return t}parsePolygonTextList_(){const t=[this.parsePolygonText_()];for(;this.match(ga);)t.push(this.parsePolygonText_());return t}isEmptyGeometry_(){const t=this.isTokenType(la)&&this.token_.value==ra;return t&&this.consume_(),t}formatErrorMessage_(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"}parseGeometry_(){const t=this.factory,e=t=>new Ps(...t),n=n=>{const i=n.map((n=>t.createLinearRing(n.map(e))));return i.length>1?t.createPolygon(i[0],i.slice(1)):t.createPolygon(i[0])},i=this.token_;if(this.match(la)){const s=i.value;if(this.layout_=this.parseGeometryLayout_(),"GEOMETRYCOLLECTION"==s){const e=this.parseGeometryCollectionText_();return t.createGeometryCollection(e)}switch(s){case"POINT":{const e=this.parsePointText_();return e?t.createPoint(new Ps(...e)):t.createPoint()}case"LINESTRING":{const n=this.parseLineStringText_().map(e);return t.createLineString(n)}case"LINEARRING":{const n=this.parseLineStringText_().map(e);return t.createLinearRing(n)}case"POLYGON":{const e=this.parsePolygonText_();return e&&0!==e.length?n(e):t.createPolygon()}case"MULTIPOINT":{const n=this.parseMultiPointText_();if(!n||0===n.length)return t.createMultiPoint();const i=n.map(e).map((e=>t.createPoint(e)));return t.createMultiPoint(i)}case"MULTILINESTRING":{const n=this.parseMultiLineStringText_().map((n=>t.createLineString(n.map(e))));return t.createMultiLineString(n)}case"MULTIPOLYGON":{const e=this.parseMultiPolygonText_();if(!e||0===e.length)return t.createMultiPolygon();const i=e.map(n);return t.createMultiPolygon(i)}default:throw new Error("Invalid geometry type: "+s)}}throw new Error(this.formatErrorMessage_())}}function _a(t){if(t.isEmpty())return"";const e=t.getCoordinate(),n=[e.x,e.y];return void 0===e.z||Number.isNaN(e.z)||n.push(e.z),void 0===e.m||Number.isNaN(e.m)||n.push(e.m),n.join(" ")}function ma(t){const e=t.getCoordinates().map((t=>{const e=[t.x,t.y];return void 0===t.z||Number.isNaN(t.z)||e.push(t.z),void 0===t.m||Number.isNaN(t.m)||e.push(t.m),e})),n=[];for(let t=0,i=e.length;t<i;++t)n.push(e[t].join(" "));return n.join(", ")}function ya(t){const e=[];e.push("("+ma(t.getExteriorRing())+")");for(let n=0,i=t.getNumInteriorRing();n<i;++n)e.push("("+ma(t.getInteriorRingN(n))+")");return e.join(", ")}const Ea={Point:_a,LineString:ma,LinearRing:ma,Polygon:ya,MultiPoint:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push("("+_a(t.getGeometryN(n))+")");return e.join(", ")},MultiLineString:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push("("+ma(t.getGeometryN(n))+")");return e.join(", ")},MultiPolygon:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push("("+ya(t.getGeometryN(n))+")");return e.join(", ")},GeometryCollection:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push(xa(t.getGeometryN(n)));return e.join(", ")}};function xa(t){let e=t.getGeometryType();const n=Ea[e];e=e.toUpperCase();const i=function(t){let e="";if(t.isEmpty())return e;const n=t.getCoordinate();return void 0===n.z||Number.isNaN(n.z)||(e+=oa),void 0===n.m||Number.isNaN(n.m)||(e+=aa),e}(t);if(i.length>0&&(e+=" "+i),t.isEmpty())return e+" "+ra;return e+" ("+n(t)+")"}class Ia{constructor(t){this.geometryFactory=t||new $o,this.precisionModel=this.geometryFactory.getPrecisionModel()}read(t){const e=new fa(t);return new pa(e,this.geometryFactory).parse()}write(t){return xa(t)}}class Na{constructor(t){this.parser=new Ia(t)}write(t){return this.parser.write(t)}static toLineString(t,e){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+t.x+" "+t.y+", "+e.x+" "+e.y+" )"}}class Sa{static octant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new xs("Cannot compute the octant for point ( "+t+", "+e+" )");const n=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?n>=i?0:1:n>=i?7:6:e>=0?n>=i?3:2:n>=i?4:5}if(arguments[0]instanceof Ps&&arguments[1]instanceof Ps){const t=arguments[0],e=arguments[1],n=e.x-t.x,i=e.y-t.y;if(0===n&&0===i)throw new xs("Cannot compute the octant for two identical points "+t);return Sa.octant(n,i)}}}class wa{getCoordinates(){}size(){}getCoordinate(t){}isClosed(){}setData(t){}getData(){}}class Ca{addIntersection(t,e){}get interfaces_(){return[wa]}}class La{constructor(){La.constructor_.apply(this,arguments)}static constructor_(){this._nodeList=new sr(this),this._pts=null,this._data=null;const t=arguments[0],e=arguments[1];this._pts=t,this._data=e}static getNodedSubstrings(){if(1===arguments.length){const t=arguments[0],e=new Bs;return La.getNodedSubstrings(t,e),e}if(2===arguments.length){const t=arguments[1];for(let e=arguments[0].iterator();e.hasNext();){e.next().getNodeList().addSplitEdges(t)}}}getCoordinates(){return this._pts}size(){return this._pts.length}getCoordinate(t){return this._pts[t]}isClosed(){return this._pts[0].equals(this._pts[this._pts.length-1])}getSegmentOctant(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))}toString(){return Na.toLineString(new Zo(this._pts))}getNodeList(){return this._nodeList}addIntersectionNode(t,e){let n=e;const i=n+1;if(i<this._pts.length){const e=this._pts[i];t.equals2D(e)&&(n=i)}return this._nodeList.add(t,n)}addIntersections(t,e,n){for(let i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)}setData(t){this._data=t}safeOctant(t,e){return t.equals2D(e)?0:Sa.octant(t,e)}getData(){return this._data}addIntersection(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){const t=arguments[1],e=arguments[3],n=new Ps(arguments[0].getIntersection(e));this.addIntersection(n,t)}}get interfaces_(){return[Ca]}}class Ta{getNodedSubstrings(){}computeNodes(t){}}class Ra{constructor(){Ra.constructor_.apply(this,arguments)}static constructor_(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){const t=arguments[0],e=arguments[1];Ra.constructor_.call(this,t,e,0,0)}else if(4===arguments.length){const t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._isScaled=!this.isIntegerPrecision()}}rescale(){if(ms(arguments[0],Ds)){for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.rescale(e.getCoordinates())}}else if(arguments[0]instanceof Array){const t=arguments[0];for(let e=0;e<t.length;e++)t[e].x=t[e].x/this._scaleFactor+this._offsetX,t[e].y=t[e].y/this._scaleFactor+this._offsetY;2===t.length&&t[0].equals2D(t[1])&&kr.out.println(t)}}scale(){if(ms(arguments[0],Ds)){const t=arguments[0],e=new Bs(t.size());for(let n=t.iterator();n.hasNext();){const t=n.next();e.add(new La(this.scale(t.getCoordinates()),t.getData()))}return e}if(arguments[0]instanceof Array){const t=arguments[0],e=new Array(t.length).fill(null);for(let n=0;n<t.length;n++)e[n]=new Ps(Math.round((t[n].x-this._offsetX)*this._scaleFactor),Math.round((t[n].y-this._offsetY)*this._scaleFactor),t[n].getZ());return Xr.removeRepeatedPoints(e)}}isIntegerPrecision(){return 1===this._scaleFactor}getNodedSubstrings(){const t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t}computeNodes(t){let e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)}get interfaces_(){return[Ta]}}class Oa{constructor(){Oa.constructor_.apply(this,arguments)}static constructor_(){this._li=new ho,this._segStrings=null;const t=arguments[0];this._segStrings=t}checkEndPtVertexIntersections(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length){const t=arguments[0];for(let e=arguments[1].iterator();e.hasNext();){const n=e.next().getCoordinates();for(let e=1;e<n.length-1;e++)if(n[e].equals(t))throw new Cs("found endpt/interior pt intersection at index "+e+" :pt "+t)}}}checkInteriorIntersections(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next();for(let t=this._segStrings.iterator();t.hasNext();){const n=t.next();this.checkInteriorIntersections(e,n)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1],n=t.getCoordinates(),i=e.getCoordinates();for(let s=0;s<n.length-1;s++)for(let n=0;n<i.length-1;n++)this.checkInteriorIntersections(t,s,e,n)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];if(t===n&&e===i)return null;const s=t.getCoordinates()[e],r=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this._li.computeIntersection(s,r,o,a),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,s,r)||this.hasInteriorIntersection(this._li,o,a)))throw new Cs("found non-noded intersection at "+s+"-"+r+" and "+o+"-"+a)}}checkValid(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()}checkCollapses(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next();this.checkCollapses(e)}else if(1===arguments.length){const t=arguments[0].getCoordinates();for(let e=0;e<t.length-2;e++)this.checkCollapse(t[e],t[e+1],t[e+2])}}hasInteriorIntersection(t,e,n){for(let i=0;i<t.getIntersectionNum();i++){const s=t.getIntersection(i);if(!s.equals(e)&&!s.equals(n))return!0}return!1}checkCollapse(t,e,n){if(t.equals(n))throw new Cs("found non-noded collapse at "+Oa.fact.createLineString([t,e,n]))}}Oa.fact=new $o;class ba{getBounds(){}}class Ma{constructor(){Ma.constructor_.apply(this,arguments)}static constructor_(){this._bounds=null,this._item=null;const t=arguments[0],e=arguments[1];this._bounds=t,this._item=e}getItem(){return this._item}getBounds(){return this._bounds}get interfaces_(){return[ba,ws]}}class va{constructor(){va.constructor_.apply(this,arguments)}static constructor_(){this._size=null,this._items=null,this._size=0,this._items=new Bs,this._items.add(null)}poll(){if(this.isEmpty())return null;const t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t}size(){return this._size}reorder(t){let e=null;const n=this._items.get(t);for(;2*t<=this._size&&(e=2*t,e!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)}clear(){this._size=0,this._items.clear()}peek(){if(this.isEmpty())return null;return this._items.get(1)}isEmpty(){return 0===this._size}add(t){this._items.add(null),this._size+=1;let e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)}}class Pa{query(){}insert(t,e){}remove(t,e){}}class Aa{constructor(){Aa.constructor_.apply(this,arguments)}static constructor_(){if(this._childBoundables=new Bs,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this._level=t}}getLevel(){return this._level}addChildBoundable(t){Ts.isTrue(null===this._bounds),this._childBoundables.add(t)}isEmpty(){return this._childBoundables.isEmpty()}getBounds(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds}size(){return this._childBoundables.size()}getChildBoundables(){return this._childBoundables}get interfaces_(){return[ba,ws]}}class Da{static distance(t,e,n,i){const s=n-t,r=i-e;return Math.sqrt(s*s+r*r)}static maximumDistance(t,e){const n=Math.min(t.getMinX(),e.getMinX()),i=Math.min(t.getMinY(),e.getMinY()),s=Math.max(t.getMaxX(),e.getMaxX()),r=Math.max(t.getMaxY(),e.getMaxY());return Da.distance(n,i,s,r)}static minMaxDistance(t,e){const n=t.getMinX(),i=t.getMinY(),s=t.getMaxX(),r=t.getMaxY(),o=e.getMinX(),a=e.getMinY(),l=e.getMaxX(),c=e.getMaxY();let h=Da.maxDistance(n,i,n,r,o,a,o,c);return h=Math.min(h,Da.maxDistance(n,i,n,r,o,a,l,a)),h=Math.min(h,Da.maxDistance(n,i,n,r,l,c,o,c)),h=Math.min(h,Da.maxDistance(n,i,n,r,l,c,l,a)),h=Math.min(h,Da.maxDistance(n,i,s,i,o,a,o,c)),h=Math.min(h,Da.maxDistance(n,i,s,i,o,a,l,a)),h=Math.min(h,Da.maxDistance(n,i,s,i,l,c,o,c)),h=Math.min(h,Da.maxDistance(n,i,s,i,l,c,l,a)),h=Math.min(h,Da.maxDistance(s,r,n,r,o,a,o,c)),h=Math.min(h,Da.maxDistance(s,r,n,r,o,a,l,a)),h=Math.min(h,Da.maxDistance(s,r,n,r,l,c,o,c)),h=Math.min(h,Da.maxDistance(s,r,n,r,l,c,l,a)),h=Math.min(h,Da.maxDistance(s,r,s,i,o,a,o,c)),h=Math.min(h,Da.maxDistance(s,r,s,i,o,a,l,a)),h=Math.min(h,Da.maxDistance(s,r,s,i,l,c,o,c)),h=Math.min(h,Da.maxDistance(s,r,s,i,l,c,l,a)),h}static maxDistance(t,e,n,i,s,r,o,a){let l=Da.distance(t,e,s,r);return l=Math.max(l,Da.distance(t,e,o,a)),l=Math.max(l,Da.distance(n,i,s,r)),l=Math.max(l,Da.distance(n,i,o,a)),l}}class Fa{constructor(){Fa.constructor_.apply(this,arguments)}static constructor_(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;const t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()}static area(t){return t.getBounds().getArea()}static isComposite(t){return t instanceof Aa}maximumDistance(){return Da.maximumDistance(this._boundable1.getBounds(),this._boundable2.getBounds())}expandToQueue(t,e){const n=Fa.isComposite(this._boundable1),i=Fa.isComposite(this._boundable2);if(n&&i)return Fa.area(this._boundable1)>Fa.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,!1,t,e),null):(this.expand(this._boundable2,this._boundable1,!0,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,!1,t,e),null;if(i)return this.expand(this._boundable2,this._boundable1,!0,t,e),null;throw new xs("neither boundable is composite")}isLeaves(){return!(Fa.isComposite(this._boundable1)||Fa.isComposite(this._boundable2))}getBoundable(t){return 0===t?this._boundable1:this._boundable2}getDistance(){return this._distance}distance(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())}compareTo(t){const e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0}expand(t,e,n,i,s){for(let r=t.getChildBoundables().iterator();r.hasNext();){const t=r.next();let o=null;o=n?new Fa(e,t,this._itemDistance):new Fa(t,e,this._itemDistance),o.getDistance()<s&&i.add(o)}}get interfaces_(){return[Ss]}}class Ga{constructor(){Ga.constructor_.apply(this,arguments)}static constructor_(){if(this._root=null,this._built=!1,this._itemBoundables=new Bs,this._nodeCapacity=null,0===arguments.length)Ga.constructor_.call(this,Ga.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const t=arguments[0];Ts.isTrue(t>1,"Node capacity must be greater than 1"),this._nodeCapacity=t}}static compareDoubles(t,e){return t>e?1:t<e?-1:0}queryInternal(){if(ms(arguments[2],So)&&arguments[0]instanceof Object&&arguments[1]instanceof Aa){const t=arguments[0],e=arguments[2],n=arguments[1].getChildBoundables();for(let i=0;i<n.size();i++){const s=n.get(i);this.getIntersectsOp().intersects(s.getBounds(),t)&&(s instanceof Aa?this.queryInternal(t,s,e):s instanceof Ma?e.visitItem(s.getItem()):Ts.shouldNeverReachHere())}}else if(ms(arguments[2],Gs)&&arguments[0]instanceof Object&&arguments[1]instanceof Aa){const t=arguments[0],e=arguments[2],n=arguments[1].getChildBoundables();for(let i=0;i<n.size();i++){const s=n.get(i);this.getIntersectsOp().intersects(s.getBounds(),t)&&(s instanceof Aa?this.queryInternal(t,s,e):s instanceof Ma?e.add(s.getItem()):Ts.shouldNeverReachHere())}}}insert(t,e){Ts.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new Ma(t,e))}boundablesAtLevel(){if(1===arguments.length){const t=arguments[0],e=new Bs;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(Ts.isTrue(t>-2),e.getLevel()===t)return n.add(e),null;for(let i=e.getChildBoundables().iterator();i.hasNext();){const e=i.next();e instanceof Aa?this.boundablesAtLevel(t,e,n):(Ts.isTrue(e instanceof Ma),-1===t&&n.add(e))}return null}}getRoot(){return this.build(),this._root}remove(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];let i=this.removeItem(e,n);if(i)return!0;let s=null;for(let r=e.getChildBoundables().iterator();r.hasNext();){const e=r.next();if(this.getIntersectsOp().intersects(e.getBounds(),t)&&(e instanceof Aa&&(i=this.remove(t,e,n),i))){s=e;break}}return null!==s&&s.getChildBoundables().isEmpty()&&e.getChildBoundables().remove(s),i}}createHigherLevels(t,e){Ts.isTrue(!t.isEmpty());const n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)}depth(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){let t=0;for(let e=arguments[0].getChildBoundables().iterator();e.hasNext();){const n=e.next();if(n instanceof Aa){const e=this.depth(n);e>t&&(t=e)}}return t+1}}createParentBoundables(t,e){Ts.isTrue(!t.isEmpty());const n=new Bs;n.add(this.createNode(e));const i=new Bs(t);wr.sort(i,this.getComparator());for(let t=i.iterator();t.hasNext();){const i=t.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(i)}return n}isEmpty(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()}getNodeCapacity(){return this._nodeCapacity}lastNode(t){return t.get(t.size()-1)}size(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){let t=0;for(let e=arguments[0].getChildBoundables().iterator();e.hasNext();){const n=e.next();n instanceof Aa?t+=this.size(n):n instanceof Ma&&(t+=1)}return t}}removeItem(t,e){let n=null;for(let i=t.getChildBoundables().iterator();i.hasNext();){const t=i.next();t instanceof Ma&&t.getItem()===e&&(n=t)}return null!==n&&(t.getChildBoundables().remove(n),!0)}itemsTree(){if(0===arguments.length){this.build();const t=this.itemsTree(this._root);return null===t?new Bs:t}if(1===arguments.length){const t=arguments[0],e=new Bs;for(let n=t.getChildBoundables().iterator();n.hasNext();){const t=n.next();if(t instanceof Aa){const n=this.itemsTree(t);null!==n&&e.add(n)}else t instanceof Ma?e.add(t.getItem()):Ts.shouldNeverReachHere()}return e.size()<=0?null:e}}query(){if(1===arguments.length){const t=arguments[0];this.build();const e=new Bs;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e),e}if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e)}}build(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0}get interfaces_(){return[ws]}}Ga.IntersectsOp=function(){},Ga.DEFAULT_NODE_CAPACITY=10;class qa{distance(t,e){}}class Ba extends Ga{constructor(){super(),Ba.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)Ba.constructor_.call(this,Ba.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const t=arguments[0];Ga.constructor_.call(this,t)}}static getItems(t){const e=new Array(t.size()).fill(null);let n=0;for(;!t.isEmpty();){const i=t.poll();e[n]=i.getBoundable(0).getItem(),n++}return e}static avg(t,e){return(t+e)/2}static centreY(t){return Ba.avg(t.getMinY(),t.getMaxY())}static centreX(t){return Ba.avg(t.getMinX(),t.getMaxX())}size(){return 0===arguments.length?super.size.call(this):super.size.apply(this,arguments)}insert(){if(!(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof ar))return super.insert.apply(this,arguments);{const t=arguments[0],e=arguments[1];if(t.isNull())return null;super.insert.call(this,t,e)}}getIntersectsOp(){return Ba.intersectsOp}verticalSlices(t,e){const n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),s=t.iterator();for(let t=0;t<e;t++){i[t]=new Bs;let e=0;for(;s.hasNext()&&e<n;){const n=s.next();i[t].add(n),e++}}return i}query(){if(1===arguments.length){const t=arguments[0];return super.query.call(this,t)}if(2===arguments.length){const t=arguments[0],e=arguments[1];super.query.call(this,t,e)}}getComparator(){return Ba.yComparator}createParentBoundablesFromVerticalSlice(t,e){return super.createParentBoundables.call(this,t,e)}remove(){if(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof ar){const t=arguments[0],e=arguments[1];return super.remove.call(this,t,e)}return super.remove.apply(this,arguments)}depth(){return 0===arguments.length?super.depth.call(this):super.depth.apply(this,arguments)}createParentBoundables(t,e){Ts.isTrue(!t.isEmpty());const n=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new Bs(t);wr.sort(i,Ba.xComparator);const s=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(n))));return this.createParentBoundablesFromVerticalSlices(s,e)}nearestNeighbour(){if(1===arguments.length){if(ms(arguments[0],qa)){const t=arguments[0];if(this.isEmpty())return null;const e=new Fa(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof Fa){const t=arguments[0];let e=Ns.POSITIVE_INFINITY,n=null;const i=new va;for(i.add(t);!i.isEmpty()&&e>0;){const t=i.poll(),s=t.getDistance();if(s>=e)break;t.isLeaves()?(e=s,n=t):t.expandToQueue(i,e)}return null===n?null:[n.getBoundable(0).getItem(),n.getBoundable(1).getItem()]}}else{if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.isEmpty()||t.isEmpty())return null;const n=new Fa(this.getRoot(),t.getRoot(),e);return this.nearestNeighbour(n)}if(3===arguments.length){const t=arguments[2],e=new Ma(arguments[0],arguments[1]),n=new Fa(this.getRoot(),e,t);return this.nearestNeighbour(n)[0]}if(4===arguments.length){const t=arguments[2],e=arguments[3],n=new Ma(arguments[0],arguments[1]),i=new Fa(this.getRoot(),n,t);return this.nearestNeighbourK(i,e)}}}isWithinDistance(){if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=Ns.POSITIVE_INFINITY;const i=new va;for(i.add(t);!i.isEmpty();){const t=i.poll(),s=t.getDistance();if(s>e)return!1;if(t.maximumDistance()<=e)return!0;if(t.isLeaves()){if(n=s,n<=e)return!0}else t.expandToQueue(i,n)}return!1}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=new Fa(this.getRoot(),t.getRoot(),e);return this.isWithinDistance(i,n)}}createParentBoundablesFromVerticalSlices(t,e){Ts.isTrue(t.length>0);const n=new Bs;for(let i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n}nearestNeighbourK(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.nearestNeighbourK(t,Ns.POSITIVE_INFINITY,e)}if(3===arguments.length){const t=arguments[0],e=arguments[2];let n=arguments[1];const i=new va;i.add(t);const s=new va;for(;!i.isEmpty()&&n>=0;){const t=i.poll(),r=t.getDistance();if(r>=n)break;if(t.isLeaves())if(s.size()<e)s.add(t);else{s.peek().getDistance()>r&&(s.poll(),s.add(t));n=s.peek().getDistance()}else t.expandToQueue(i,n)}return Ba.getItems(s)}}createNode(t){return new Ya(t)}get interfaces_(){return[Pa,ws]}}class Ya extends Aa{constructor(){super(),Ya.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0];Aa.constructor_.call(this,t)}computeBounds(){let t=null;for(let e=this.getChildBoundables().iterator();e.hasNext();){const n=e.next();null===t?t=new ar(n.getBounds()):t.expandToInclude(n.getBounds())}return t}}Ba.STRtreeNode=Ya,Ba.xComparator=new class{get interfaces_(){return[Os]}compare(t,e){return Ga.compareDoubles(Ba.centreX(t.getBounds()),Ba.centreX(e.getBounds()))}},Ba.yComparator=new class{get interfaces_(){return[Os]}compare(t,e){return Ga.compareDoubles(Ba.centreY(t.getBounds()),Ba.centreY(e.getBounds()))}},Ba.intersectsOp=new class{get interfaces_(){return[IntersectsOp]}intersects(t,e){return t.intersects(e)}},Ba.DEFAULT_NODE_CAPACITY=10;class Ua{constructor(){Ua.constructor_.apply(this,arguments)}static constructor_(){this._overlapSeg1=new Oo,this._overlapSeg2=new Oo}overlap(){if(2===arguments.length);else if(4===arguments.length){const t=arguments[1],e=arguments[2],n=arguments[3];arguments[0].getLineSegment(t,this._overlapSeg1),e.getLineSegment(n,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}}}class za{constructor(){za.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=i}computeOverlaps(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.computeOverlaps(this._start,this._end,t,t._start,t._end,e)}else if(6===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],s=arguments[4],r=arguments[5];if(e-t==1&&s-i==1)return r.overlap(this,t,n,i),null;if(!this.overlaps(t,e,n,i,s))return null;const o=Math.trunc((t+e)/2),a=Math.trunc((i+s)/2);t<o&&(i<a&&this.computeOverlaps(t,o,n,i,a,r),a<s&&this.computeOverlaps(t,o,n,a,s,r)),o<e&&(i<a&&this.computeOverlaps(o,e,n,i,a,r),a<s&&this.computeOverlaps(o,e,n,a,s,r))}}setId(t){this._id=t}select(t,e){this.computeSelect(t,this._start,this._end,e)}getEnvelope(){if(null===this._env){const t=this._pts[this._start],e=this._pts[this._end];this._env=new ar(t,e)}return this._env}overlaps(t,e,n,i,s){return ar.intersects(this._pts[t],this._pts[e],n._pts[i],n._pts[s])}getEndIndex(){return this._end}getStartIndex(){return this._start}getContext(){return this._context}getId(){return this._id}getLineSegment(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]}computeSelect(t,e,n,i){const s=this._pts[e],r=this._pts[n];if(n-e==1)return i.select(this,e),null;if(!t.intersects(s,r))return null;const o=Math.trunc((e+n)/2);e<o&&this.computeSelect(t,e,o,i),o<n&&this.computeSelect(t,o,n,i)}getCoordinates(){const t=new Array(this._end-this._start+1).fill(null);let e=0;for(let n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t}}class ka{static findChainEnd(t,e){let n=e;for(;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;const i=Kr.quadrant(t[n],t[n+1]);let s=e+1;for(;s<t.length;){if(!t[s-1].equals2D(t[s])){if(Kr.quadrant(t[s-1],t[s])!==i)break}s++}return s-1}static getChains(){if(1===arguments.length){const t=arguments[0];return ka.getChains(t,null)}if(2===arguments.length){const t=arguments[0],e=arguments[1],n=new Bs;let i=0;do{const s=ka.findChainEnd(t,i),r=new za(t,i,s,e);n.add(r),i=s}while(i<t.length-1);return n}}}class Xa{constructor(){Xa.constructor_.apply(this,arguments)}static constructor_(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.setSegmentIntersector(t)}}setSegmentIntersector(t){this._segInt=t}get interfaces_(){return[Ta]}}class Va extends Xa{constructor(){super(),Va.constructor_.apply(this,arguments)}static constructor_(){if(this._monoChains=new Bs,this._index=new Ba,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0,0===arguments.length);else if(1===arguments.length){const t=arguments[0];Xa.constructor_.call(this,t)}}getMonotoneChains(){return this._monoChains}getNodedSubstrings(){return La.getNodedSubstrings(this._nodedSegStrings)}getIndex(){return this._index}add(t){for(let e=ka.getChains(t.getCoordinates(),t).iterator();e.hasNext();){const t=e.next();t.setId(this._idCounter++),this._index.insert(t.getEnvelope(),t),this._monoChains.add(t)}}computeNodes(t){this._nodedSegStrings=t;for(let e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()}intersectChains(){const t=new ja(this._segInt);for(let e=this._monoChains.iterator();e.hasNext();){const n=e.next();for(let e=this._index.query(n.getEnvelope()).iterator();e.hasNext();){const i=e.next();if(i.getId()>n.getId()&&(n.computeOverlaps(i,t),this._nOverlaps++),this._segInt.isDone())return null}}}}class ja extends Ua{constructor(){super(),ja.constructor_.apply(this,arguments)}static constructor_(){this._si=null;const t=arguments[0];this._si=t}overlap(){if(4!==arguments.length)return super.overlap.apply(this,arguments);{const t=arguments[1],e=arguments[2],n=arguments[3],i=arguments[0].getContext(),s=e.getContext();this._si.processIntersections(i,t,s,n)}}}Va.SegmentOverlapAction=ja;class Ha{constructor(){Ha.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;const t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new xs("Scale factor must be non-zero");1!==e&&(this._pt=new Ps(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new Ps,this._p1Scaled=new Ps),this.initCorners(this._pt)}intersectsScaled(t,e){const n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),s=Math.min(t.y,e.y),r=Math.max(t.y,e.y),o=this._maxx<n||this._minx>i||this._maxy<s||this._miny>r;if(o)return!1;const a=this.intersectsToleranceSquare(t,e);return Ts.isTrue(!(o&&a),"Found bad envelope test"),a}copyScaled(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)}getSafeEnvelope(){if(null===this._safeEnv){const t=Ha.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new ar(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv}intersectsPixelClosure(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))}intersectsToleranceSquare(t,e){let n=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!i)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))}addSnappedNode(t,e){const n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)}initCorners(t){const e=.5;this._minx=t.x-e,this._maxx=t.x+e,this._miny=t.y-e,this._maxy=t.y+e,this._corner[0]=new Ps(this._maxx,this._maxy),this._corner[1]=new Ps(this._minx,this._maxy),this._corner[2]=new Ps(this._minx,this._miny),this._corner[3]=new Ps(this._maxx,this._miny)}intersects(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))}scale(t){return Math.round(t*this._scaleFactor)}getCoordinate(){return this._originalPt}}Ha.SAFE_ENV_EXPANSION_FACTOR=.75;class Wa{constructor(){Wa.constructor_.apply(this,arguments)}static constructor_(){this.selectedSegment=new Oo}select(){if(1===arguments.length);else if(2===arguments.length){const t=arguments[1];arguments[0].getLineSegment(t,this.selectedSegment),this.select(this.selectedSegment)}}}class Za{constructor(){Za.constructor_.apply(this,arguments)}static constructor_(){this._index=null;const t=arguments[0];this._index=t}snap(){if(1===arguments.length){const t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=t.getSafeEnvelope(),s=new Ja(t,e,n);return this._index.query(i,new class{get interfaces_(){return[So]}visitItem(t){t.select(i,s)}}),s.isNodeAdded()}}}class Ja extends Wa{constructor(){super(),Ja.constructor_.apply(this,arguments)}static constructor_(){this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;const t=arguments[0],e=arguments[1],n=arguments[2];this._hotPixel=t,this._parentEdge=e,this._hotPixelVertexIndex=n}select(){if(!(2===arguments.length&&Number.isInteger(arguments[1])&&arguments[0]instanceof za))return super.select.apply(this,arguments);{const t=arguments[1],e=arguments[0].getContext();if(this._parentEdge===e&&(t===this._hotPixelVertexIndex||t+1===this._hotPixelVertexIndex))return null;this._isNodeAdded|=this._hotPixel.addSnappedNode(e,t)}}isNodeAdded(){return this._isNodeAdded}}Za.HotPixelSnapAction=Ja;class Ka{isDone(){}processIntersections(t,e,n,i){}}class Qa{constructor(){Qa.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._interiorIntersections=null;const t=arguments[0];this._li=t,this._interiorIntersections=new Bs}isDone(){return!1}processIntersections(t,e,n,i){if(t===n&&e===i)return null;const s=t.getCoordinates()[e],r=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this._li.computeIntersection(s,r,o,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(let t=0;t<this._li.getIntersectionNum();t++)this._interiorIntersections.add(this._li.getIntersection(t));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)}}getInteriorIntersections(){return this._interiorIntersections}get interfaces_(){return[Ka]}}class $a{constructor(){$a.constructor_.apply(this,arguments)}static constructor_(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;const t=arguments[0];this._pm=t,this._li=new ho,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()}checkCorrectness(t){const e=La.getNodedSubstrings(t),n=new Oa(e);try{n.checkValid()}catch(t){if(!(t instanceof Es))throw t;t.printStackTrace()}}getNodedSubstrings(){return La.getNodedSubstrings(this._nodedSegStrings)}snapRound(t,e){const n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)}findInteriorIntersections(t,e){const n=new Qa(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()}computeVertexSnaps(){if(ms(arguments[0],Ds)){for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.computeVertexSnaps(e)}}else if(arguments[0]instanceof La){const t=arguments[0],e=t.getCoordinates();for(let n=0;n<e.length;n++){const i=new Ha(e[n],this._scaleFactor,this._li);this._pointSnapper.snap(i,t,n)&&t.addIntersection(e[n],n)}}}computeNodes(t){this._nodedSegStrings=t,this._noder=new Va,this._pointSnapper=new Za(this._noder.getIndex()),this.snapRound(t,this._li)}computeIntersectionSnaps(t){for(let e=t.iterator();e.hasNext();){const t=e.next(),n=new Ha(t,this._scaleFactor,this._li);this._pointSnapper.snap(n)}}get interfaces_(){return[Ta]}}class tl extends Es{constructor(t){super(t),this.name=Object.keys({EmptyStackException:tl})[0]}}class el extends Gs{constructor(){super(),this.array=[]}add(t){return this.array.push(t),!0}get(t){if(t<0||t>=this.size())throw new Fs;return this.array[t]}push(t){return this.array.push(t),t}pop(){if(0===this.array.length)throw new tl;return this.array.pop()}peek(){if(0===this.array.length)throw new tl;return this.array[this.array.length-1]}empty(){return 0===this.array.length}isEmpty(){return this.empty()}search(t){return this.array.indexOf(t)}size(){return this.array.length}toArray(){return this.array.slice()}}class nl{constructor(){nl.constructor_.apply(this,arguments)}static constructor_(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null}getCoordinate(){return this._minCoord}getRightmostSide(t,e){let n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n}findRightmostEdgeAtVertex(){const t=this._minDe.getEdge().getCoordinates();Ts.isTrue(this._minIndex>0&&this._minIndex<t.length,"rightmost point expected to be interior vertex of edge");const e=t[this._minIndex-1],n=t[this._minIndex+1],i=Ar.index(this._minCoord,n,e);let s=!1;(e.y<this._minCoord.y&&n.y<this._minCoord.y&&i===Ar.COUNTERCLOCKWISE||e.y>this._minCoord.y&&n.y>this._minCoord.y&&i===Ar.CLOCKWISE)&&(s=!0),s&&(this._minIndex=this._minIndex-1)}getRightmostSideOfSegment(t,e){const n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;let i=Nr.LEFT;return n[e].y<n[e+1].y&&(i=Nr.RIGHT),i}getEdge(){return this._orientedDe}checkForRightmostCoordinate(t){const e=t.getEdge().getCoordinates();for(let n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])}findRightmostEdgeAtNode(){const t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)}findEdge(t){for(let e=t.iterator();e.hasNext();){const t=e.next();t.isForward()&&this.checkForRightmostCoordinate(t)}Ts.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Nr.LEFT&&(this._orientedDe=this._minDe.getSym())}}class il{constructor(){this.array=[]}addLast(t){this.array.push(t)}removeFirst(){return this.array.shift()}isEmpty(){return 0===this.array.length}}class sl{constructor(){sl.constructor_.apply(this,arguments)}static constructor_(){this._finder=null,this._dirEdgeList=new Bs,this._nodes=new Bs,this._rightMostCoord=null,this._env=null,this._finder=new nl}clearVisitedEdges(){for(let t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}}compareTo(t){const e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0}getEnvelope(){if(null===this._env){const t=new ar;for(let e=this._dirEdgeList.iterator();e.hasNext();){const n=e.next().getEdge().getCoordinates();for(let e=0;e<n.length-1;e++)t.expandToInclude(n[e])}this._env=t}return this._env}addReachable(t){const e=new el;for(e.add(t);!e.empty();){const t=e.pop();this.add(t,e)}}copySymDepths(t){const e=t.getSym();e.setDepth(Nr.LEFT,t.getDepth(Nr.RIGHT)),e.setDepth(Nr.RIGHT,t.getDepth(Nr.LEFT))}add(t,e){t.setVisited(!0),this._nodes.add(t);for(let n=t.getEdges().iterator();n.hasNext();){const t=n.next();this._dirEdgeList.add(t);const i=t.getSym().getNode();i.isVisited()||e.push(i)}}getRightmostCoordinate(){return this._rightMostCoord}computeNodeDepth(t){let e=null;for(let n=t.getEdges().iterator();n.hasNext();){const t=n.next();if(t.isVisited()||t.getSym().isVisited()){e=t;break}}if(null===e)throw new to("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(e);for(let e=t.getEdges().iterator();e.hasNext();){const t=e.next();t.setVisited(!0),this.copySymDepths(t)}}computeDepth(t){this.clearVisitedEdges();const e=this._finder.getEdge();e.getNode(),e.getLabel(),e.setEdgeDepths(Nr.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)}create(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()}findResultEdges(){for(let t=this._dirEdgeList.iterator();t.hasNext();){const e=t.next();e.getDepth(Nr.RIGHT)>=1&&e.getDepth(Nr.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}}computeDepths(t){const e=new Js,n=new il,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){const t=n.removeFirst();e.add(t),this.computeNodeDepth(t);for(let i=t.getEdges().iterator();i.hasNext();){const t=i.next().getSym();if(t.isVisited())continue;const s=t.getNode();e.contains(s)||(n.addLast(s),e.add(s))}}}getNodes(){return this._nodes}getDirectedEdges(){return this._dirEdgeList}get interfaces_(){return[Ss]}}class rl{constructor(){rl.constructor_.apply(this,arguments)}static constructor_(){this._inputLine=null,this._distanceTol=null,this._isDeleted=null,this._angleOrientation=Ar.COUNTERCLOCKWISE;const t=arguments[0];this._inputLine=t}static simplify(t,e){return new rl(t).simplify(e)}isDeletable(t,e,n,i){const s=this._inputLine[t],r=this._inputLine[e],o=this._inputLine[n];return!!this.isConcave(s,r,o)&&(!!this.isShallow(s,r,o,i)&&this.isShallowSampled(s,r,t,n,i))}deleteShallowConcavities(){let t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),i=!1;for(;n<this._inputLine.length;){let s=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=rl.DELETE,s=!0,i=!0),t=s?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i}isShallowConcavity(t,e,n,i){if(!(Ar.index(t,e,n)===this._angleOrientation))return!1;return ao.pointToSegment(e,t,n)<i}isShallowSampled(t,e,n,i,s){let r=Math.trunc((i-n)/rl.NUM_PTS_TO_CHECK);r<=0&&(r=1);for(let o=n;o<i;o+=r)if(!this.isShallow(t,e,this._inputLine[o],s))return!1;return!0}isConcave(t,e,n){return Ar.index(t,e,n)===this._angleOrientation}simplify(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=Ar.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);let e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()}findNextNonDeletedIndex(t){let e=t+1;for(;e<this._inputLine.length&&this._isDeleted[e]===rl.DELETE;)e++;return e}isShallow(t,e,n,i){return ao.pointToSegment(e,t,n)<i}collapseLine(){const t=new Us;for(let e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==rl.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()}}rl.INIT=0,rl.DELETE=1,rl.KEEP=1,rl.NUM_PTS_TO_CHECK=10;class ol{constructor(){ol.constructor_.apply(this,arguments)}static constructor_(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new Bs}getCoordinates(){return this._ptList.toArray(ol.COORDINATE_ARRAY_TYPE)}setPrecisionModel(t){this._precisionModel=t}addPt(t){const e=new Ps(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)}reverse(){}addPts(t,e){if(e)for(let e=0;e<t.length;e++)this.addPt(t[e]);else for(let e=t.length-1;e>=0;e--)this.addPt(t[e])}isRedundant(t){if(this._ptList.size()<1)return!1;const e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance}toString(){return(new $o).createLineString(this.getCoordinates()).toString()}closeRing(){if(this._ptList.size()<1)return null;const t=new Ps(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)}setMinimumVertexDistance(t){this._minimimVertexDistance=t}}ol.COORDINATE_ARRAY_TYPE=new Array(0).fill(null);class al{static toDegrees(t){return 180*t/Math.PI}static isAcute(t,e,n){const i=t.x-e.x,s=t.y-e.y;return i*(n.x-e.x)+s*(n.y-e.y)>0}static isObtuse(t,e,n){const i=t.x-e.x,s=t.y-e.y;return i*(n.x-e.x)+s*(n.y-e.y)<0}static interiorAngle(t,e,n){const i=al.angle(e,t),s=al.angle(e,n);return Math.abs(s-i)}static normalizePositive(t){if(t<0){for(;t<0;)t+=al.PI_TIMES_2;t>=al.PI_TIMES_2&&(t=0)}else{for(;t>=al.PI_TIMES_2;)t-=al.PI_TIMES_2;t<0&&(t=0)}return t}static angleBetween(t,e,n){const i=al.angle(e,t),s=al.angle(e,n);return al.diff(i,s)}static diff(t,e){let n=null;return n=t<e?e-t:t-e,n>Math.PI&&(n=2*Math.PI-n),n}static toRadians(t){return t*Math.PI/180}static normalize(t){for(;t>Math.PI;)t-=al.PI_TIMES_2;for(;t<=-Math.PI;)t+=al.PI_TIMES_2;return t}static angle(){if(1===arguments.length){const t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){const t=arguments[0],e=arguments[1],n=e.x-t.x,i=e.y-t.y;return Math.atan2(i,n)}}static getTurn(t,e){const n=Math.sin(e-t);return n>0?al.COUNTERCLOCKWISE:n<0?al.CLOCKWISE:al.NONE}static angleBetweenOriented(t,e,n){const i=al.angle(e,t),s=al.angle(e,n)-i;return s<=-Math.PI?s+al.PI_TIMES_2:s>Math.PI?s-al.PI_TIMES_2:s}}al.PI_TIMES_2=2*Math.PI,al.PI_OVER_2=Math.PI/2,al.PI_OVER_4=Math.PI/4,al.COUNTERCLOCKWISE=Ar.COUNTERCLOCKWISE,al.CLOCKWISE=Ar.CLOCKWISE,al.NONE=Ar.COLLINEAR;class ll{constructor(){ll.constructor_.apply(this,arguments)}static constructor_(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new Oo,this._seg1=new Oo,this._offset0=new Oo,this._offset1=new Oo,this._side=0,this._hasNarrowConcaveAngle=!1;const t=arguments[0],e=arguments[1],n=arguments[2];this._precisionModel=t,this._bufParams=e,this._li=new ho,this._filletAngleQuantum=Math.PI/2/e.getQuadrantSegments(),e.getQuadrantSegments()>=8&&e.getJoinStyle()===_s.JOIN_ROUND&&(this._closingSegLengthFactor=ll.MAX_CLOSING_SEG_LEN_FACTOR),this.init(n)}getCoordinates(){return this._segList.getCoordinates()}addMitreJoin(t,e,n,i){const s=oo.intersection(e.p0,e.p1,n.p0,n.p1);if(null!==s){if((i<=0?1:s.distance(t)/Math.abs(i))<=this._bufParams.getMitreLimit())return this._segList.addPt(s),null}this.addLimitedMitreJoin(e,n,i,this._bufParams.getMitreLimit())}addLastSegment(){this._segList.addPt(this._offset1.p1)}initSideSegments(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)}addLimitedMitreJoin(t,e,n,i){const s=this._seg0.p1,r=al.angle(s,this._seg0.p0),o=al.angleBetweenOriented(this._seg0.p0,s,this._seg1.p1)/2,a=al.normalize(r+o),l=al.normalize(a+Math.PI),c=i*n,h=n-c*Math.abs(Math.sin(o)),u=s.x+c*Math.cos(l),g=s.y+c*Math.sin(l),d=new Ps(u,g),f=new Oo(s,d),p=f.pointAlongOffset(1,h),_=f.pointAlongOffset(1,-h);this._side===Nr.LEFT?(this._segList.addPt(p),this._segList.addPt(_)):(this._segList.addPt(_),this._segList.addPt(p))}addDirectedFillet(t,e,n,i,s){const r=i===Ar.CLOCKWISE?-1:1,o=Math.abs(e-n),a=Math.trunc(o/this._filletAngleQuantum+.5);if(a<1)return null;const l=o/a,c=new Ps;for(let n=0;n<a;n++){const i=e+r*n*l;c.x=t.x+s*Math.cos(i),c.y=t.y+s*Math.sin(i),this._segList.addPt(c)}}computeOffsetSegment(t,e,n,i){const s=e===Nr.LEFT?1:-1,r=t.p1.x-t.p0.x,o=t.p1.y-t.p0.y,a=Math.sqrt(r*r+o*o),l=s*n*r/a,c=s*n*o/a;i.p0.x=t.p0.x-c,i.p0.y=t.p0.y+l,i.p1.x=t.p1.x-c,i.p1.y=t.p1.y+l}addInsideTurn(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*ll.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){const t=new Ps((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(t);const e=new Ps((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(e)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}}createCircle(t){const e=new Ps(t.x+this._distance,t.y);this._segList.addPt(e),this.addDirectedFillet(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()}addBevelJoin(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)}init(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new ol,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*ll.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)}addCollinear(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===_s.JOIN_BEVEL||this._bufParams.getJoinStyle()===_s.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,Ar.CLOCKWISE,this._distance))}addNextSegment(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;const n=Ar.index(this._s0,this._s1,this._s2),i=n===Ar.CLOCKWISE&&this._side===Nr.LEFT||n===Ar.COUNTERCLOCKWISE&&this._side===Nr.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)}addLineEndCap(t,e){const n=new Oo(t,e),i=new Oo;this.computeOffsetSegment(n,Nr.LEFT,this._distance,i);const s=new Oo;this.computeOffsetSegment(n,Nr.RIGHT,this._distance,s);const r=e.x-t.x,o=e.y-t.y,a=Math.atan2(o,r);switch(this._bufParams.getEndCapStyle()){case _s.CAP_ROUND:this._segList.addPt(i.p1),this.addDirectedFillet(e,a+Math.PI/2,a-Math.PI/2,Ar.CLOCKWISE,this._distance),this._segList.addPt(s.p1);break;case _s.CAP_FLAT:this._segList.addPt(i.p1),this._segList.addPt(s.p1);break;case _s.CAP_SQUARE:const t=new Ps;t.x=Math.abs(this._distance)*Math.cos(a),t.y=Math.abs(this._distance)*Math.sin(a);const n=new Ps(i.p1.x+t.x,i.p1.y+t.y),r=new Ps(s.p1.x+t.x,s.p1.y+t.y);this._segList.addPt(n),this._segList.addPt(r)}}addOutsideTurn(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*ll.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===_s.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===_s.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))}createSquare(t){this._segList.addPt(new Ps(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new Ps(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new Ps(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new Ps(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()}addSegments(t,e){this._segList.addPts(t,e)}addFirstSegment(){this._segList.addPt(this._offset1.p0)}addCornerFillet(t,e,n,i,s){const r=e.x-t.x,o=e.y-t.y;let a=Math.atan2(o,r);const l=n.x-t.x,c=n.y-t.y,h=Math.atan2(c,l);i===Ar.CLOCKWISE?a<=h&&(a+=2*Math.PI):a>=h&&(a-=2*Math.PI),this._segList.addPt(e),this.addDirectedFillet(t,a,h,i,s),this._segList.addPt(n)}closeRing(){this._segList.closeRing()}hasNarrowConcaveAngle(){return this._hasNarrowConcaveAngle}}ll.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,ll.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,ll.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,ll.MAX_CLOSING_SEG_LEN_FACTOR=80;class cl{constructor(){cl.constructor_.apply(this,arguments)}static constructor_(){this._distance=0,this._precisionModel=null,this._bufParams=null;const t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e}static copyCoordinates(t){const e=new Array(t.length).fill(null);for(let n=0;n<e.length;n++)e[n]=new Ps(t[n]);return e}getOffsetCurve(t,e){if(this._distance=e,0===e)return null;const n=e<0,i=Math.abs(e),s=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],s):this.computeOffsetCurve(t,n,s);const r=s.getCoordinates();return n&&Xr.reverse(r),r}computeSingleSidedBufferCurve(t,e,n){const i=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);const e=rl.simplify(t,-i),s=e.length-1;n.initSideSegments(e[s],e[s-1],Nr.LEFT),n.addFirstSegment();for(let t=s-2;t>=0;t--)n.addNextSegment(e[t],!0)}else{n.addSegments(t,!1);const e=rl.simplify(t,i),s=e.length-1;n.initSideSegments(e[0],e[1],Nr.LEFT),n.addFirstSegment();for(let t=2;t<=s;t++)n.addNextSegment(e[t],!0)}n.addLastSegment(),n.closeRing()}computeRingBufferCurve(t,e,n){let i=this.simplifyTolerance(this._distance);e===Nr.RIGHT&&(i=-i);const s=rl.simplify(t,i),r=s.length-1;n.initSideSegments(s[r-1],s[0],e);for(let t=1;t<=r;t++){const e=1!==t;n.addNextSegment(s[t],e)}n.closeRing()}computeLineBufferCurve(t,e){const n=this.simplifyTolerance(this._distance),i=rl.simplify(t,n),s=i.length-1;e.initSideSegments(i[0],i[1],Nr.LEFT);for(let t=2;t<=s;t++)e.addNextSegment(i[t],!0);e.addLastSegment(),e.addLineEndCap(i[s-1],i[s]);const r=rl.simplify(t,-n),o=r.length-1;e.initSideSegments(r[o],r[o-1],Nr.LEFT);for(let t=o-2;t>=0;t--)e.addNextSegment(r[t],!0);e.addLastSegment(),e.addLineEndCap(r[1],r[0]),e.closeRing()}computePointCurve(t,e){switch(this._bufParams.getEndCapStyle()){case _s.CAP_ROUND:e.createCircle(t);break;case _s.CAP_SQUARE:e.createSquare(t)}}getLineCurve(t,e){if(this._distance=e,this.isLineOffsetEmpty(e))return null;const n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){const n=e<0;this.computeSingleSidedBufferCurve(t,n,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()}getBufferParameters(){return this._bufParams}simplifyTolerance(t){return t*this._bufParams.getSimplifyFactor()}getRingCurve(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return cl.copyCoordinates(t);const i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()}computeOffsetCurve(t,e,n){const i=this.simplifyTolerance(this._distance);if(e){const e=rl.simplify(t,-i),s=e.length-1;n.initSideSegments(e[s],e[s-1],Nr.LEFT),n.addFirstSegment();for(let t=s-2;t>=0;t--)n.addNextSegment(e[t],!0)}else{const e=rl.simplify(t,i),s=e.length-1;n.initSideSegments(e[0],e[1],Nr.LEFT),n.addFirstSegment();for(let t=2;t<=s;t++)n.addNextSegment(e[t],!0)}n.addLastSegment()}isLineOffsetEmpty(t){return 0===t||t<0&&!this._bufParams.isSingleSided()}getSegGen(t){return new ll(this._precisionModel,this._bufParams,t)}}class hl{constructor(){hl.constructor_.apply(this,arguments)}static constructor_(){if(this._startDe=null,this._maxNodeDegree=-1,this._edges=new Bs,this._pts=new Bs,this._label=new Gr(Dr.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new Bs,this._geometryFactory=null,0===arguments.length);else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()}}computeRing(){if(null!==this._ring)return null;const t=new Array(this._pts.size()).fill(null);for(let e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=Ar.isCCW(this._ring.getCoordinates())}isIsolated(){return 1===this._label.getGeometryCount()}computePoints(t){this._startDe=t;let e=t,n=!0;do{if(null===e)throw new to("Found null DirectedEdge");if(e.getEdgeRing()===this)throw new to("Directed Edge visited twice during ring-building at "+e.getCoordinate());this._edges.add(e);const t=e.getLabel();Ts.isTrue(t.isArea()),this.mergeLabel(t),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)}getLinearRing(){return this._ring}getCoordinate(t){return this._pts.get(t)}computeMaxNodeDegree(){this._maxNodeDegree=0;let t=this._startDe;do{const e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2}addPoints(t,e,n){const i=t.getCoordinates();if(e){let t=1;n&&(t=0);for(let e=t;e<i.length;e++)this._pts.add(i[e])}else{let t=i.length-2;n&&(t=i.length-1);for(let e=t;e>=0;e--)this._pts.add(i[e])}}containsPoint(t){const e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!go.isInRing(t,e.getCoordinates()))return!1;for(let e=this._holes.iterator();e.hasNext();){if(e.next().containsPoint(t))return!1}return!0}getMaxNodeDegree(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree}setShell(t){this._shell=t,null!==t&&t.addHole(this)}toPolygon(t){const e=new Array(this._holes.size()).fill(null);for(let t=0;t<this._holes.size();t++)e[t]=this._holes.get(t).getLinearRing();return t.createPolygon(this.getLinearRing(),e)}isHole(){return this._isHole}setInResult(){let t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)}addHole(t){this._holes.add(t)}isShell(){return null===this._shell}getLabel(){return this._label}getEdges(){return this._edges}getShell(){return this._shell}mergeLabel(){if(1===arguments.length){const t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){const t=arguments[1],e=arguments[0].getLocation(t,Nr.RIGHT);if(e===Dr.NONE)return null;if(this._label.getLocation(t)===Dr.NONE)return this._label.setLocation(t,e),null}}}class ul extends hl{constructor(){super(),ul.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];hl.constructor_.call(this,t,e)}getNext(t){return t.getNextMin()}setEdgeRing(t,e){t.setMinEdgeRing(e)}}class gl extends hl{constructor(){super(),gl.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];hl.constructor_.call(this,t,e)}linkDirectedEdgesForMinimalEdgeRings(){let t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)}buildMinimalRings(){const t=new Bs;let e=this._startDe;do{if(null===e.getMinEdgeRing()){const n=new ul(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t}getNext(t){return t.getNext()}setEdgeRing(t,e){t.setEdgeRing(e)}}class dl{constructor(){dl.constructor_.apply(this,arguments)}static constructor_(){this._geometryFactory=null,this._shellList=new Bs;const t=arguments[0];this._geometryFactory=t}static findEdgeRingContaining(t,e){const n=t.getLinearRing(),i=n.getEnvelopeInternal();let s=n.getCoordinateN(0),r=null,o=null;for(let t=e.iterator();t.hasNext();){const e=t.next(),a=e.getLinearRing(),l=a.getEnvelopeInternal();if(l.equals(i))continue;if(!l.contains(i))continue;s=Xr.ptNotInList(n.getCoordinates(),a.getCoordinates());let c=!1;go.isInRing(s,a.getCoordinates())&&(c=!0),c&&(null===r||o.contains(l))&&(r=e,o=r.getLinearRing().getEnvelopeInternal())}return r}sortShellsAndHoles(t,e,n){for(let i=t.iterator();i.hasNext();){const t=i.next();t.isHole()?n.add(t):e.add(t)}}computePolygons(t){const e=new Bs;for(let n=t.iterator();n.hasNext();){const t=n.next().toPolygon(this._geometryFactory);e.add(t)}return e}placeFreeHoles(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next();if(null===e.getShell()){const n=dl.findEdgeRingContaining(e,t);if(null===n)throw new to("unable to assign hole to a shell",e.getCoordinate(0));e.setShell(n)}}}buildMinimalEdgeRings(t,e,n){const i=new Bs;for(let s=t.iterator();s.hasNext();){const t=s.next();if(t.getMaxNodeDegree()>2){t.linkDirectedEdgesForMinimalEdgeRings();const i=t.buildMinimalRings(),s=this.findShell(i);null!==s?(this.placePolygonHoles(s,i),e.add(s)):n.addAll(i)}else i.add(t)}return i}buildMaximalEdgeRings(t){const e=new Bs;for(let n=t.iterator();n.hasNext();){const t=n.next();if(t.isInResult()&&t.getLabel().isArea()&&null===t.getEdgeRing()){const n=new gl(t,this._geometryFactory);e.add(n),n.setInResult()}}return e}placePolygonHoles(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next();e.isHole()&&e.setShell(t)}}getPolygons(){return this.computePolygons(this._shellList)}findShell(t){let e=0,n=null;for(let i=t.iterator();i.hasNext();){const t=i.next();t.isHole()||(n=t,e++)}return Ts.isTrue(e<=1,"found two shells in MinimalEdgeRing list"),n}add(){if(1===arguments.length){const t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){const t=arguments[0],e=arguments[1];no.linkResultDirectedEdges(e);const n=this.buildMaximalEdgeRings(t),i=new Bs,s=this.buildMinimalEdgeRings(n,this._shellList,i);this.sortShellsAndHoles(s,this._shellList,i),this.placeFreeHoles(this._shellList,i)}}}class fl{constructor(){fl.constructor_.apply(this,arguments)}static constructor_(){this._subgraphs=null,this._seg=new Oo;const t=arguments[0];this._subgraphs=t}findStabbedSegments(){if(1===arguments.length){const t=arguments[0],e=new Bs;for(let n=this._subgraphs.iterator();n.hasNext();){const i=n.next(),s=i.getEnvelope();t.y<s.getMinY()||t.y>s.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(ms(arguments[2],Gs)&&arguments[0]instanceof Ps&&arguments[1]instanceof eo){const t=arguments[0],e=arguments[1],n=arguments[2],i=e.getEdge().getCoordinates();for(let s=0;s<i.length-1;s++){this._seg.p0=i[s],this._seg.p1=i[s+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(Math.max(this._seg.p0.x,this._seg.p1.x)<t.x)continue;if(this._seg.isHorizontal())continue;if(t.y<this._seg.p0.y||t.y>this._seg.p1.y)continue;if(Ar.index(this._seg.p0,this._seg.p1,t)===Ar.RIGHT)continue;let r=e.getDepth(Nr.LEFT);this._seg.p0.equals(i[s])||(r=e.getDepth(Nr.RIGHT));const o=new pl(this._seg,r);n.add(o)}}else if(ms(arguments[2],Gs)&&arguments[0]instanceof Ps&&ms(arguments[1],Gs)){const t=arguments[0],e=arguments[2];for(let n=arguments[1].iterator();n.hasNext();){const i=n.next();i.isForward()&&this.findStabbedSegments(t,i,e)}}}getDepth(t){const e=this.findStabbedSegments(t);if(0===e.size())return 0;return wr.min(e)._leftDepth}}class pl{constructor(){pl.constructor_.apply(this,arguments)}static constructor_(){this._upwardSeg=null,this._leftDepth=null;const t=arguments[0],e=arguments[1];this._upwardSeg=new Oo(t),this._leftDepth=e}compareX(t,e){const n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)}toString(){return this._upwardSeg.toString()}compareTo(t){const e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;let n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg),0!==n?n:this._upwardSeg.compareTo(e._upwardSeg))}get interfaces_(){return[Ss]}}fl.DepthSegment=pl;class _l extends Es{constructor(){super(),_l.constructor_.apply(this,arguments)}static constructor_(){Es.constructor_.call(this,"Projective point not representable on the Cartesian plane.")}}class ml{constructor(){ml.constructor_.apply(this,arguments)}static constructor_(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){const t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];this.x=t,this.y=e,this.w=1}else if(arguments[0]instanceof ml&&arguments[1]instanceof ml){const t=arguments[0],e=arguments[1];this.x=t.y*e.w-e.y*t.w,this.y=e.x*t.w-t.x*e.w,this.w=t.x*e.y-e.x*t.y}else if(arguments[0]instanceof Ps&&arguments[1]instanceof Ps){const t=arguments[0],e=arguments[1];this.x=t.y-e.y,this.y=e.x-t.x,this.w=t.x*e.y-e.x*t.y}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.x=t,this.y=e,this.w=n}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],s=t.y-e.y,r=e.x-t.x,o=t.x*e.y-e.x*t.y,a=n.y-i.y,l=i.x-n.x,c=n.x*i.y-i.x*n.y;this.x=r*c-l*o,this.y=a*o-s*c,this.w=s*l-a*r}}getCoordinate(){const t=new Ps;return t.x=this.getX(),t.y=this.getY(),t}getX(){const t=this.x/this.w;if(Ns.isNaN(t)||Ns.isInfinite(t))throw new _l;return t}getY(){const t=this.y/this.w;if(Ns.isNaN(t)||Ns.isInfinite(t))throw new _l;return t}}class yl{constructor(){yl.constructor_.apply(this,arguments)}static constructor_(){this.p0=null,this.p1=null,this.p2=null;const t=arguments[0],e=arguments[1],n=arguments[2];this.p0=t,this.p1=e,this.p2=n}static isAcute(t,e,n){return!!al.isAcute(t,e,n)&&(!!al.isAcute(e,n,t)&&!!al.isAcute(n,t,e))}static circumcentre(t,e,n){const i=n.x,s=n.y,r=t.x-i,o=t.y-s,a=e.x-i,l=e.y-s,c=2*yl.det(r,o,a,l),h=yl.det(o,r*r+o*o,l,a*a+l*l),u=yl.det(r,r*r+o*o,a,a*a+l*l);return new Ps(i-h/c,s+u/c)}static perpendicularBisector(t,e){const n=e.x-t.x,i=e.y-t.y,s=new ml(t.x+n/2,t.y+i/2,1),r=new ml(t.x-i+n/2,t.y+n+i/2,1);return new ml(s,r)}static angleBisector(t,e,n){const i=e.distance(t),s=i/(i+e.distance(n)),r=n.x-t.x,o=n.y-t.y;return new Ps(t.x+s*r,t.y+s*o)}static inCentre(t,e,n){const i=e.distance(n),s=t.distance(n),r=t.distance(e),o=i+s+r,a=(i*t.x+s*e.x+r*n.x)/o,l=(i*t.y+s*e.y+r*n.y)/o;return new Ps(a,l)}static area(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)}static signedArea(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2}static det(t,e,n,i){return t*i-e*n}static interpolateZ(t,e,n,i){const s=e.x,r=e.y,o=n.x-s,a=i.x-s,l=n.y-r,c=i.y-r,h=o*c-a*l,u=t.x-s,g=t.y-r,d=(c*u-a*g)/h,f=(-l*u+o*g)/h;return e.getZ()+d*(n.getZ()-e.getZ())+f*(i.getZ()-e.getZ())}static longestSideLength(t,e,n){const i=t.distance(e),s=e.distance(n),r=n.distance(t);let o=i;return s>o&&(o=s),r>o&&(o=r),o}static circumcentreDD(t,e,n){const i=Mr.valueOf(t.x).subtract(n.x),s=Mr.valueOf(t.y).subtract(n.y),r=Mr.valueOf(e.x).subtract(n.x),o=Mr.valueOf(e.y).subtract(n.y),a=Mr.determinant(i,s,r,o).multiply(2),l=i.sqr().add(s.sqr()),c=r.sqr().add(o.sqr()),h=Mr.determinant(s,l,o,c),u=Mr.determinant(i,l,r,c),g=Mr.valueOf(n.x).subtract(h.divide(a)).doubleValue(),d=Mr.valueOf(n.y).add(u.divide(a)).doubleValue();return new Ps(g,d)}static area3D(t,e,n){const i=e.x-t.x,s=e.y-t.y,r=e.getZ()-t.getZ(),o=n.x-t.x,a=n.y-t.y,l=n.getZ()-t.getZ(),c=s*l-r*a,h=r*o-i*l,u=i*a-s*o,g=c*c+h*h+u*u;return Math.sqrt(g)/2}static centroid(t,e,n){const i=(t.x+e.x+n.x)/3,s=(t.y+e.y+n.y)/3;return new Ps(i,s)}interpolateZ(t){if(null===t)throw new xs("Supplied point is null.");return yl.interpolateZ(t,this.p0,this.p1,this.p2)}longestSideLength(){return yl.longestSideLength(this.p0,this.p1,this.p2)}isAcute(){return yl.isAcute(this.p0,this.p1,this.p2)}circumcentre(){return yl.circumcentre(this.p0,this.p1,this.p2)}inCentre(){return yl.inCentre(this.p0,this.p1,this.p2)}area(){return yl.area(this.p0,this.p1,this.p2)}signedArea(){return yl.signedArea(this.p0,this.p1,this.p2)}area3D(){return yl.area3D(this.p0,this.p1,this.p2)}centroid(){return yl.centroid(this.p0,this.p1,this.p2)}}class El{constructor(){El.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new Bs;const t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n}addRingSide(t,e,n,i,s){if(0===e&&t.length<Ho.MINIMUM_VALID_SIZE)return null;let r=i,o=s;t.length>=Ho.MINIMUM_VALID_SIZE&&Ar.isCCW(t)&&(r=s,o=i,n=Nr.opposite(n));const a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,r,o)}addRingBothSides(t,e){this.addRingSide(t,e,Nr.LEFT,Dr.EXTERIOR,Dr.INTERIOR),this.addRingSide(t,e,Nr.RIGHT,Dr.INTERIOR,Dr.EXTERIOR)}addPoint(t){if(this._distance<=0)return null;const e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,Dr.EXTERIOR,Dr.INTERIOR)}addPolygon(t){let e=this._distance,n=Nr.LEFT;this._distance<0&&(e=-this._distance,n=Nr.RIGHT);const i=t.getExteriorRing(),s=Xr.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&s.length<3)return null;this.addRingSide(s,e,n,Dr.EXTERIOR,Dr.INTERIOR);for(let i=0;i<t.getNumInteriorRing();i++){const s=t.getInteriorRingN(i),r=Xr.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addRingSide(r,e,Nr.opposite(n),Dr.INTERIOR,Dr.EXTERIOR)}}isTriangleErodedCompletely(t,e){const n=new yl(t[0],t[1],t[2]),i=n.inCentre();return ao.pointToSegment(i,n.p0,n.p1)<Math.abs(e)}addLineString(t){if(this._curveBuilder.isLineOffsetEmpty(this._distance))return null;const e=Xr.removeRepeatedPoints(t.getCoordinates());if(Xr.isRing(e)&&!this._curveBuilder.getBufferParameters().isSingleSided())this.addRingBothSides(e,this._distance);else{const t=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(t,Dr.EXTERIOR,Dr.INTERIOR)}}add(t){if(t.isEmpty())return null;if(t instanceof ro)this.addPolygon(t);else if(t instanceof jo)this.addLineString(t);else if(t instanceof Io)this.addPoint(t);else if(t instanceof xr)this.addCollection(t);else if(t instanceof Hr)this.addCollection(t);else if(t instanceof Eo)this.addCollection(t);else{if(!(t instanceof yr))throw new js(t.getGeometryType());this.addCollection(t)}}addCurve(t,e,n){if(null===t||t.length<2)return null;const i=new La(t,new Gr(0,Dr.BOUNDARY,e,n));this._curveList.add(i)}getCurves(){return this.add(this._inputGeom),this._curveList}isErodedCompletely(t,e){const n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);const i=t.getEnvelopeInternal(),s=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>s}addCollection(t){for(let e=0;e<t.getNumGeometries();e++){const n=t.getGeometryN(e);this.add(n)}}}class xl{constructor(){xl.constructor_.apply(this,arguments)}static constructor_(){this._geom=null;const t=arguments[0];this._geom=t}static locatePointInPolygon(t,e){if(e.isEmpty())return Dr.EXTERIOR;const n=e.getExteriorRing(),i=xl.locatePointInRing(t,n);if(i!==Dr.INTERIOR)return i;for(let n=0;n<e.getNumInteriorRing();n++){const i=e.getInteriorRingN(n),s=xl.locatePointInRing(t,i);if(s===Dr.BOUNDARY)return Dr.BOUNDARY;if(s===Dr.INTERIOR)return Dr.EXTERIOR}return Dr.INTERIOR}static locatePointInRing(t,e){return e.getEnvelopeInternal().intersects(t)?go.locateInRing(t,e.getCoordinates()):Dr.EXTERIOR}static isContained(t,e){return Dr.EXTERIOR!==xl.locate(t,e)}static locate(t,e){return e.isEmpty()?Dr.EXTERIOR:e.getEnvelopeInternal().intersects(t)?xl.locateInGeometry(t,e):Dr.EXTERIOR}static containsPointInPolygon(t,e){return Dr.EXTERIOR!==xl.locatePointInPolygon(t,e)}static locateInGeometry(t,e){if(e instanceof ro)return xl.locatePointInPolygon(t,e);if(e instanceof yr){const n=new xo(e);for(;n.hasNext();){const i=n.next();if(i!==e){const e=xl.locateInGeometry(t,i);if(e!==Dr.EXTERIOR)return e}}}return Dr.EXTERIOR}locate(t){return xl.locate(t,this._geom)}get interfaces_(){return[wo]}}class Il{constructor(){Il.constructor_.apply(this,arguments)}static constructor_(){this._edgeMap=new ir,this._edgeList=null,this._ptInAreaLocation=[Dr.NONE,Dr.NONE]}getNextCW(t){this.getEdges();const e=this._edgeList.indexOf(t);let n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)}propagateSideLabels(t){let e=Dr.NONE;for(let n=this.iterator();n.hasNext();){const i=n.next().getLabel();i.isArea(t)&&i.getLocation(t,Nr.LEFT)!==Dr.NONE&&(e=i.getLocation(t,Nr.LEFT))}if(e===Dr.NONE)return null;let n=e;for(let e=this.iterator();e.hasNext();){const i=e.next(),s=i.getLabel();if(s.getLocation(t,Nr.ON)===Dr.NONE&&s.setLocation(t,Nr.ON,n),s.isArea(t)){const e=s.getLocation(t,Nr.LEFT),r=s.getLocation(t,Nr.RIGHT);if(r!==Dr.NONE){if(r!==n)throw new to("side location conflict",i.getCoordinate());e===Dr.NONE&&Ts.shouldNeverReachHere("found single null side (at "+i.getCoordinate()+")"),n=e}else Ts.isTrue(s.getLocation(t,Nr.LEFT)===Dr.NONE,"found single null side"),s.setLocation(t,Nr.RIGHT,n),s.setLocation(t,Nr.LEFT,n)}}}getCoordinate(){const t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()}checkAreaLabelsConsistent(t){const e=this.getEdges();if(e.size()<=0)return!0;const n=e.size()-1,i=e.get(n).getLabel().getLocation(t,Nr.LEFT);Ts.isTrue(i!==Dr.NONE,"Found unlabelled area edge");let s=i;for(let e=this.iterator();e.hasNext();){const n=e.next().getLabel();Ts.isTrue(n.isArea(t),"Found non-area edge");const i=n.getLocation(t,Nr.LEFT),r=n.getLocation(t,Nr.RIGHT);if(i===r)return!1;if(r!==s)return!1;s=i}return!0}findIndex(t){this.iterator();for(let e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1}iterator(){return this.getEdges().iterator()}getEdges(){return null===this._edgeList&&(this._edgeList=new Bs(this._edgeMap.values())),this._edgeList}getLocation(t,e,n){return this._ptInAreaLocation[t]===Dr.NONE&&(this._ptInAreaLocation[t]=xl.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]}toString(){const t=new Or;t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for(let e=this.iterator();e.hasNext();){const n=e.next();t.append(n),t.append("\n")}return t.toString()}computeEdgeEndLabels(t){for(let e=this.iterator();e.hasNext();){e.next().computeLabel(t)}}computeLabelling(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);const e=[!1,!1];for(let t=this.iterator();t.hasNext();){const n=t.next().getLabel();for(let t=0;t<2;t++)n.isLine(t)&&n.getLocation(t)===Dr.BOUNDARY&&(e[t]=!0)}for(let n=this.iterator();n.hasNext();){const i=n.next(),s=i.getLabel();for(let n=0;n<2;n++)if(s.isAnyNull(n)){let r=Dr.NONE;if(e[n])r=Dr.EXTERIOR;else{const e=i.getCoordinate();r=this.getLocation(n,e,t)}s.setAllLocationsIfNull(n,r)}}}getDegree(){return this._edgeMap.size()}insertEdgeEnd(t,e){this._edgeMap.put(t,e),this._edgeList=null}print(t){kr.out.println("EdgeEndStar:   "+this.getCoordinate());for(let e=this.iterator();e.hasNext();){e.next().print(t)}}isAreaLabelsConsistent(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)}}class Nl extends Il{constructor(){super(),Nl.constructor_.apply(this,arguments)}static constructor_(){this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}linkResultDirectedEdges(){this.getResultAreaEdges();let t=null,e=null,n=this._SCANNING_FOR_INCOMING;for(let i=0;i<this._resultAreaEdgeList.size();i++){const s=this._resultAreaEdgeList.get(i),r=s.getSym();if(s.getLabel().isArea())switch(null===t&&s.isInResult()&&(t=s),n){case this._SCANNING_FOR_INCOMING:if(!r.isInResult())continue;e=r,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!s.isInResult())continue;e.setNext(s),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new to("no outgoing dirEdge found",this.getCoordinate());Ts.isTrue(t.isInResult(),"unable to link last incoming dirEdge"),e.setNext(t)}}insert(t){const e=t;this.insertEdgeEnd(e,e)}getRightmostEdge(){const t=this.getEdges(),e=t.size();if(e<1)return null;const n=t.get(0);if(1===e)return n;const i=t.get(e-1),s=n.getQuadrant(),r=i.getQuadrant();return Kr.isNorthern(s)&&Kr.isNorthern(r)?n:Kr.isNorthern(s)||Kr.isNorthern(r)?0!==n.getDy()?n:0!==i.getDy()?i:(Ts.shouldNeverReachHere("found two horizontal edges incident on node"),null):i}updateLabelling(t){for(let e=this.iterator();e.hasNext();){const n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}}linkAllDirectedEdges(){this.getEdges();let t=null,e=null;for(let n=this._edgeList.size()-1;n>=0;n--){const i=this._edgeList.get(n),s=i.getSym();null===e&&(e=s),null!==t&&s.setNext(t),t=i}e.setNext(t)}computeDepths(){if(1===arguments.length){const t=arguments[0],e=this.findIndex(t),n=t.getDepth(Nr.LEFT),i=t.getDepth(Nr.RIGHT),s=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,s)!==i)throw new to("depth mismatch at "+t.getCoordinate())}else if(3===arguments.length){const t=arguments[1];let e=arguments[2];for(let n=arguments[0];n<t;n++){const t=this._edgeList.get(n);t.setEdgeDepths(Nr.RIGHT,e),e=t.getDepth(Nr.LEFT)}return e}}mergeSymLabels(){for(let t=this.iterator();t.hasNext();){const e=t.next();e.getLabel().merge(e.getSym().getLabel())}}linkMinimalDirectedEdges(t){let e=null,n=null,i=this._SCANNING_FOR_INCOMING;for(let s=this._resultAreaEdgeList.size()-1;s>=0;s--){const r=this._resultAreaEdgeList.get(s),o=r.getSym();switch(null===e&&r.getEdgeRing()===t&&(e=r),i){case this._SCANNING_FOR_INCOMING:if(o.getEdgeRing()!==t)continue;n=o,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(r.getEdgeRing()!==t)continue;n.setNextMin(r),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(Ts.isTrue(null!==e,"found null for first outgoing dirEdge"),Ts.isTrue(e.getEdgeRing()===t,"unable to link last incoming dirEdge"),n.setNextMin(e))}getOutgoingDegree(){if(0===arguments.length){let t=0;for(let e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){const t=arguments[0];let e=0;for(let n=this.iterator();n.hasNext();){n.next().getEdgeRing()===t&&e++}return e}}getLabel(){return this._label}findCoveredLineEdges(){let t=Dr.NONE;for(let e=this.iterator();e.hasNext();){const n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=Dr.INTERIOR;break}if(i.isInResult()){t=Dr.EXTERIOR;break}}}if(t===Dr.NONE)return null;let e=t;for(let t=this.iterator();t.hasNext();){const n=t.next(),i=n.getSym();n.isLineEdge()?n.getEdge().setCovered(e===Dr.INTERIOR):(n.isInResult()&&(e=Dr.EXTERIOR),i.isInResult()&&(e=Dr.INTERIOR))}}computeLabelling(t){super.computeLabelling.call(this,t),this._label=new Gr(Dr.NONE);for(let t=this.iterator();t.hasNext();){const e=t.next().getEdge().getLabel();for(let t=0;t<2;t++){const n=e.getLocation(t);n!==Dr.INTERIOR&&n!==Dr.BOUNDARY||this._label.setLocation(t,Dr.INTERIOR)}}}print(t){kr.out.println("DirectedEdgeStar: "+this.getCoordinate());for(let e=this.iterator();e.hasNext();){const n=e.next();t.print("out "),n.print(t),t.println(),t.print("in "),n.getSym().print(t),t.println()}}getResultAreaEdges(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new Bs;for(let t=this.iterator();t.hasNext();){const e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList}}class Sl extends Qr{constructor(){super()}createNode(t){return new Zr(t,new Nl)}}class wl{constructor(){wl.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._orientation=null;const t=arguments[0];this._pts=t,this._orientation=wl.orientation(t)}static orientation(t){return 1===Xr.increasingDirection(t)}static compareOriented(t,e,n,i){const s=e?1:-1,r=i?1:-1,o=e?t.length:-1,a=i?n.length:-1;let l=e?0:t.length-1,c=i?0:n.length-1;for(;;){const e=t[l].compareTo(n[c]);if(0!==e)return e;l+=s,c+=r;const i=l===o,h=c===a;if(i&&!h)return-1;if(!i&&h)return 1;if(i&&h)return 0}}compareTo(t){const e=t;return wl.compareOriented(this._pts,this._orientation,e._pts,e._orientation)}get interfaces_(){return[Ss]}}class Cl{constructor(){Cl.constructor_.apply(this,arguments)}static constructor_(){this._edges=new Bs,this._ocaMap=new ir}print(t){t.print("MULTILINESTRING ( ");for(let e=0;e<this._edges.size();e++){const n=this._edges.get(e);e>0&&t.print(","),t.print("(");const i=n.getCoordinates();for(let e=0;e<i.length;e++)e>0&&t.print(","),t.print(i[e].x+" "+i[e].y);t.println(")")}t.print(")  ")}addAll(t){for(let e=t.iterator();e.hasNext();)this.add(e.next())}findEdgeIndex(t){for(let e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1}iterator(){return this._edges.iterator()}getEdges(){return this._edges}get(t){return this._edges.get(t)}findEqualEdge(t){const e=new wl(t.getCoordinates());return this._ocaMap.get(e)}add(t){this._edges.add(t);const e=new wl(t.getCoordinates());this._ocaMap.put(e,t)}}class Ll{constructor(){Ll.constructor_.apply(this,arguments)}static constructor_(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;const t=arguments[0];this._li=t}static isAdjacentSegments(t,e){return 1===Math.abs(t-e)}isTrivialIntersection(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Ll.isAdjacentSegments(e,i))return!0;if(t.isClosed()){const n=t.size()-1;if(0===e&&i===n||0===i&&e===n)return!0}}return!1}getProperIntersectionPoint(){return this._properIntersectionPoint}hasProperInteriorIntersection(){return this._hasProperInterior}getLineIntersector(){return this._li}hasProperIntersection(){return this._hasProper}processIntersections(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;const s=t.getCoordinates()[e],r=t.getCoordinates()[e+1],o=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(s,r,o,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))}hasIntersection(){return this._hasIntersection}isDone(){return!1}hasInteriorIntersection(){return this._hasInterior}get interfaces_(){return[Ka]}}class Tl{constructor(){Tl.constructor_.apply(this,arguments)}static constructor_(){this._bufParams=null,this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Cl;const t=arguments[0];this._bufParams=t}static convertSegStrings(t){const e=new $o,n=new Bs;for(;t.hasNext();){const i=t.next(),s=e.createLineString(i.getCoordinates());n.add(s)}return e.buildGeometry(n)}static depthDelta(t){const e=t.getLocation(0,Nr.LEFT),n=t.getLocation(0,Nr.RIGHT);return e===Dr.INTERIOR&&n===Dr.EXTERIOR?1:e===Dr.EXTERIOR&&n===Dr.INTERIOR?-1:0}createEmptyResultGeometry(){return this._geomFact.createPolygon()}getNoder(t){if(null!==this._workingNoder)return this._workingNoder;const e=new Va,n=new ho;return n.setPrecisionModel(t),e.setSegmentIntersector(new Ll(n)),e}buffer(t,e){let n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();const i=new cl(n,this._bufParams),s=new El(t,e,i).getCurves();if(s.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(s,n),this._graph=new no(new Sl),this._graph.addEdges(this._edgeList.getEdges());const r=this.createSubgraphs(this._graph),o=new dl(this._geomFact);this.buildSubgraphs(r,o);const a=o.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)}computeNodedEdges(t,e){const n=this.getNoder(e);n.computeNodes(t);for(let t=n.getNodedSubstrings().iterator();t.hasNext();){const e=t.next(),n=e.getCoordinates();if(2===n.length&&n[0].equals2D(n[1]))continue;const i=e.getData(),s=new zo(e.getCoordinates(),new Gr(i));this.insertUniqueEdge(s)}}setNoder(t){this._workingNoder=t}setWorkingPrecisionModel(t){this._workingPrecisionModel=t}insertUniqueEdge(t){const e=this._edgeList.findEqualEdge(t);if(null!==e){const n=e.getLabel();let i=t.getLabel();e.isPointwiseEqual(t)||(i=new Gr(t.getLabel()),i.flip()),n.merge(i);const s=Tl.depthDelta(i),r=e.getDepthDelta()+s;e.setDepthDelta(r)}else this._edgeList.add(t),t.setDepthDelta(Tl.depthDelta(t.getLabel()))}buildSubgraphs(t,e){const n=new Bs;for(let i=t.iterator();i.hasNext();){const t=i.next(),s=t.getRightmostCoordinate(),r=new fl(n).getDepth(s);t.computeDepth(r),t.findResultEdges(),n.add(t),e.add(t.getDirectedEdges(),t.getNodes())}}createSubgraphs(t){const e=new Bs;for(let n=t.getNodes().iterator();n.hasNext();){const t=n.next();if(!t.isVisited()){const n=new sl;n.create(t),e.add(n)}}return wr.sort(e,wr.reverseOrder()),e}}class Rl{constructor(){Rl.constructor_.apply(this,arguments)}static constructor_(){if(this._argGeom=null,this._distance=null,this._bufParams=new _s,this._resultGeometry=null,this._saveException=null,1===arguments.length){const t=arguments[0];this._argGeom=t}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._argGeom=t,this._bufParams=e}}static bufferOp(){if(2===arguments.length){const t=arguments[1];return new Rl(arguments[0]).getResultGeometry(t)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof lr&&"number"==typeof arguments[1]){const t=arguments[1],e=arguments[2],n=new Rl(arguments[0]);n.setQuadrantSegments(e);return n.getResultGeometry(t)}if(arguments[2]instanceof _s&&arguments[0]instanceof lr&&"number"==typeof arguments[1]){const t=arguments[1];return new Rl(arguments[0],arguments[2]).getResultGeometry(t)}}else if(4===arguments.length){const t=arguments[1],e=arguments[2],n=arguments[3],i=new Rl(arguments[0]);i.setQuadrantSegments(e),i.setEndCapStyle(n);return i.getResultGeometry(t)}}static precisionScaleFactor(t,e,n){const i=t.getEnvelopeInternal(),s=zr.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),r=n-Math.trunc(Math.log(s)/Math.log(10)+1);return Math.pow(10,r)}bufferFixedPrecision(t){const e=new Ra(new $a(new Ko(1)),t.getScale()),n=new Tl(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)}bufferReducedPrecision(){if(0===arguments.length){for(let t=Rl.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof to))throw t;this._saveException=t}if(null!==this._resultGeometry)return null}throw this._saveException}if(1===arguments.length){const t=arguments[0],e=Rl.precisionScaleFactor(this._argGeom,this._distance,t),n=new Ko(e);this.bufferFixedPrecision(n)}}bufferOriginalPrecision(){try{const t=new Tl(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof Cs))throw t;this._saveException=t}}getResultGeometry(t){return this._distance=t,this.computeGeometry(),this._resultGeometry}setEndCapStyle(t){this._bufParams.setEndCapStyle(t)}computeGeometry(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;const t=this._argGeom.getFactory().getPrecisionModel();t.getType()===Ko.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()}setQuadrantSegments(t){this._bufParams.setQuadrantSegments(t)}}Rl.CAP_ROUND=_s.CAP_ROUND,Rl.CAP_BUTT=_s.CAP_FLAT,Rl.CAP_FLAT=_s.CAP_FLAT,Rl.CAP_SQUARE=_s.CAP_SQUARE,Rl.MAX_PRECISION_DIGITS=12;const Ol=["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"];class bl{constructor(t){this.geometryFactory=t||new $o}read(t){let e;e="string"==typeof t?JSON.parse(t):t;const n=e.type;if(!Ml[n])throw new Error("Unknown GeoJSON type: "+e.type);return-1!==Ol.indexOf(n)?Ml[n].call(this,e.coordinates):"GeometryCollection"===n?Ml[n].call(this,e.geometries):Ml[n].call(this,e)}write(t){const e=t.getGeometryType();if(!vl[e])throw new Error("Geometry is not supported");return vl[e].call(this,t)}}const Ml={Feature:function(t){const e={};for(const n in t)e[n]=t[n];if(t.geometry){const n=t.geometry.type;if(!Ml[n])throw new Error("Unknown GeoJSON type: "+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Ml.bbox.call(this,t.bbox)),e},FeatureCollection:function(t){const e={};if(t.features){e.features=[];for(let n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.call(this,t.bbox)),e},coordinates:function(t){const e=[];for(let n=0;n<t.length;++n){const i=t[n];e.push(new Ps(...i))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new Ps(t[0],t[1]),new Ps(t[2],t[1]),new Ps(t[2],t[3]),new Ps(t[0],t[3]),new Ps(t[0],t[1])])},Point:function(t){const e=new Ps(...t);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){const e=[];for(let n=0;n<t.length;++n)e.push(Ml.Point.call(this,t[n]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){const e=Ml.coordinates.call(this,t);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){const e=[];for(let n=0;n<t.length;++n)e.push(Ml.LineString.call(this,t[n]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){const e=Ml.coordinates.call(this,t[0]),n=this.geometryFactory.createLinearRing(e),i=[];for(let e=1;e<t.length;++e){const n=t[e],s=Ml.coordinates.call(this,n),r=this.geometryFactory.createLinearRing(s);i.push(r)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){const e=[];for(let n=0;n<t.length;++n){const i=t[n];e.push(Ml.Polygon.call(this,i))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){const e=[];for(let n=0;n<t.length;++n){const i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},vl={coordinate:function(t){const e=[t.x,t.y];return t.z&&e.push(t.z),t.m&&e.push(t.m),e},Point:function(t){return{type:"Point",coordinates:vl.coordinate.call(this,t.getCoordinate())}},MultiPoint:function(t){const e=[];for(let n=0;n<t._geometries.length;++n){const i=t._geometries[n],s=vl.Point.call(this,i);e.push(s.coordinates)}return{type:"MultiPoint",coordinates:e}},LineString:function(t){const e=[],n=t.getCoordinates();for(let t=0;t<n.length;++t){const i=n[t];e.push(vl.coordinate.call(this,i))}return{type:"LineString",coordinates:e}},MultiLineString:function(t){const e=[];for(let n=0;n<t._geometries.length;++n){const i=t._geometries[n],s=vl.LineString.call(this,i);e.push(s.coordinates)}return{type:"MultiLineString",coordinates:e}},Polygon:function(t){const e=[],n=vl.LineString.call(this,t._shell);e.push(n.coordinates);for(let n=0;n<t._holes.length;++n){const i=t._holes[n],s=vl.LineString.call(this,i);e.push(s.coordinates)}return{type:"Polygon",coordinates:e}},MultiPolygon:function(t){const e=[];for(let n=0;n<t._geometries.length;++n){const i=t._geometries[n],s=vl.Polygon.call(this,i);e.push(s.coordinates)}return{type:"MultiPolygon",coordinates:e}},GeometryCollection:function(t){const e=[];for(let n=0;n<t._geometries.length;++n){const i=t._geometries[n],s=i.getGeometryType();e.push(vl[s].call(this,i))}return{type:"GeometryCollection",geometries:e}}};class Pl{constructor(t){this.parser=new bl(t||new $o)}read(t){return this.parser.read(t)}}class Al{constructor(){this.parser=new bl(this.geometryFactory)}write(t){return this.parser.write(t)}}class Dl{constructor(){Dl.constructor_.apply(this,arguments)}static constructor_(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new Oo,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof jo&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];Dl.constructor_.call(this,t.getCoordinates(),e)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];this._srcPts=t,this._isClosed=Dl.isClosed(t),this._snapTolerance=e}}static isClosed(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])}snapVertices(t,e){const n=this._isClosed?t.size()-1:t.size();for(let i=0;i<n;i++){const n=t.get(i),s=this.findSnapForVertex(n,e);null!==s&&(t.set(i,new Ps(s)),0===i&&this._isClosed&&t.set(t.size()-1,new Ps(s)))}}findSnapForVertex(t,e){for(let n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null}snapTo(t){const e=new Us(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()}snapSegments(t,e){if(0===e.length)return null;let n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(let i=0;i<n;i++){const n=e[i],s=this.findSegmentIndexToSnap(n,t);s>=0&&t.add(s+1,new Ps(n),!1)}}findSegmentIndexToSnap(t,e){let n=Ns.MAX_VALUE,i=-1;for(let s=0;s<e.size()-1;s++){if(this._seg.p0=e.get(s),this._seg.p1=e.get(s+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}const r=this._seg.distance(t);r<this._snapTolerance&&r<n&&(n=r,i=s)}return i}setAllowSnappingToSourceVertices(t){this._allowSnappingToSourceVertices=t}}class Fl{constructor(){Fl.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1}transformPoint(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))}transformPolygon(t,e){let n=!0;const i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof Ho&&!i.isEmpty()||(n=!1);const s=new Bs;for(let e=0;e<t.getNumInteriorRing();e++){const i=this.transformLinearRing(t.getInteriorRingN(e),t);null===i||i.isEmpty()||(i instanceof Ho||(n=!1),s.add(i))}if(n)return this._factory.createPolygon(i,s.toArray([]));{const t=new Bs;return null!==i&&t.add(i),t.addAll(s),this._factory.buildGeometry(t)}}createCoordinateSequence(t){return this._factory.getCoordinateSequenceFactory().create(t)}getInputGeometry(){return this._inputGeom}transformMultiLineString(t,e){const n=new Bs;for(let e=0;e<t.getNumGeometries();e++){const i=this.transformLineString(t.getGeometryN(e),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)}transformCoordinates(t,e){return this.copy(t)}transformLineString(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))}transformMultiPoint(t,e){const n=new Bs;for(let e=0;e<t.getNumGeometries();e++){const i=this.transformPoint(t.getGeometryN(e),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)}transformMultiPolygon(t,e){const n=new Bs;for(let e=0;e<t.getNumGeometries();e++){const i=this.transformPolygon(t.getGeometryN(e),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)}copy(t){return t.copy()}transformLinearRing(t,e){const n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);const i=n.size();return i>0&&i<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)}transformGeometryCollection(t,e){const n=new Bs;for(let e=0;e<t.getNumGeometries();e++){const i=this.transform(t.getGeometryN(e));null!==i&&(this._pruneEmptyGeometry&&i.isEmpty()||n.add(i))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection($o.toGeometryArray(n)):this._factory.buildGeometry(n)}transform(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Io)return this.transformPoint(t,null);if(t instanceof xr)return this.transformMultiPoint(t,null);if(t instanceof Ho)return this.transformLinearRing(t,null);if(t instanceof jo)return this.transformLineString(t,null);if(t instanceof Hr)return this.transformMultiLineString(t,null);if(t instanceof ro)return this.transformPolygon(t,null);if(t instanceof Eo)return this.transformMultiPolygon(t,null);if(t instanceof yr)return this.transformGeometryCollection(t,null);throw new xs("Unknown Geometry subtype: "+t.getGeometryType())}}class Gl{constructor(){Gl.constructor_.apply(this,arguments)}static constructor_(){this._srcGeom=null;const t=arguments[0];this._srcGeom=t}static computeSizeBasedSnapTolerance(t){const e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*Gl.SNAP_PRECISION_FACTOR}static computeOverlaySnapTolerance(){if(1===arguments.length){const t=arguments[0];let e=Gl.computeSizeBasedSnapTolerance(t);const n=t.getPrecisionModel();if(n.getType()===Ko.FIXED){const t=1/n.getScale()*2/1.415;t>e&&(e=t)}return e}if(2===arguments.length){const t=arguments[0],e=arguments[1];return Math.min(Gl.computeOverlaySnapTolerance(t),Gl.computeOverlaySnapTolerance(e))}}static snapToSelf(t,e,n){return new Gl(t).snapToSelf(e,n)}static snap(t,e,n){const i=new Array(2).fill(null),s=new Gl(t);i[0]=s.snapTo(e,n);const r=new Gl(e);return i[1]=r.snapTo(i[0],n),i}computeSnapTolerance(t){return this.computeMinimumSegmentLength(t)/10}snapTo(t,e){const n=this.extractTargetCoordinates(t);return new ql(e,n).transform(this._srcGeom)}snapToSelf(t,e){const n=this.extractTargetCoordinates(this._srcGeom),i=new ql(t,n,!0).transform(this._srcGeom);let s=i;return e&&ms(s,Vr)&&(s=i.buffer(0)),s}extractTargetCoordinates(t){const e=new hr,n=t.getCoordinates();for(let t=0;t<n.length;t++)e.add(n[t]);return e.toArray(new Array(0).fill(null))}computeMinimumSegmentLength(t){let e=Ns.MAX_VALUE;for(let n=0;n<t.length-1;n++){const i=t[n].distance(t[n+1]);i<e&&(e=i)}return e}}Gl.SNAP_PRECISION_FACTOR=1e-9;class ql extends Fl{constructor(){super(),ql.constructor_.apply(this,arguments)}static constructor_(){if(this._snapTolerance=null,this._snapPts=null,this._isSelfSnap=!1,2===arguments.length){const t=arguments[0],e=arguments[1];this._snapTolerance=t,this._snapPts=e}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._snapTolerance=t,this._snapPts=e,this._isSelfSnap=n}}transformCoordinates(t,e){const n=t.toCoordinateArray(),i=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(i)}snapLine(t,e){const n=new Dl(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)}}class Bl{constructor(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=new Is,this._commonSignExp=null}getCommon(){return Ns.longBitsToDouble(this._commonBits)}add(t){const e=Ns.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=Bl.signExpBits(this._commonBits),this._isFirst=!1,null;if(Bl.signExpBits(e)!==this._commonSignExp)return this._commonBits.high=0,this._commonBits.low=0,null;this._commonMantissaBitsCount=Bl.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=Bl.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))}toString(){if(1===arguments.length){const t=arguments[0],e=Ns.longBitsToDouble(t),n="0000000000000000000000000000000000000000000000000000000000000000"+Is.toBinaryString(t),i=n.substring(n.length-64);return i.substring(0,1)+"  "+i.substring(1,12)+"(exp) "+i.substring(12)+" [ "+e+" ]"}}getClass(){return Bl}get interfaces_(){return[]}static getBit(t,e){const n=1<<e%32;return e<32?0!=(t.low&n)?1:0:0!=(t.high&n)?1:0}static signExpBits(t){return t.high>>>20}static zeroLowerBits(t,e){let n="low";if(e>32&&(t.low=0,e%=32,n="high"),e>0){const i=e<32?~((1<<e)-1):0;t[n]&=i}return t}static numCommonMostSigMantissaBits(t,e){let n=0;for(let i=52;i>=0;i--){if(Bl.getBit(t,i)!==Bl.getBit(e,i))return n;n++}return 52}}class Yl{constructor(){Yl.constructor_.apply(this,arguments)}static constructor_(){this._commonCoord=null,this._ccFilter=new Ul}add(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()}removeCommonBits(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;const e=new Ps(this._commonCoord);e.x=-e.x,e.y=-e.y;const n=new zl(e);return t.apply(n),t.geometryChanged(),t}addCommonBits(t){const e=new zl(this._commonCoord);t.apply(e),t.geometryChanged()}getCommonCoordinate(){return this._commonCoord}}class Ul{constructor(){Ul.constructor_.apply(this,arguments)}static constructor_(){this._commonBitsX=new Bl,this._commonBitsY=new Bl}filter(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)}getCommonCoordinate(){return new Ps(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())}get interfaces_(){return[pr]}}class zl{constructor(){zl.constructor_.apply(this,arguments)}static constructor_(){this.trans=null;const t=arguments[0];this.trans=t}filter(t,e){const n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)}isGeometryChanged(){return!0}isDone(){return!1}get interfaces_(){return[mr]}}Yl.CommonCoordinateFilter=Ul,Yl.Translater=zl;class kl{constructor(){kl.constructor_.apply(this,arguments)}static constructor_(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new Bs,this._resultLineList=new Bs;const t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n}collectLines(t){for(let e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){const n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}}labelIsolatedLine(t,e){const n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)}build(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList}collectLineEdge(t,e,n){const i=t.getLabel(),s=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Kl.isResultOfOp(i,e)||s.isCovered()||(n.add(s),t.setVisitedEdge(!0)))}findCoveredLineEdges(){for(let t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(let t=this._op.getGraph().getEdgeEnds().iterator();t.hasNext();){const e=t.next(),n=e.getEdge();if(e.isLineEdge()&&!n.isCoveredSet()){const t=this._op.isCoveredByA(e.getCoordinate());n.setCovered(t)}}}labelIsolatedLines(t){for(let e=t.iterator();e.hasNext();){const t=e.next(),n=t.getLabel();t.isIsolated()&&(n.isNull(0)?this.labelIsolatedLine(t,0):this.labelIsolatedLine(t,1))}}buildLines(t){for(let t=this._lineEdgesList.iterator();t.hasNext();){const e=t.next(),n=this._geometryFactory.createLineString(e.getCoordinates());this._resultLineList.add(n),e.setInResult(!0)}}collectBoundaryTouchEdge(t,e,n){const i=t.getLabel();return t.isLineEdge()||t.isVisited()||t.isInteriorAreaEdge()||t.getEdge().isInResult()?null:(Ts.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Kl.isResultOfOp(i,e)&&e===Kl.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))}}class Xl{constructor(){Xl.constructor_.apply(this,arguments)}static constructor_(){this._op=null,this._geometryFactory=null,this._resultPointList=new Bs;const t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e}build(t){return this.extractNonCoveredResultNodes(t),this._resultPointList}extractNonCoveredResultNodes(t){for(let e=this._op.getGraph().getNodes().iterator();e.hasNext();){const n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Kl.INTERSECTION))){const e=n.getLabel();Kl.isResultOfOp(e,t)&&this.filterCoveredNodeToPoint(n)}}}filterCoveredNodeToPoint(t){const e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){const t=this._geometryFactory.createPoint(e);this._resultPointList.add(t)}}}class Vl{constructor(){Vl.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._data=null;const t=arguments[0],e=arguments[1];this._pts=t,this._data=e}getCoordinates(){return this._pts}size(){return this._pts.length}getCoordinate(t){return this._pts[t]}isClosed(){return this._pts[0].equals(this._pts[this._pts.length-1])}getSegmentOctant(t){return t===this._pts.length-1?-1:Sa.octant(this.getCoordinate(t),this.getCoordinate(t+1))}setData(t){this._data=t}getData(){return this._data}toString(){return Na.toLineString(new Zo(this._pts))}get interfaces_(){return[wa]}}class jl{constructor(){jl.constructor_.apply(this,arguments)}static constructor_(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._keepIntersections=!0,this._isInteriorIntersectionsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new Bs,this._intersectionCount=0;const t=arguments[0];this._li=t,this._interiorIntersection=null}static createAllIntersectionsFinder(t){const e=new jl(t);return e.setFindAllIntersections(!0),e}static isInteriorVertexIntersection(){if(4===arguments.length){const t=arguments[1];return(!arguments[2]||!arguments[3])&&!!arguments[0].equals2D(t)}if(8===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],s=arguments[4],r=arguments[5],o=arguments[6],a=arguments[7];return!!jl.isInteriorVertexIntersection(t,n,s,o)||(!!jl.isInteriorVertexIntersection(t,i,s,a)||(!!jl.isInteriorVertexIntersection(e,n,r,o)||!!jl.isInteriorVertexIntersection(e,i,r,a)))}}static createInteriorIntersectionCounter(t){const e=new jl(t);return e.setInteriorIntersectionsOnly(!0),e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e}static createIntersectionCounter(t){const e=new jl(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e}static isEndSegment(t,e){return 0===e||e>=t.size()-2}static createAnyIntersectionFinder(t){return new jl(t)}static createInteriorIntersectionsFinder(t){const e=new jl(t);return e.setFindAllIntersections(!0),e.setInteriorIntersectionsOnly(!0),e}count(){return this._intersectionCount}getIntersections(){return this._intersections}setFindAllIntersections(t){this._findAllIntersections=t}setKeepIntersections(t){this._keepIntersections=t}getIntersection(){return this._interiorIntersection}processIntersections(t,e,n,i){if(!this._findAllIntersections&&this.hasIntersection())return null;const s=t===n;if(s&&e===i)return null;if(this._isCheckEndSegmentsOnly){if(!(jl.isEndSegment(t,e)||jl.isEndSegment(n,i)))return null}const r=t.getCoordinate(e),o=t.getCoordinate(e+1),a=n.getCoordinate(i),l=n.getCoordinate(i+1),c=0===e,h=e+2===t.size(),u=0===i,g=i+2===n.size();this._li.computeIntersection(r,o,a,l);const d=this._li.hasIntersection()&&this._li.isInteriorIntersection();let f=!1;if(!this._isInteriorIntersectionsOnly){f=!(s&&Math.abs(i-e)<=1)&&jl.isInteriorVertexIntersection(r,o,a,l,c,h,u,g)}(d||f)&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=r,this._intSegments[1]=o,this._intSegments[2]=a,this._intSegments[3]=l,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)}hasIntersection(){return null!==this._interiorIntersection}isDone(){return!this._findAllIntersections&&null!==this._interiorIntersection}setInteriorIntersectionsOnly(t){this._isInteriorIntersectionsOnly=t}setCheckEndSegmentsOnly(t){this._isCheckEndSegmentsOnly=t}getIntersectionSegments(){return this._intSegments}get interfaces_(){return[Ka]}}class Hl{constructor(){Hl.constructor_.apply(this,arguments)}static constructor_(){this._li=new ho,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;const t=arguments[0];this._segStrings=t}static computeIntersections(t){const e=new Hl(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()}isValid(){return this.execute(),this._isValid}setFindAllIntersections(t){this._findAllIntersections=t}checkInteriorIntersections(){this._isValid=!0,this._segInt=new jl(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);const t=new Va;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null}checkValid(){if(this.execute(),!this._isValid)throw new to(this.getErrorMessage(),this._segInt.getIntersection())}getErrorMessage(){if(this._isValid)return"no intersections found";const t=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+Na.toLineString(t[0],t[1])+" and "+Na.toLineString(t[2],t[3])}execute(){if(null!==this._segInt)return null;this.checkInteriorIntersections()}getIntersections(){return this._segInt.getIntersections()}}class Wl{constructor(){Wl.constructor_.apply(this,arguments)}static constructor_(){this._nv=null;const t=arguments[0];this._nv=new Hl(Wl.toSegmentStrings(t))}static toSegmentStrings(t){const e=new Bs;for(let n=t.iterator();n.hasNext();){const t=n.next();e.add(new Vl(t.getCoordinates(),t))}return e}static checkValid(t){new Wl(t).checkValid()}checkValid(){this._nv.checkValid()}}class Zl{constructor(){Zl.constructor_.apply(this,arguments)}static constructor_(){this._mapOp=null;const t=arguments[0];this._mapOp=t}static map(t,e){return new Zl(e).map(t)}map(t){const e=new Bs;for(let n=0;n<t.getNumGeometries();n++){const i=this._mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection($o.toGeometryArray(e))}}class Jl{constructor(){Jl.constructor_.apply(this,arguments)}static constructor_(){if(this._li=new ho,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){const t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new ko(0,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];Jl.constructor_.call(this,t,e,fo.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];t.getPrecisionModel().compareTo(e.getPrecisionModel())>=0?this.setComputationPrecision(t.getPrecisionModel()):this.setComputationPrecision(e.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new ko(0,t,n),this._arg[1]=new ko(1,e,n)}}setComputationPrecision(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)}getArgGeometry(t){return this._arg[t].getGeometry()}}class Kl extends Jl{constructor(){super(),Kl.constructor_.apply(this,arguments)}static constructor_(){this._ptLocator=new No,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Cl,this._resultPolyList=new Bs,this._resultLineList=new Bs,this._resultPointList=new Bs;const t=arguments[0],e=arguments[1];Jl.constructor_.call(this,t,e),this._graph=new no(new Sl),this._geomFact=t.getFactory()}static overlayOp(t,e,n){return new Kl(t,e).getResultGeometry(n)}static union(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Kl.createEmptyResult(Kl.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}if(t.isGeometryCollection()||e.isGeometryCollection())throw new xs("This method does not support GeometryCollection arguments");return $l.overlayOp(t,e,Kl.UNION)}static intersection(t,e){if(t.isEmpty()||e.isEmpty())return Kl.createEmptyResult(Kl.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){const n=e;return Zl.map(t,new class{get interfaces_(){return[MapOp]}map(t){return Kl.intersection(t,n)}})}return $l.overlayOp(t,e,Kl.INTERSECTION)}static symDifference(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Kl.createEmptyResult(Kl.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}if(t.isGeometryCollection()||e.isGeometryCollection())throw new xs("This method does not support GeometryCollection arguments");return $l.overlayOp(t,e,Kl.SYMDIFFERENCE)}static resultDimension(t,e,n){const i=e.getDimension(),s=n.getDimension();let r=-1;switch(t){case Kl.INTERSECTION:r=Math.min(i,s);break;case Kl.UNION:r=Math.max(i,s);break;case Kl.DIFFERENCE:r=i;break;case Kl.SYMDIFFERENCE:r=Math.max(i,s)}return r}static createEmptyResult(t,e,n,i){const s=Kl.resultDimension(t,e,n);return i.createEmpty(s)}static difference(t,e){if(t.isEmpty())return Kl.createEmptyResult(Kl.DIFFERENCE,t,e,t.getFactory());if(e.isEmpty())return t.copy();if(t.isGeometryCollection()||e.isGeometryCollection())throw new xs("This method does not support GeometryCollection arguments");return $l.overlayOp(t,e,Kl.DIFFERENCE)}static isResultOfOp(){if(2===arguments.length){const t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return Kl.isResultOfOp(n,i,e)}if(3===arguments.length){let t=arguments[0],e=arguments[1],n=arguments[2];switch(t===Dr.BOUNDARY&&(t=Dr.INTERIOR),e===Dr.BOUNDARY&&(e=Dr.INTERIOR),n){case Kl.INTERSECTION:return t===Dr.INTERIOR&&e===Dr.INTERIOR;case Kl.UNION:return t===Dr.INTERIOR||e===Dr.INTERIOR;case Kl.DIFFERENCE:return t===Dr.INTERIOR&&e!==Dr.INTERIOR;case Kl.SYMDIFFERENCE:return t===Dr.INTERIOR&&e!==Dr.INTERIOR||t!==Dr.INTERIOR&&e===Dr.INTERIOR}return!1}}insertUniqueEdge(t){const e=this._edgeList.findEqualEdge(t);if(null!==e){const n=e.getLabel();let i=t.getLabel();e.isPointwiseEqual(t)||(i=new Gr(t.getLabel()),i.flip());const s=e.getDepth();s.isNull()&&s.add(n),s.add(i),n.merge(i)}else this._edgeList.add(t)}getGraph(){return this._graph}cancelDuplicateResultEdges(){for(let t=this._graph.getEdgeEnds().iterator();t.hasNext();){const e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}}mergeSymLabels(){for(let t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}}computeOverlay(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);const e=new Bs;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Wl.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();const n=new dl(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();const i=new kl(this,this._geomFact,this._ptLocator);this._resultLineList=i.build(t);const s=new Xl(this,this._geomFact,this._ptLocator);this._resultPointList=s.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)}findResultAreaEdges(t){for(let e=this._graph.getEdgeEnds().iterator();e.hasNext();){const n=e.next(),i=n.getLabel();i.isArea()&&!n.isInteriorAreaEdge()&&Kl.isResultOfOp(i.getLocation(0,Nr.RIGHT),i.getLocation(1,Nr.RIGHT),t)&&n.setInResult(!0)}}computeLabelsFromDepths(){for(let t=this._edgeList.iterator();t.hasNext();){const e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(let t=0;t<2;t++)n.isNull(t)||!n.isArea()||i.isNull(t)||(0===i.getDelta(t)?n.toLine(t):(Ts.isTrue(!i.isNull(t,Nr.LEFT),"depth of LEFT side has not been initialized"),n.setLocation(t,Nr.LEFT,i.getLocation(t,Nr.LEFT)),Ts.isTrue(!i.isNull(t,Nr.RIGHT),"depth of RIGHT side has not been initialized"),n.setLocation(t,Nr.RIGHT,i.getLocation(t,Nr.RIGHT))))}}}isCoveredByA(t){return!!this.isCovered(t,this._resultPolyList)}isCoveredByLA(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)}computeGeometry(t,e,n,i){const s=new Bs;return s.addAll(t),s.addAll(e),s.addAll(n),s.isEmpty()?Kl.createEmptyResult(i,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(s)}isCovered(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next();if(this._ptLocator.locate(t,e)!==Dr.EXTERIOR)return!0}return!1}replaceCollapsedEdges(){const t=new Bs;for(let e=this._edgeList.iterator();e.hasNext();){const n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)}updateNodeLabelling(){for(let t=this._graph.getNodes().iterator();t.hasNext();){const e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}}getResultGeometry(t){return this.computeOverlay(t),this._resultGeom}insertUniqueEdges(t){for(let e=t.iterator();e.hasNext();){const t=e.next();this.insertUniqueEdge(t)}}labelIncompleteNode(t,e){const n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)}copyPoints(t){for(let e=this._arg[t].getNodeIterator();e.hasNext();){const n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}}computeLabelling(){for(let t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()}labelIncompleteNodes(){for(let t=this._graph.getNodes().iterator();t.hasNext();){const e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}}}Kl.INTERSECTION=1,Kl.UNION=2,Kl.DIFFERENCE=3,Kl.SYMDIFFERENCE=4;class Ql{constructor(){Ql.constructor_.apply(this,arguments)}static constructor_(){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null;const t=arguments[0],e=arguments[1];this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()}static overlayOp(t,e,n){return new Ql(t,e).getResultGeometry(n)}static union(t,e){return Ql.overlayOp(t,e,Kl.UNION)}static intersection(t,e){return Ql.overlayOp(t,e,Kl.INTERSECTION)}static symDifference(t,e){return Ql.overlayOp(t,e,Kl.SYMDIFFERENCE)}static difference(t,e){return Ql.overlayOp(t,e,Kl.DIFFERENCE)}selfSnap(t){return new Gl(t).snapTo(t,this._snapTolerance)}removeCommonBits(t){this._cbr=new Yl,this._cbr.add(t[0]),this._cbr.add(t[1]);const e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e}prepareResult(t){return this._cbr.addCommonBits(t),t}getResultGeometry(t){const e=this.snap(this._geom),n=Kl.overlayOp(e[0],e[1],t);return this.prepareResult(n)}checkValid(t){t.isValid()||kr.out.println("Snapped geometry is invalid")}computeSnapTolerance(){this._snapTolerance=Gl.computeOverlaySnapTolerance(this._geom[0],this._geom[1])}snap(t){const e=this.removeCommonBits(t);return Gl.snap(e[0],e[1],this._snapTolerance)}}class $l{constructor(){$l.constructor_.apply(this,arguments)}static constructor_(){this._geom=new Array(2).fill(null);const t=arguments[0],e=arguments[1];this._geom[0]=t,this._geom[1]=e}static overlayOp(t,e,n){return new $l(t,e).getResultGeometry(n)}static union(t,e){return $l.overlayOp(t,e,Kl.UNION)}static intersection(t,e){return $l.overlayOp(t,e,Kl.INTERSECTION)}static symDifference(t,e){return $l.overlayOp(t,e,Kl.SYMDIFFERENCE)}static difference(t,e){return $l.overlayOp(t,e,Kl.DIFFERENCE)}getResultGeometry(t){let e=null,n=!1,i=null;try{e=Kl.overlayOp(this._geom[0],this._geom[1],t);!0&&(n=!0)}catch(t){if(!(t instanceof Cs))throw t;i=t}if(!n)try{e=Ql.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof Cs?i:t}return e}}class tc{constructor(){tc.constructor_.apply(this,arguments)}static constructor_(){this._geomFactory=null,this._polygons=new Bs,this._lines=new Bs,this._points=new Bs,this._dimension=dr.FALSE}static extract(){if(ms(arguments[0],Ds)){const t=arguments[0],e=new tc;return e.add(t),e}if(arguments[0]instanceof lr){const t=arguments[0],e=new tc;return e.add(t),e}}getFactory(){return this._geomFactory}filter(t){return this.recordDimension(t.getDimension()),t instanceof yr||t.isEmpty()?null:t instanceof ro?(this._polygons.add(t),null):t instanceof jo?(this._lines.add(t),null):t instanceof Io?(this._points.add(t),null):void Ts.shouldNeverReachHere("Unhandled geometry type: "+t.getGeometryType())}getExtract(t){switch(t){case 0:return this._points;case 1:return this._lines;case 2:return this._polygons}return Ts.shouldNeverReachHere("Invalid dimension: "+t),null}recordDimension(t){t>this._dimension&&(this._dimension=t)}getDimension(){return this._dimension}isEmpty(){return this._polygons.isEmpty()&&this._lines.isEmpty()&&this._points.isEmpty()}add(){if(ms(arguments[0],Ds)){const t=arguments[0];for(const e of t)this.add(e)}else if(arguments[0]instanceof lr){const t=arguments[0];null===this._geomFactory&&(this._geomFactory=t.getFactory()),t.apply(this)}}get interfaces_(){return[_r]}}class ec{constructor(){ec.constructor_.apply(this,arguments)}static constructor_(){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null;const t=arguments[0];this._geomFactory=ec.extractFactory(t),this._inputGeoms=t}static extractFactory(t){return t.isEmpty()?null:t.iterator().next().getFactory()}static createList(){if(2===arguments.length){const t=arguments[0],e=arguments[1],n=new Bs;return n.add(t),n.add(e),n}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=new Bs;return i.add(t),i.add(e),i.add(n),i}}static combine(){if(1===arguments.length){return new ec(arguments[0]).combine()}if(2===arguments.length){const t=arguments[0],e=arguments[1];return new ec(ec.createList(t,e)).combine()}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];return new ec(ec.createList(t,e,n)).combine()}}extractElements(t,e){if(null===t)return null;for(let n=0;n<t.getNumGeometries();n++){const i=t.getGeometryN(n);this._skipEmpty&&i.isEmpty()||e.add(i)}}combine(){const t=new Bs;for(let e=this._inputGeoms.iterator();e.hasNext();){const n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection():null:this._geomFactory.buildGeometry(t)}}class nc{constructor(){nc.constructor_.apply(this,arguments)}static constructor_(){this._pointGeom=null,this._otherGeom=null,this._geomFact=null;const t=arguments[0],e=arguments[1];this._pointGeom=t,this._otherGeom=e,this._geomFact=e.getFactory()}static union(t,e){return new nc(t,e).union()}union(){const t=new No,e=new hr;for(let n=0;n<this._pointGeom.getNumGeometries();n++){const i=this._pointGeom.getGeometryN(n).getCoordinate();t.locate(i,this._otherGeom)===Dr.EXTERIOR&&e.add(i)}if(0===e.size())return this._otherGeom;let n=null;const i=Xr.toCoordinateArray(e);return n=1===i.length?this._geomFact.createPoint(i[0]):this._geomFact.createMultiPointFromCoords(i),ec.combine(n,this._otherGeom)}}class ic{constructor(){ic.constructor_.apply(this,arguments)}static constructor_(){this._comps=null;const t=arguments[0];this._comps=t}static getPolygons(){if(1===arguments.length){const t=arguments[0];return ic.getPolygons(t,new Bs)}if(2===arguments.length){const t=arguments[0],e=arguments[1];return t instanceof ro?e.add(t):t instanceof yr&&t.apply(new ic(e)),e}}filter(t){t instanceof ro&&this._comps.add(t)}get interfaces_(){return[_r]}}class sc{static union(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Kl.createEmptyResult(Kl.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return lr.checkNotGeometryCollection(t),lr.checkNotGeometryCollection(e),$l.overlayOp(t,e,Kl.UNION)}}class rc{constructor(){rc.constructor_.apply(this,arguments)}static constructor_(){this._geomFactory=null,this._g0=null,this._g1=null,this._isUnionSafe=null;const t=arguments[0],e=arguments[1];this._g0=t,this._g1=e,this._geomFactory=t.getFactory()}static containsProperly(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return!t.isNull()&&(e.getX()>t.getMinX()&&e.getX()<t.getMaxX()&&e.getY()>t.getMinY()&&e.getY()<t.getMaxY())}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];return rc.containsProperly(t,e)&&rc.containsProperly(t,n)}}static union(t,e){return new rc(t,e).union()}static intersects(t,e,n){return t.intersects(e)||t.intersects(n)}static overlapEnvelope(t,e){const n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();return n.intersection(i)}static extractBorderSegments(t,e,n){t.apply(new class{get interfaces_(){return[mr]}filter(t,i){if(i<=0)return null;const s=t.getCoordinate(i-1),r=t.getCoordinate(i);if(rc.intersects(e,s,r)&&!rc.containsProperly(e,s,r)){const t=new Oo(s,r);n.add(t)}}isDone(){return!1}isGeometryChanged(){return!1}})}static unionBuffer(t,e){const n=t.getFactory().createGeometryCollection([t,e]);return Rl.bufferOp(n,0)}isBorderSegmentsSame(t,e){const n=this.extractBorderSegments(this._g0,this._g1,e),i=new Bs;return rc.extractBorderSegments(t,e,i),this.isEqual(n,i)}union(){const t=rc.overlapEnvelope(this._g0,this._g1);if(t.isNull()){const t=this._g0.copy(),e=this._g1.copy();return ec.combine(t,e)}const e=new Bs,n=this.extractByEnvelope(t,this._g0,e),i=this.extractByEnvelope(t,this._g1,e),s=this.unionFull(n,i);let r=null;return this._isUnionSafe=this.isBorderSegmentsSame(s,t),r=this._isUnionSafe?this.combine(s,e):this.unionFull(this._g0,this._g1),r}extractBorderSegments(t,e,n){const i=new Bs;return rc.extractBorderSegments(t,n,i),null!==e&&rc.extractBorderSegments(e,n,i),i}isUnionOptimized(){return this._isUnionSafe}extractByEnvelope(t,e,n){const i=new Bs;for(let s=0;s<e.getNumGeometries();s++){const r=e.getGeometryN(s);if(r.getEnvelopeInternal().intersects(t))i.add(r);else{const t=r.copy();n.add(t)}}return this._geomFactory.buildGeometry(i)}isEqual(t,e){if(t.size()!==e.size())return!1;const n=new Js(t);for(const t of e)if(!n.contains(t))return!1;return!0}combine(t,e){if(e.size()<=0)return t;e.add(t);return ec.combine(e)}unionFull(t,e){try{return sc.union(t,e)}catch(n){if(n instanceof to)return rc.unionBuffer(t,e);throw n}}}class oc{constructor(){oc.constructor_.apply(this,arguments)}static constructor_(){this._inputPolys=null,this._geomFactory=null;const t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new Bs)}static getGeometry(t,e){return e>=t.size()?null:t.get(e)}static union(t){return new oc(t).union()}static restrictToPolygons(t){if(ms(t,Vr))return t;const e=ic.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon($o.toPolygonArray(e))}reduceToGeometries(t){const e=new Bs;for(let n=t.iterator();n.hasNext();){const t=n.next();let i=null;ms(t,Gs)?i=this.unionTree(t):t instanceof lr&&(i=t),e.add(i)}return e}union(){if(null===this._inputPolys)throw new br("union() method cannot be called twice");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();const t=new Ba(oc.STRTREE_NODE_CAPACITY);for(let e=this._inputPolys.iterator();e.hasNext();){const n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;const e=t.itemsTree();return this.unionTree(e)}binaryUnion(){if(1===arguments.length){const t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(n-e<=1){const n=oc.getGeometry(t,e);return this.unionSafe(n,null)}if(n-e==2)return this.unionSafe(oc.getGeometry(t,e),oc.getGeometry(t,e+1));{const i=Math.trunc((n+e)/2),s=this.binaryUnion(t,e,i),r=this.binaryUnion(t,i,n);return this.unionSafe(s,r)}}}repeatedUnion(t){let e=null;for(let n=t.iterator();n.hasNext();){const t=n.next();e=null===e?t.copy():e.union(t)}return e}unionSafe(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionActual(t,e)}unionActual(t,e){const n=rc.union(t,e);return oc.restrictToPolygons(n)}unionTree(t){const e=this.reduceToGeometries(t);return this.binaryUnion(e)}bufferUnion(){if(1===arguments.length){const t=arguments[0];return t.get(0).getFactory().buildGeometry(t).buffer(0)}if(2===arguments.length){const t=arguments[0],e=arguments[1];return t.getFactory().createGeometryCollection([t,e]).buffer(0)}}}oc.STRTREE_NODE_CAPACITY=4;class ac{constructor(){ac.constructor_.apply(this,arguments)}static constructor_(){if(this._geomFact=null,this._extracter=null,1===arguments.length){if(ms(arguments[0],Ds)){const t=arguments[0];this.extract(t)}else if(arguments[0]instanceof lr){const t=arguments[0];this.extract(t)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._geomFact=e,this.extract(t)}}static union(){if(1===arguments.length){if(ms(arguments[0],Ds)){return new ac(arguments[0]).union()}if(arguments[0]instanceof lr){return new ac(arguments[0]).union()}}else if(2===arguments.length){return new ac(arguments[0],arguments[1]).union()}}extract(){if(ms(arguments[0],Ds)){const t=arguments[0];this._extracter=tc.extract(t)}else if(arguments[0]instanceof lr){const t=arguments[0];this._extracter=tc.extract(t)}}unionWithNull(t,e){return null===t&&null===e?null:null===e?t:null===t?e:Kl.union(t,e)}unionNoOpt(t){const e=this._geomFact.createPoint();return $l.overlayOp(t,e,Kl.UNION)}union(){if(null===this._geomFact&&(this._geomFact=this._extracter.getFactory()),null===this._geomFact)return null;if(this._extracter.isEmpty())return this._geomFact.createEmpty(this._extracter.getDimension());const t=this._extracter.getExtract(0),e=this._extracter.getExtract(1),n=this._extracter.getExtract(2);let i=null;if(t.size()>0){const e=this._geomFact.buildGeometry(t);i=this.unionNoOpt(e)}let s=null;if(e.size()>0){const t=this._geomFact.buildGeometry(e);s=this.unionNoOpt(t)}let r=null;n.size()>0&&(r=oc.union(n));const o=this.unionWithNull(s,r);let a=null;return a=null===i?o:null===o?i:nc.union(i,o),null===a?this._geomFact.createGeometryCollection():a}}const lc=Object.assign({},{topology:E,merge:$i}),cc={UnaryUnionOp:ac,GeoJSONReader:Pl,GeoJSONWriter:Al};function hc(t,n={}){let i=s(t=e(t)).dimension;if(console.log(i),1==i||2==i)return is(t,n);{let s=new cc.GeoJSONReader,r=new cc.GeoJSONWriter;if(null!=n.id&&null!=n.id){let i=Array.from(new Set(t.features.map((t=>t.properties[n.id])))),o=[];return i.forEach((i=>{let a=e(t.features.filter((t=>t.properties[n.id]==i))),l=lc.topology({foo:a}),c=lc.merge(l,l.objects.foo.geometries);o.push({type:"Feature",properties:{id:i},geometry:r.write(cc.UnaryUnionOp.union(s.read(e(c)).features[0].geometry))})})),{type:"FeatureCollection",features:o}}{let n=lc.topology({foo:t}),o=lc.merge(n,n.objects.foo.geometries);return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:3==i?r.write(cc.UnaryUnionOp.union(s.read(e(o)).features[0].geometry)):o}]}}}}const uc={OverlayOp:Kl,GeoJSONReader:Pl,GeoJSONWriter:Al};function gc(t,n={}){let i=new uc.GeoJSONReader,s=new uc.GeoJSONWriter,r=i.read(e(t)),o=n.buffer?n.buffer:.1,a=!!n.reverse,l=null;if(null!=n.clip&&null!=n.clip)l=e(n.clip);else{let t=1e-5;l={type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[-180+t,90-t],[180-t,90-t],[180-t,-90+t],[-180+t,-90+t],[-180+t,90-t]]]}}]}}let c=pc(hc(l),{dist:a?-o:o});c=i.read(c).features[0].geometry;let h=[];return r.features.forEach((t=>{let e=a?uc.OverlayOp.difference(t.geometry,c):uc.OverlayOp.intersection(t.geometry,c);e=e.hasOwnProperty("_coordinates")&&0==e._coordinates._coordinates.length?{type:"Point",coordinates:[]}:s.write(e),0!==e.coordinates.flat().length&&h.push({type:"Feature",properties:t.properties,geometry:e})})),{type:"FeatureCollection",features:h}}function dc(t){return 180*(t/6371.0088%(2*Math.PI))/Math.PI}const fc={BufferOp:Rl,GeoJSONReader:Pl,GeoJSONWriter:Al};function pc(t,n={}){let i=n.step?n.step:8,s=!1!==n.wgs84,r=0;switch(typeof n.dist){case"number":r=s?dc(n.dist):n.dist;break;case"string":r=n.dist;break;default:r=0}let o=new fc.GeoJSONReader,a=new fc.GeoJSONWriter,l=o.read(e(t)),c=[];return l.features.forEach((t=>{let e=0;e="number"==typeof r?r:s?dc(t.properties[r]):t.properties[r];let n=fc.BufferOp.bufferOp(t.geometry,e,i);n=a.write(n),0!==n.coordinates[0].length&&c.push({type:"Feature",properties:t.properties,geometry:n})})),c={type:"FeatureCollection",features:c},n.merge&&(c=hc(c)),n.clip&&(c=gc(c)),c}class _c{constructor(){_c.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._distanceTolerance=null;const t=arguments[0];this._inputGeom=t}static densify(t,e){const n=new _c(t);return n.setDistanceTolerance(e),n.getResultGeometry()}static densifyPoints(t,e,n){const i=new Oo,s=new Us;for(let r=0;r<t.length-1;r++){i.p0=t[r],i.p1=t[r+1],s.add(i.p0,!1);const o=i.getLength(),a=Math.trunc(o/e)+1;if(a>1){const t=o/a;for(let e=1;e<a;e++){const r=e*t/o,a=i.pointAlong(r);n.makePrecise(a),s.add(a,!1)}}}return s.add(t[t.length-1],!1),s.toCoordinateArray()}setDistanceTolerance(t){if(t<=0)throw new xs("Tolerance must be positive");this._distanceTolerance=t}getResultGeometry(){return new mc(this._distanceTolerance).transform(this._inputGeom)}}class mc extends Fl{constructor(){super(),mc.constructor_.apply(this,arguments)}static constructor_(){this.distanceTolerance=null;const t=arguments[0];this.distanceTolerance=t}transformCoordinates(t,e){const n=t.toCoordinateArray();let i=_c.densifyPoints(n,this.distanceTolerance,e.getPrecisionModel());return e instanceof jo&&1===i.length&&(i=new Array(0).fill(null)),this._factory.getCoordinateSequenceFactory().create(i)}transformPolygon(t,e){const n=super.transformPolygon.call(this,t,e);return e instanceof Eo?n:this.createValidArea(n)}createValidArea(t){return Rl.bufferOp(t,0)}transformMultiPolygon(t,e){const n=super.transformMultiPolygon.call(this,t,e);return this.createValidArea(n)}}_c.DensifyTransformer=mc;const yc={Densifier:_c,GeoJSONReader:Pl,GeoJSONWriter:Al};function Ec(t){var e=t[0],n=t[1],i=t[2];return Math.abs((e[0]-i[0])*(n[1]-e[1])-(e[0]-n[0])*(i[1]-e[1]))/2}function xc(t,e){return t[1][2]-e[1][2]}function Ic(t){return[t[0],t[1],0]}function Nc(t,e){return e-t}const Sc=Object.assign({},{topology:E,presimplify:function(t,e){var n=t.transform?Wi(t.transform):Ic,i=function(){var t={},e=[],n=0;function i(t,n){for(;n>0;){var i=(n+1>>1)-1,s=e[i];if(xc(t,s)>=0)break;e[s._=n]=s,e[t._=n=i]=t}}function s(t,i){for(;;){var s=i+1<<1,r=s-1,o=i,a=e[o];if(r<n&&xc(e[r],a)<0&&(a=e[o=r]),s<n&&xc(e[s],a)<0&&(a=e[o=s]),o===i)break;e[a._=i]=a,e[t._=i=o]=t}}return t.push=function(t){return i(e[t._=n]=t,n++),n},t.pop=function(){if(!(n<=0)){var t,i=e[0];return--n>0&&(t=e[n],s(e[t._=0]=t,0)),i}},t.remove=function(t){var r,o=t._;if(e[o]===t)return o!==--n&&(xc(r=e[n],t)<0?i:s)(e[r._=o]=r,o),o},t}();null==e&&(e=Ec);var s=t.arcs.map((function(t){var s,o,a,l=[],c=0;for(o=1,a=(t=t.map(n)).length-1;o<a;++o)(s=[t[o-1],t[o],t[o+1]])[1][2]=e(s),l.push(s),i.push(s);for(t[0][2]=t[a][2]=1/0,o=0,a=l.length;o<a;++o)(s=l[o]).previous=l[o-1],s.next=l[o+1];for(;s=i.pop();){var h=s.previous,u=s.next;s[1][2]<c?s[1][2]=c:c=s[1][2],h&&(h.next=u,h[2]=s[2],r(h)),u&&(u.previous=h,u[0]=s[0],r(u))}return t}));function r(t){i.remove(t),t[1][2]=e(t),i.push(t)}return{type:"Topology",bbox:t.bbox,objects:t.objects,arcs:s}},quantile:function(t,e){var n=[];return t.arcs.forEach((function(t){t.forEach((function(t){isFinite(t[2])&&n.push(t[2])}))})),n.length&&function(t,e){if(!(n=t.length))return;if((e=+e)<=0||n<2)return t[0];if(e>=1)return t[n-1];var n,i=(n-1)*e,s=Math.floor(i),r=t[s],o=t[s+1];return r+(o-r)*(i-s)}(n.sort(Nc),e)},simple:function(t,e){e=null==e?Number.MIN_VALUE:+e;var n=t.arcs.map((function(t){for(var n,i=-1,s=0,r=t.length,o=new Array(r);++i<r;)(n=t[i])[2]>=e&&(o[s++]=[n[0],n[1]]);return o.length=s,o}));return{type:"Topology",transform:t.transform,bbox:t.bbox,objects:t.objects,arcs:n}},feature:function(t,e){return"string"==typeof e&&(e=t.objects[e]),"GeometryCollection"===e.type?{type:"FeatureCollection",features:e.geometries.map((function(e){return Zi(t,e)}))}:Zi(t,e)}});t.add=function({x:t,field:e,expression:n}){let i=[...t.features.map((t=>({...t.properties})))],s=[];t.features.map((t=>t.properties)).forEach((t=>{s.push(Object.keys(t))})),s=Array.from(new Set(s.flat())),s.forEach((t=>{n=n.replace(t,`d.${t}`)})),n="d=> "+n;let r=i.map(N(n));i.forEach(((t,n)=>{t=Object.assign(t,{[e]:r[n]})}));let o=JSON.parse(JSON.stringify(t));return o.features.map(((t,e)=>t.properties={...i[e]})),o},t.aggregate=is,t.bbox=function(t){let n;n=Array.isArray(t)?t:as.geoBounds(e(t));let i=n[0][0],s=n[0][1],r=n[1][0],o=n[1][1];const a={type:"FeatureCollection",features:[{type:"Feature",properties:{id:1},geometry:{type:"Polygon",coordinates:-90===s?[[[i,o],[r,o]]]:[[[i,s],[i,o],[r+=360*(r<i),o],[r,s],[i,s]]]}}]};return ls(as.geoEquirectangularRaw,.02)(a)},t.border=function(t,n={}){let i=e(t);if(null==n.values&&null==n.id){const t=rs.topology({d:i});return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:rs.mesh(t,Object.entries(t.objects)[0][1],((t,e)=>t!==e))}]}}{const t=n.id,e=n.values,s=n.type?n.type:"rel",r=n.share?n.share:null,o=rs.topology({d:i}),a=i.features.map((e=>e.properties[t])),l=rs.neighbors(o.objects.d.geometries),c=new Map(i.features.map((n=>[n.properties[t],n.properties[e]])));let h=[];a.forEach((e=>{l[a.indexOf(e)].map((t=>({properties:{i:e,j:a[t],varoptionsi:+c.get(e),varoptionsj:+c.get(a[t]),disc:"rel"==s?0!=os.min([+c.get(e),+c.get(a[t])])?os.max([+c.get(e),+c.get(a[t])])/os.min([+c.get(e),+c.get(a[t])]):null:os.max([+c.get(e),+c.get(a[t])])-os.min([+c.get(e),+c.get(a[t])])}}))).forEach((e=>{let n=rs.mesh(o,o.objects.d,((n,i)=>n.properties[t]==e.properties.i&i.properties[t]==e.properties.j)),i=Object.assign({type:"Feature"},e);h.push(Object.assign(i,{geometry:n}))}))})),h.sort(((t,e)=>os.descending(t.properties.disc,e.properties.disc)));const u=h.length;return h.map((t=>t.properties)).forEach(((t,e)=>{Object.assign(t,{share:(e+1)/u})})),null!=r&&(h=h.filter((t=>t.properties.share<r))),i.features=h,i}},t.buffer=pc,t.centroid=function(t,n={}){let i=!1!==n.largest,s=!0===n.planar,r=ss.geoPath(ss.geoIdentity());t=e(t);const o=function(t){var e={},n=0;return t.geometry.coordinates.forEach((function(t){var i={type:"Polygon",coordinates:t},o=s?r.area(i):ss.geoArea(i);o>n&&(n=o,e=i)})),e};let a=t.features.map((t=>(t.geometry.coordinates=s?r.centroid(1==i?"Polygon"==t.geometry.type?t:o(t):t):ss.geoCentroid(1==i?"Polygon"==t.geometry.type?t:o(t):t),t.geometry.type="Point",t)));return t.features=a,t},t.clip=gc,t.coords2geo=function(t,e={}){let n=JSON.parse(JSON.stringify(t)),i=e.lat||e.latitude,s=e.lon||e.lng||e.longitude,r=e.coords||e.coordinates;!e.sep&&!e.separator||(e.sep||e.separator);let o=!!e.reverse;if(null==i&&null==s&&null==r){let t=["coords","Coords","coord","Coords","Coordinates","coordinates","Coordinate","coordinate"],e=["lat","Lat","LAT","Latitude","latitude"],o=["lon","Lon","LON","lng","Lng","LNG","Longitude","longitude"],a=[];n.forEach((t=>a.push(Object.keys(t)))),a=Array.from(new Set(a.flat())),i=e.filter((t=>a.includes(t)))[0],s=o.filter((t=>a.includes(t)))[0],r=t.filter((t=>a.includes(t)))[0]}if(i&&s){let e=o?s:i,n=o?i:s;return{type:"FeatureCollection",features:t.map((t=>({type:"Feature",properties:t,geometry:{type:"Point",coordinates:[+t[n],+t[e]]}})))}}return r?{type:"FeatureCollection",features:t.map((t=>({type:"Feature",properties:t,geometry:{type:"Point",coordinates:o?fs(t[r]):fs(t[r]).reverse()}})))}:r},t.densify=function(t,n={}){let i=n.dist?n.dist:1,s=new yc.GeoJSONReader,r=new yc.GeoJSONWriter,o=s.read(e(t)),a=[];return o.features.forEach((t=>{let e=yc.Densifier.densify(t.geometry,i);e=r.write(e),0!==e.coordinates[0].length&&a.push({type:"Feature",properties:t.properties,geometry:e})})),{type:"FeatureCollection",features:a}},t.dissolve=ji,t.featurecollection=e,t.filter=function(t,e=(t=>t),n="properties"){let i={...t},s=i.features;Array.from(new Set(s.map((t=>Object.keys(t))).flat()));let r=[];s.forEach(((t,i)=>{0!=[t[n]].filter(e).length&&r.push(t)}));let o={};return Object.keys(i).forEach((t=>{o=Object.assign(o,{[t]:"features"==t?r:i[t]})})),o},t.geolines=function(){let t=[];return[["Equator",0],["Tropic of Cancer",23.43656],["Tropic of Capricorn",-23.43636],["Arctic Circle",66.56345],["Antarctic Circle",-66.56364]].forEach((e=>{t.push({type:"Feature",properties:{name:e[0],latitude:e[1]},geometry:ps(e[1])})})),{type:"FeatureCollection",features:t}},t.head=function({x:t,field:e,nb:n=10}){let i=[...t.features];i=i.filter((t=>""!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>t.properties[e]!=1/0)).filter((t=>t.properties[e]!=-1/0)).filter((t=>NaN!=t.properties[e])),i.sort(((t,n)=>+n.properties[e]-+t.properties[e])),i=i.slice(0,n);let s=JSON.parse(JSON.stringify(t));return s.features=i,s},t.keep=function({x:t,fields:e}){let n=[];return t.features.map((t=>t.properties)).forEach((t=>{n.push(Object.keys(t))})),n=Array.from(new Set(n.flat())),S({x:t,field:n.filter((t=>!e.includes(t)))})},t.map=function(t,e=(t=>t),n="properties"){let i={...t},s=i.features,r=Array.from(new Set(s.map((t=>Object.keys(t))).flat())),o=s.map((t=>t[n])).map(e),a=[];s.forEach(((t,e)=>{let i={};r.forEach((s=>{i=Object.assign(i,{[s]:s==n?o[e]:t[s]})})),a.push(i)}));let l={};return Object.keys(i).forEach((t=>{l=Object.assign(l,{[t]:"features"==t?a:i[t]})})),l},t.nodes=function(t){t=e(t);let n=[];return t.features.forEach((t=>{let e=t.geometry.coordinates.flat(1/0),i=[];for(let n=0;n<e.length;n+=2)i.push({type:"Feature",properties:t.properties,geometry:{type:"Point",coordinates:[e[n],e[n+1]]}});n.push(i)})),{type:"FeatureCollection",features:n.flat()}},t.remove=S,t.rewind=function(t,e={}){let i=!1!==e.outer,s=!0===(!1!==e.mutate)?t:JSON.parse(JSON.stringify(t));for(let t=0;t<s.features.length;t++)if("Polygon"===s.features[t].geometry.type)n(s.features[t].geometry.coordinates,i);else if("MultiPolygon"===s.features[t].geometry.type)for(let e=0;e<s.features[t].geometry.coordinates.length;e++)n(s.features[t].geometry.coordinates[e],i);return s},t.select=function({x:t,expression:e}){let n=[...t.features],i=[];t.features.map((t=>t.properties)).forEach((t=>{i.push(Object.keys(t))})),i=Array.from(new Set(i.flat())),i.forEach((t=>{e=e.replace(t,`d.properties.${t}`)})),e="d => "+e;let s=JSON.parse(JSON.stringify(t));return s.features=n.filter(N(e)),s},t.simplify=function(t,n={}){let i,s=n.k?n.k:.5;i=!0===n.merge?hc(t):e(t);let r=Sc.topology({foo:i}),o=Sc.presimplify(r);return o=Sc.simple(o,Sc.quantile(o,s)),i.features=Sc.feature(o,Object.keys(o.objects)[0]).features,i},t.subset=function({x:t,field:e,selection:n,inverse:i=!1}){let s=[...t.features];n=Array.isArray(n)?n:[n],i&&(n=Array.from(new Set(s.map((t=>t.properties[e])))).filter((t=>!n.includes(t))));let r=[];n.forEach((t=>{r.push(s.filter((n=>n.properties[e]==t)))}));let o=JSON.parse(JSON.stringify(t));return o.features=r.flat(),o},t.table=function(t){return JSON.parse(JSON.stringify(t.features.map((t=>t.properties))))},t.tail=function({x:t,field:e,nb:n=10}){let i=[...t.features];i=i.filter((t=>""!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>null!=t.properties[e])).filter((t=>t.properties[e]!=1/0)).filter((t=>t.properties[e]!=-1/0)).filter((t=>NaN!=t.properties[e])),i.sort(((t,n)=>+t.properties[e]-+n.properties[e])),i=i.slice(0,n);let s=JSON.parse(JSON.stringify(t));return s.features=i,s},t.tissot=function(t){const e=On().center((t=>t)).radius(t/4).precision(10),n=[];for(let i=-80;i<=80;i+=t)for(let s=-180;s<180;s+=t)n.push({type:"Feature",properties:{},geometry:{type:"MultiPolygon",coordinates:[e([s,i]).coordinates]}});return{type:"FeatureCollection",features:n}},t.topojson=function(t){return E({x:t})},t.type=s,t.union=hc,Object.defineProperty(t,"__esModule",{value:!0})}));